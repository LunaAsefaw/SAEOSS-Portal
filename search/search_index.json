{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SAEOSS-Portal","text":"<p>The SAEOSS-Portal has been proposed as a system of software components functioning together as the national central earth observation geospatial repository, with a view to metadata and open geospatial API standards compliance as well as user impact maximization.</p> <p> </p>"},{"location":"#introduction","title":"Introduction","text":""},{"location":"#purpose","title":"Purpose","text":"<p>The SAEOSS-Portal is designed to be a robust, information sharing platform with the aim of promoting information sharing from various organizations related to the research conducted by the South-African National Space Agency as well as the South-African Environmental Observation Network and other supporting organizations.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We would love to collaborate with you! But first, please read our contributor guidelines which describe how to report issues, plan and contribute feature additions etc.</p>"},{"location":"#code-of-conduct","title":"Code of Conduct","text":"<p>Our community in this project is aligned with our code of conduct - please be sure to read and abide by that document in all interactions with out community.</p>"},{"location":"#diversity-statement","title":"Diversity Statement","text":"<p>This project welcomes and encourages participation by everyone.</p> <p>No matter how you identify yourself or how others perceive you: we welcome you. We welcome contributions from everyone as long as they interact constructively with our community.</p> <p>While much of the work for our project is technical in nature, we value and encourage contributions from those with expertise in other areas, and welcome them into our community.</p>"},{"location":"#project-partners","title":"Project Partners","text":"<p>By partnering up with SANSA (South african National Space Agency), SAEON (South-African Environmental Observation Network) and The Department of Science &amp; Innovation, joint interests sparked the conceptualization of the SAEOSS-portal platform. </p> <p></p>"},{"location":"#project-badges","title":"Project Badges","text":""},{"location":"#project-chatroom","title":"Project Chatroom","text":"<p>Currently we do not have a project chat room. Rather use GitHub issue tracker instead. GitHub Issue Tracker</p>"},{"location":"#disclaimer","title":"Disclaimer","text":"The software provided by this project is provided 'as is'. All information provided within the platform should be independently verified before using as the basis for action. The contributors and developers of this platform take no responsibility for any loss of revenue, life, physical harm or any other adverse outcome that may occur as a result of the use of this platform."},{"location":"#license","title":"License","text":"<p>This platform was released under the GNU Affero license. Please take a moment tor review the full extent of the License.</p>"},{"location":"#kartoza","title":"Kartoza","text":"<p>The SAEOSS-Portal platform has been developed by Kartoza, leaders in GIS and Geospatial technology and innovation.  </p>"},{"location":"about/","title":"About","text":""},{"location":"about/#license","title":"License","text":"<p>Published under AGPL-3. See the full license text.</p>"},{"location":"about/#contributors","title":"Contributors","text":"Contributor GitHub Handle Faneva Andriamiadantsoa Fanevanjanahary Zulfikar Akbar Muzakki zamuzakki Juanique Voogt voogt Eli Volschenk EliVolsch Luna Asefaw LunaAsefaw Mohab Khaled Mohab25 Marina van der Merwe MarinaKartoza"},{"location":"about/#project-fundersbackers","title":"Project Funders/Backers","text":"<p>By partnering up with SANSA (SOuth african National Space Agency), SAEON (South-African Environmental Observation Network) and The Department of Science &amp; Innovation, joint interests sparked the conceptualization of the SAEOSS-portal platform. </p> <p></p> <p>Another fine project contributed to by: Kartoza.com</p>"},{"location":"about/code-of-conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"about/code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>"},{"location":"about/code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or   advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic   address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"about/code-of-conduct/#our-responsibilities","title":"Our Responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"about/code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>"},{"location":"about/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident.  Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>"},{"location":"about/code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html</p>"},{"location":"about/contributing/","title":"Contributing to SAEOSS-Portal","text":"<p>First off, thanks for taking the time to contribute! \ud83c\udf89 \ud83d\ude18 \u2728</p> <p>The following is a set of guidelines for contributing to this project. These are mostly guidelines, not rules. Use your best judgment, and feel free to propose changes to this document in a pull request.</p>"},{"location":"about/contributing/#reporting-bugs","title":"Reporting Bugs","text":"<p>Bugs are tracked as GitHub issues. Search the list and try reproduce on your local machine with a clean profile before you create an issue.  When you create an issue, please provide the following information by filling in the template.</p> <p>Explain the problem and include additional details to help maintainers reproduce the problem:</p> <ul> <li>Use a clear and descriptive title for the issue to identify the problem.</li> <li>Describe the exact steps which reproduce the problem in as many details   as possible. Don't just say what you did, but explain how you did it. For   example, if you moved the cursor to the end of a line, explain if you used a   mouse or a keyboard.</li> <li>Provide specific examples to demonstrate the steps. Include links to   files or GitHub projects, or copy/pasteable snippets, which you use in those   examples. If you're providing snippets on the issue, use Markdown code blocks.</li> <li>Describe the behavior you observed after following the steps and point   out what exactly is the problem with that behavior.</li> <li>Explain which behavior you expected to see instead and why.</li> <li>Include screenshots and animated GIFs which show you following the   described steps and clearly demonstrate the problem.</li> </ul> <p>A template for reporting bugs can also be used. Just copy and paste the template, and then proceed to fill in all the information. The template can be found here</p>"},{"location":"about/contributing/#suggesting-enhancements","title":"Suggesting Enhancements","text":"<p>In case you want to suggest an enhancement, please follow this guideline to help maintainers and the community understand your suggestion. Before creating suggestions, please check issue list if there's already a request.</p> <p>Create an issue and provide the following information:</p> <ul> <li>Use a clear and descriptive title for the issue to identify the   suggestion.</li> <li>Provide a step-by-step description of the suggested enhancement in as   many details as possible.</li> <li>Provide specific examples to demonstrate the steps. Include   copy/pasteable snippets which you use in those examples, as Markdown code   blocks.</li> <li>Include screenshots and animated GIFs which helps demonstrate the steps   or point out the part of project which the suggestion is related to.</li> <li>Explain why this enhancement would be useful to most users.</li> <li>List some other text editors or applications where this enhancement   exists.</li> </ul>"},{"location":"about/contributing/#first-code-contribution","title":"First Code Contribution","text":"<p>Unsure where to begin contributing? You can start by looking through these <code>document</code>, <code>good first issue</code> and <code>help wanted</code> issues:</p> <ul> <li>document issues: issues which should be reviewed or improved.</li> <li>good first issues: issues which should only require a few lines of code,   and a test or two.</li> <li>help wanted issues: issues which should be a bit more involved than   beginner issues.</li> </ul>"},{"location":"about/contributing/#pull-requests","title":"Pull Requests","text":""},{"location":"about/contributing/#development-workflow","title":"Development workFlow","text":"<ul> <li>Set up your development environment</li> <li>Make change from a right branch</li> <li>Be sure the code passes tests</li> <li>Make a pull request</li> </ul>"},{"location":"about/contributing/#development-environment","title":"Development environment","text":"<ul> <li>Prepare your machine and it's packages installed.</li> <li>Checkout our repository</li> <li>Install dependencies by <code>pip install -r REQUIREMENTS-dev.txt</code></li> </ul>"},{"location":"about/contributing/#make-changes","title":"Make changes","text":""},{"location":"about/contributing/#checkout-a-branch","title":"Checkout a branch","text":"<ul> <li>master: PR Base branch.</li> <li>production: latest release branch with distribution files. Never make a PR on this.</li> <li>gh-pages: API docs, examples and demo</li> </ul>"},{"location":"about/contributing/#check-code-style","title":"Check Code Style","text":"<p>Run the pylance extension and make sure all the tests pass.</p>"},{"location":"about/contributing/#test","title":"Test","text":"<p>Run <code>TODO</code> and verify all the tests pass. If you are adding new commands or features, they must include tests. If you are changing functionality, update the tests if you need to.</p>"},{"location":"about/contributing/#commit","title":"Commit","text":"<p>Follow our commit message conventions.</p>"},{"location":"about/contributing/#yes-pull-request","title":"Yes! Pull request","text":"<p>Make your pull request, then describe your changes.</p>"},{"location":"about/contributing/#title","title":"Title","text":"<p>Follow other PR title format on below. <pre><code>    &lt;Type&gt;: Short Description (fix #111)\n    &lt;Type&gt;: Short Description (fix #123, #111, #122)\n    &lt;Type&gt;: Short Description (ref #111)\n</code></pre></p> <ul> <li>capitalize first letter of Type</li> <li>use present tense: 'change' not 'changed' or 'changes'</li> </ul>"},{"location":"about/contributing/#description","title":"Description","text":"<p>If it has related issues, add links to the issues(like <code>#123</code>) in the description. Fill in the Pull Request Template by check your case.</p>"},{"location":"about/contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>This project and everyone participating in it is governed by the Code of Conduct. By participating, you are expected to uphold this code. Please report unacceptable behavior to tim@kartoza.com.</p> <p>This guide is based on atom contributing guide, CocoaPods and ESLint</p>"},{"location":"about/disclaimer/","title":"Disclaimer","text":"<p>Disclaimer about project.</p>"},{"location":"about/license/","title":"GNU Affero General Public License","text":"<p>Version 3, 19 November 2007 Copyright \u00a9 2007 Free Software Foundation, Inc. &lt;http://fsf.org/&gt;</p> <p>Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.</p>"},{"location":"about/license/#preamble","title":"Preamble","text":"<p>The GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.</p> <p>The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.</p> <p>When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.</p> <p>Developers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.</p> <p>A secondary benefit of defending all users' freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate.  Many developers of free software are heartened and encouraged by the resulting cooperation.  However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.</p> <p>The GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community.  It requires the operator of a network server to provide the source code of the modified version running there to the users of that server.  Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.</p> <p>An older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals.  This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p>"},{"location":"about/license/#terms-and-conditions","title":"TERMS AND CONDITIONS","text":""},{"location":"about/license/#0-definitions","title":"0. Definitions","text":"<p>\u201cThis License\u201d refers to version 3 of the GNU Affero General Public License.</p> <p>\u201cCopyright\u201d also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.</p> <p>\u201cThe Program\u201d refers to any copyrightable work licensed under this License.  Each licensee is addressed as \u201cyou\u201d.  \u201cLicensees\u201d and \u201crecipients\u201d may be individuals or organizations.</p> <p>To \u201cmodify\u201d a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a \u201cmodified version\u201d of the earlier work or a work \u201cbased on\u201d the earlier work.</p> <p>A \u201ccovered work\u201d means either the unmodified Program or a work based on the Program.</p> <p>To \u201cpropagate\u201d a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.</p> <p>To \u201cconvey\u201d a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.</p> <p>An interactive user interface displays \u201cAppropriate Legal Notices\u201d to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.</p>"},{"location":"about/license/#1-source-code","title":"1. Source Code","text":"<p>The \u201csource code\u201d for a work means the preferred form of the work for making modifications to it.  \u201cObject code\u201d means any non-source form of a work.</p> <p>A \u201cStandard Interface\u201d means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.</p> <p>The \u201cSystem Libraries\u201d of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A \u201cMajor Component\u201d, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.</p> <p>The \u201cCorresponding Source\u201d for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.</p> <p>The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.</p> <p>The Corresponding Source for a work in source code form is that same work.</p>"},{"location":"about/license/#2-basic-permissions","title":"2. Basic Permissions","text":"<p>All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.</p> <p>You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.</p> <p>Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.</p>"},{"location":"about/license/#3-protecting-users-legal-rights-from-anti-circumvention-law","title":"3. Protecting Users' Legal Rights From Anti-Circumvention Law","text":"<p>No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.</p> <p>When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.</p>"},{"location":"about/license/#4-conveying-verbatim-copies","title":"4. Conveying Verbatim Copies","text":"<p>You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.</p> <p>You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.</p>"},{"location":"about/license/#5-conveying-modified-source-versions","title":"5. Conveying Modified Source Versions","text":"<p>You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:</p> <ul> <li>a) The work must carry prominent notices stating that you modified it, and giving a relevant date.</li> <li>b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \u201ckeep intact all notices\u201d.</li> <li>c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy.  This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged.  This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.</li> <li>d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.</li> </ul> <p>A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \u201caggregate\u201d if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.</p>"},{"location":"about/license/#6-conveying-non-source-forms","title":"6. Conveying Non-Source Forms","text":"<p>You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:</p> <ul> <li>a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.</li> <li>b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.</li> <li>c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source.  This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.</li> <li>d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge.  You need not require recipients to copy the Corresponding Source along with the object code.  If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source.  Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.</li> <li>e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.</li> </ul> <p>A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.</p> <p>A \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, \u201cnormally used\u201d refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.</p> <p>\u201cInstallation Information\u201d for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.</p> <p>If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).</p> <p>The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.</p> <p>Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.</p>"},{"location":"about/license/#7-additional-terms","title":"7. Additional Terms","text":"<p>\u201cAdditional permissions\u201d are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.</p> <p>When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.</p> <p>Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:</p> <ul> <li>a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or</li> <li>b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or</li> <li>c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or</li> <li>d) Limiting the use for publicity purposes of names of licensors or authors of the material; or</li> <li>e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or</li> <li>f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.</li> </ul> <p>All other non-permissive additional terms are considered \u201cfurther restrictions\u201d within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.</p> <p>If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.</p> <p>Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.</p>"},{"location":"about/license/#8-termination","title":"8. Termination","text":"<p>You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).</p> <p>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p> <p>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p> <p>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.</p>"},{"location":"about/license/#9-acceptance-not-required-for-having-copies","title":"9. Acceptance Not Required for Having Copies","text":"<p>You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.</p>"},{"location":"about/license/#10-automatic-licensing-of-downstream-recipients","title":"10. Automatic Licensing of Downstream Recipients","text":"<p>Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.</p> <p>An \u201centity transaction\u201d is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.</p> <p>You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.</p>"},{"location":"about/license/#11-patents","title":"11. Patents","text":"<p>A \u201ccontributor\u201d is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor's \u201ccontributor version\u201d.</p> <p>A contributor's \u201cessential patent claims\u201d are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, \u201ccontrol\u201d includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.</p> <p>Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.</p> <p>In the following three paragraphs, a \u201cpatent license\u201d is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To \u201cgrant\u201d such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.</p> <p>If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  \u201cKnowingly relying\u201d means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.</p> <p>If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.</p> <p>A patent license is \u201cdiscriminatory\u201d if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.</p> <p>Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.</p>"},{"location":"about/license/#12-no-surrender-of-others-freedom","title":"12. No Surrender of Others' Freedom","text":"<p>If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.</p>"},{"location":"about/license/#13-remote-network-interaction-use-with-the-gnu-general-public-license","title":"13. Remote Network Interaction; Use with the GNU General Public License","text":"<p>Notwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software.  This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.</p> <p>Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.</p>"},{"location":"about/license/#14-revised-versions-of-this-license","title":"14. Revised Versions of this License","text":"<p>The Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU Affero General Public License \u201cor any later version\u201d applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.</p> <p>If the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.</p> <p>Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.</p>"},{"location":"about/license/#15-disclaimer-of-warranty","title":"15. Disclaimer of Warranty","text":"<p>THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p>"},{"location":"about/license/#16-limitation-of-liability","title":"16. Limitation of Liability","text":"<p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p>"},{"location":"about/license/#17-interpretation-of-sections-15-and-16","title":"17. Interpretation of Sections 15 and 16","text":"<p>If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.</p> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"about/license/#how-to-apply-these-terms-to-your-new-programs","title":"How to Apply These Terms to Your New Programs","text":"<p>If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.</p> <p>To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \u201ccopyright\u201d line and a pointer to where the full notice is found.</p> <pre><code>&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.\n</code></pre> <p>Also add information on how to contact you by electronic and paper mail.</p> <p>If your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source.  For example, if your program is a web application, its interface could display a \u201cSource\u201d link that leads users to an archive of the code.  There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.</p> <p>You should also get your employer (if you work as a programmer) or school, if any, to sign a \u201ccopyright disclaimer\u201d for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see &lt;http://www.gnu.org/licenses/&gt;.</p>"},{"location":"about/running-instances/","title":"Examples of Running Instances","text":""},{"location":"administrator/","title":"Administrators Documentation","text":"<p>This is the homepage for all administrator related documentation.</p> <p>The content is divided into two sections:</p> <ul> <li>The Administrator guide, which describes common workflows for system administrators in a tutorial format.</li> <li>The Administrator manual, which describes each page of the admin user interface and what the various options on that page do.</li> </ul>"},{"location":"administrator/guide/","title":"Administrator Guide","text":""},{"location":"administrator/guide/#creating-a-system-admin-account","title":"Creating a system admin account","text":"<p>Please note a system administrator cannot be created via the web interface. This needs to be done via the terminal command in the server</p> <ol> <li>Open up a terminal in the server</li> <li>Run the following command  <code>docker exec -it saeoss_ckan-web_1 poetry run ckan sysadmin add admin</code></li> <li>Answer the prompts in order to create the new admin user</li> </ol> <p>After the account\u2019s successful creation you can log into the site with the admin user account created earlier</p>"},{"location":"administrator/guide/#manage-user-accounts","title":"Manage user accounts","text":"<p>A sysadmin user has full access to user accounts</p> <ol> <li>To find a user\u2019s profile, enter the following address in your internet browser https://{sitename}/user/ ('/user/' has been appended to the website\u2019s url)</li> <li> <p>You can search for a specific profile using the search box provided </p> </li> <li> <p>You can search by any part of the user profile, including their e-mail address.</p> <ul> <li>This is useful if, for example, a user has forgotten their user ID</li> <li>For non-sysadmin users, the search on this page will only match public parts of the profile, so they cannot search by e-mail address.</li> </ul> </li> <li>On their user profile, you will see a \u201cManage\u201d button. From there you will be able to view the user settings page. You can delete the user or change any of its settings, including their username, name and password.</li> <li>To save any changes enter your sysadmin password in the box </li> </ol>"},{"location":"administrator/guide/#add-organisation","title":"Add Organisation","text":"<p>A sysadmin user has full access to organizations. For example, you have access to every organization as if you were a member of that organization. Thus most management operations are done in exactly the same way as in the normal web interface</p> <ol> <li>Click on \u201cOrganisations\u201d link in navbar</li> <li>Click on \u201cAdd organisation\u201d</li> <li>Fill out the required fields</li> <li>If you do not upload a thumbnail, a predefined image will show on web portal</li> <li>Save changes and the organisation will have been added</li> </ol>"},{"location":"administrator/guide/#adding-a-user-to-an-organisation","title":"Adding a user to an organisation","text":"<ol> <li>Click on \u201cOrganisations\u201d link in navbar</li> <li>Click on the organisation you want to add a user to</li> <li>Click on \u201cManage\u201d button</li> <li>Navigate to members</li> <li>Click on \u201cAdd Member\u201d button</li> <li>Search for username or invite by email </li> <li>Choose their role </li> </ol> <p>Publisher: Can add/edit and delete datasets, as well as manage organization members.</p> <p>Editor: Can add and edit datasets, but not manage organization members.</p> <p>Member: Can view the organization's private datasets, but not add new datasets.</p>"},{"location":"administrator/guide/#edit-member-access-to-organisation","title":"Edit member access to organisation","text":"<ol> <li>Click on \u201cOrganisations\u201d link in navbar or enter link http://{sitename}:5000/organization/</li> <li>Choose  \u201cOrganisations\u201d</li> <li>Click on \u201cManage\u201d button</li> <li>Navigate to members</li> <li>Remove member by clicking on \u201cx\u201d button</li> <li>Edit member by clicking on wrench icon</li> </ol>"},{"location":"administrator/guide/#managing-organizations-and-datasets","title":"Managing organizations and datasets","text":"<p>A sysadmin user has full access to user accounts, organizations and datasets. For example, you have access to every organization as if you were a member of that organization. Thus most management operations are done in exactly the same way as in the normal web interface.</p> <p>For example, to add or delete users to an organization, change a user\u2019s role in the organization, delete the organization or edit its description, etc, visit the organization\u2019s home page. You will see the \u2018Admin\u2019 button as if you were a member of the organization. You can use this to perform all organization admin functions. For details, see the User guide.</p> <p>Similarly, to edit, update or delete a dataset, go to the dataset page and use the \u2018Edit\u2019 button. As an admin user you can see all datasets including those that are private to an organization. They will show up when doing a dataset search.</p>"},{"location":"administrator/guide/#moving-a-dataset-between-organizations","title":"Moving a dataset between organizations","text":"<ol> <li>Search for the dataset on the Search page (http://{sitename}/dataset/)</li> <li>Click on the dataset to view</li> <li>Click on 'Manage' button in the top right</li> <li>In the field 'Responsible organisation Name:' select the organisation name you want to transfer the dataset to </li> <li>Save changes</li> </ol>"},{"location":"administrator/guide/#permanently-deleting-datasets","title":"Permanently deleting datasets","text":"<p>A dataset which has been deleted is not permanently removed from CKAN; it is simply marked as \u2018deleted\u2019 and will no longer show up in search, etc. The dataset\u2019s URL cannot be re-used for a new dataset</p> <ol> <li>Navigate to the dataset\u2019s \u201cEdit\u201d page, and delete it.</li> <li>Click on your profile in the top right corner of the navigation bar </li> <li>Select 'Sysadmin settings' in the dropdown</li> <li>Select 'Trash' </li> <li>From this page you can purge metadata records/ organisations or groups </li> </ol>"},{"location":"administrator/manual/","title":"Administrator Manual","text":"<p>This section of the documentation describes every page in the application and what the various components of that page do. The manual is intended to function as a reference for the application. For narrative / workflow based tutorials, you may prefer to work through our Administrator guide.</p> <p>The administrator manual aims to assist user in learning the fundamentals of using the SAEOSS-portal platform. The goal of the documentation is to clear up any doubts or concerns related to workflows and will feature a page by page layout, making it easy for users to follow along.</p>"},{"location":"administrator/manual/#index","title":"Index:","text":"<ul> <li>Dashboard</li> <li>Profile</li> <li>Metadata</li> <li>Map</li> <li>Admin Page</li> <li>About</li> <li>Help</li> </ul>"},{"location":"administrator/manual/#error-reporting","title":"Error reporting","text":"<p>We take pride and care to ensure our work is factual, accurate and informative. In the highly unlikely event that and error or bug is found please report it through one of the following channels:</p> <p>Github Issues: Github is the preferred method of error reporting ensuring reported errors are addressed in the quickest turnaround time possible. Read more about opening issues in the Developer Workflows</p> <p>Email: Errors can be raised via email through the following channels. However this is not a recommended path as it has long turn around times.</p> <p>Administrator: Alternatively users can report errors to the administrators who can report the error though one of the above mentioned channels if they are unable to resolve the issue.</p>"},{"location":"developer/","title":"For Developers","text":"<p>This is the homepage for all developer related documentation.</p> <ul> <li>The developer guide, which describes common workflows for developers in a tutorial format. This includes instructions on how to set up your developer environment, check out the code, run it locally etc.</li> <li>The developer manual, which describes each python module and its classes, functions etc. This section is autogenerated.</li> <li>The api guide, which describes common workflows for using the restful API.</li> <li>The api manual, which describes each API endpoint and its parameters, return values etc. This section is autogenerated.</li> </ul>"},{"location":"developer/api/","title":"API Documentation","text":"<p>This is the homepage for all API related documentation.</p> <ul> <li>The api guide, which describes common workflows for using the restful API.</li> <li>The api manual, which describes each API endpoint and its parameters, return values etc. This section is autogenerated.</li> </ul>"},{"location":"developer/api/guide/","title":"API Guide","text":""},{"location":"developer/api/manual/","title":"API Reference","text":""},{"location":"developer/documentation/","title":"Project Documentation","text":"<p>This documentation describes how to set up and contribute to the project documentation. It consists of:</p> <ul> <li>Setting up mkdocs: explains how to setup mkdocs for your project.</li> <li>Writing Documentation: explains how to contribute to the documentation and various standards.</li> </ul>"},{"location":"developer/documentation/make-docs/","title":"Working with documentation","text":"<p>Documentation is written using mkdocs. A detailed description on getting-started with mkdocs is available here. Developer documentation will be created and generated using mkdocstrings.</p>"},{"location":"developer/documentation/make-docs/#install-mkdocs","title":"Install mkdocs","text":"<ul> <li>Open the terminal</li> <li>Run <code>pip install mkdocs</code></li> <li>This should install mkdocs and all requirements</li> </ul>"},{"location":"developer/documentation/make-docs/#creating-a-new-project","title":"Creating a new project","text":"<p>This should not be required as the mkdocs has been created already, but serves more of a guide for a user whom are new to mkdocs.</p> <ul> <li>Open the terminal</li> <li>Run <code>mkdocs new .</code></li> <li>This will generate the documents folder with the home page index markdown file</li> </ul>"},{"location":"developer/documentation/make-docs/#updating-the-mkdocsyml-file","title":"Updating the mkdocs.yml file","text":"<p>Mostly, the only changes a user will need to make is to the nav section in the mkdocs.yml file (Figure 1). Other options, such as the themes, plugins and extensions, should require no changes.</p> <p></p> <p>Figure 1: Navigation example of mkdocs</p> <p>Here is an explanation on how the nav should be updated:</p> <ul> <li>It is important to keep to the structure of the mkdocs</li> <li>Each section focuses on a particular aspect, for example User will provide information on installing   the plugin, a guide on how to use the plugin, etc.</li> <li>The order in which the nav is structured will determine the tabs order on the site, as shown in Figure 2</li> </ul> <p></p> <p>Figure 2: Tabs in a generated site</p> <ul> <li>Each tab, or group, will then be structured as in Figure 3</li> </ul> <p></p> <p>Figure 3: Structure created by markdown headings</p> <ul> <li>The additional titles (in the Plugin guide section in the above example) is based on the headings   provided in the guide markdown file (cplus_ui_guide.md in this case)</li> <li>Headings for each section should be short, but descriptive</li> <li>The section itself can have a more detailed description</li> <li>Add screenshots where possible. This will make the guide(s) user-friendly</li> </ul>"},{"location":"developer/documentation/make-docs/#mkdocstrings","title":"mkdocstrings","text":"<p>This is an important aspect of documenting code. Using mkdocstrings is an easy and effective way of keeping track of classes, functions, etc. Any changes to the code will automatically update here, but the developer needs to make the changes in the code (comments) for this to happen.</p> <p>The comments for mkdocstrings is three sections:</p> <ul> <li>Description: A description on what the function does. A detailed description are welcome</li> <li>Args: List of parameters for the function. Type and description should be included</li> <li>Returns: A list of values which the function would return. Type should be included, with a description</li> </ul> <p></p> <p>Here is an example of the end-result:</p> <p></p>"},{"location":"developer/documentation/make-docs/#mkdocstrings-options","title":"mkdocstrings options","text":"<p>The user can also do fine-tuning of the resulting site. Here is a list of important options to be aware of: members, show_root_directory, and show_source.</p> <ul> <li>members: Only these function/classes will be shown</li> </ul> <p></p> <ul> <li>show_root_directory: The root directory of the code</li> <li>Best will be to disable this, as it looks neater</li> <li>Here is an example of show_root_directory enabled, followed by an example when it is disabled:</li> </ul> <p></p> <p></p> <ul> <li>show_source: Shows the directory of the source code and a snippet of the code</li> </ul> <p></p> <p>More information on this can be found here.</p>"},{"location":"developer/documentation/make-docs/#serving-the-pages-locally","title":"Serving the pages locally","text":"<p>This step is useful when making changes and the user wants to test and review their changes to the mkdocs before creating a pull request.</p> <ul> <li>Open the terminal</li> <li>Run <code>mkdocs serve</code></li> <li>Figure 4 shows an example of the result</li> </ul> <p></p> <p>Figure 4: Console example of serving mkdocs</p> <ul> <li>On default, mkdocs is served to localhost:8000. But if the port is already in use, the user needs to provide a port number</li> <li>Run \"mkdocs serve -a localhost:8001\". The user can use a port number of their choosing</li> <li>Open the URL in a browser: localhost:8000</li> <li>The Home page should be similar to Figure 5</li> </ul> <p></p> <p>Figure 5: Site example. This is the Home page</p>"},{"location":"developer/documentation/make-docs/#errors","title":"Errors","text":"<p>When performing the serve, mkdocs will automatically check for any errors. An example will be when a file linked in the documentation cannot be found (Figure 6).</p> <p></p> <p>Figure 6: Missing file example when serving mkdocs</p> <p>Be sure to check for such errors in the console prior to creating a pull request for your documentation changes.</p>"},{"location":"developer/documentation/make-docs/#github-pages","title":"GitHub pages","text":"<p>This is only required if it has not been set up on GitHub for the repository, or if it has been disabled. Only a user with admin rights to the repository will be able to do this.</p> <ul> <li>Go to the repository and click on Settings</li> <li>Click on Pages</li> <li>Set the branch to \"gh-pages\"</li> <li>Click Save</li> <li>Select the action</li> <li>Select Deploy</li> <li>Open the Run mkdocs gh-deploy section</li> <li>The URL should be https://kartoza.github.io/SAEOSS-Portal/</li> </ul>"},{"location":"developer/documentation/writing/","title":"Documentation","text":""},{"location":"developer/documentation/writing/#overview","title":"Overview","text":"<p>Welcome to the instructions for those wishing to contribute to our documentation!</p> <p>Our documentation system is based on the popular mkdocs system. We encourage you to read the upstream documentation from mkdocs for the finer details of how mkdocs. In particular, read this page before you get to work. Mkdocs is not hard, but it may feel initially a little different if you are used to creating your documentation in word.</p> <p>We use mkdocs because it has some great and useful features. Most especially:</p> <ul> <li>The code and the documentation are versioned together. This means that for whatever version of the code we have in our production release, we can be sure the documentation matches that release. We can also look back at changes over time through the version history when needed.</li> <li>It can render beautiful static (not needing a backend server) web sites with great features like search, styling, intuitive navigation etc.</li> <li>It can optionally render PDF documents from the same source markdown.</li> <li>An ecosystem of plugins and themes makes mkdocs really flexible and extensible.</li> </ul>"},{"location":"developer/documentation/writing/#some-terminology","title":"Some terminology","text":"<p>In our documentation, we have organised the information using a specific nomenclature:</p> <ul> <li>guide: A guide is a multi-step workflow / tutorial that leads your through common activities.</li> <li>manual: A collection of documents that describe each part of the project in a matter of fact way without presupposing any specific workflow is being undertaken.</li> </ul> <p>For each of the main topic areas (user, admin, developer, devops, api user) we provide guides and manuals as is appropriate.</p>"},{"location":"developer/documentation/writing/#organisation","title":"Organisation","text":"<p>The documentation is broadly organised in the following structure. This structure may change over time as sections are added / moved / removed:</p> <pre><code>src\n\u251c\u2500\u2500 about\n\u251c\u2500\u2500 administrator\n\u2502   \u251c\u2500\u2500 guide\n\u2502   \u2514\u2500\u2500 manual\n\u251c\u2500\u2500 developer\n\u2502   \u251c\u2500\u2500 documentation\n\u2502   \u251c\u2500\u2500 guide\n\u2502   \u2514\u2500\u2500 manual\n\u251c\u2500\u2500 devops\n\u2502   \u251c\u2500\u2500 guide\n\u2502   \u2514\u2500\u2500 manual\n\u2514\u2500\u2500 user\n\u2502   \u251c\u2500\u2500 api\n    \u251c\u2500\u2500 guide\n    \u251c\u2500\u2500 manual\n    \u2514\u2500\u2500 quickstart\n</code></pre>"},{"location":"developer/documentation/writing/#file-naming-conventions","title":"File naming conventions","text":"<p>Please follow these conventions when writing your documentation:</p> <ol> <li>Write file names in all lower case, with hyphens separating words (no spaces). e.g. <code>important-file.md</code> not <code>Important File.md</code> or other deviations.</li> <li>Place the image files in the img folder adjacent to your content.</li> <li>Do not abbreviate any words in file names - but try to use terse, descriptive names.</li> <li>Place your content into the appropriate place as outline in the structure above.</li> <li>Each file should only one level one heading e.g. <code># Page title</code></li> <li>Headings and subheadings should be written as a terse phrase starting with a capital letter and subsequent words in lower case unless they are proper nouns. Do not place a colon after the heading.</li> <li>Use unicode number markers to reference numbers in images e.g. 1\ufe0f\u20e3</li> <li>Every heading / sub-heading should have a single line underneath it summarising the content that will follow. This sentence will be used in the help center in the application to give the user a reference point for the text that will follow. It also makes the help text more consistent and readable.</li> <li>For every section that images, the first image will be used as the thumbnail if the heading is referenced from the application.</li> </ol>"},{"location":"developer/documentation/writing/#contributing-to-the-documentation","title":"Contributing to the documentation","text":"<p> Note: The repo name in the images below is blurred out, you should work against the SAEOSS-Portal repository when following these notes.</p> <p>To start adding to the documentation navigate to the home page of the repository.</p> <p>Once on the repository home page, 1\ufe0f\u20e3 click on Fork </p> <p>On the next page 1\ufe0f\u20e3 Make sure your github account is selected as the owner and 2\ufe0f\u20e3 make sure the \"Copy the <code>main</code> branch only\" option is ticked as you will only need the main branch. </p> <p>Once you have forked the repository, ensure that you are working in the main branch. </p> <p>Once you are in your fork of the repository, click on <code>.</code> on your keyboard. This will open a web editor where you can begin adding to, or editing, the documentation. </p> <p>Once the editor loads, you will be greeted by 1\ufe0f\u20e3 a preview of the project's README.txt. 2\ufe0f\u20e3 Click on the <code>docs</code> directory in the menu on the left, this will expand the directory. To confirm that you are working in the right branch 3\ufe0f\u20e3\ufe0f it will say <code>main</code> in the bottom left of the editor. </p> <p>Once you have expanded the <code>docs</code> directory, 1\ufe0f\u20e3 click on the <code>src</code> directory. All sub-directories within the <code>src</code> directory contain the files that become the documentation. Each sub-directory contains an <code>index.md</code> file that is required for the building of the documentation and static site. If you add a new sub-directory into any folder it must also contain a populated <code>index.md</code> file. </p> <p>Once you have chosen which section of documentation you would like to edit (e.g. user/guide/index.md), click on the file and it will open in the web editor. </p> <p>Once you have the file open, you can start adding to the documentation using Markdown syntax. If you need to add images to your documentation, add them to the relative <code>img</code> sub-directories following the naming conventions set out in the <code>naming-convention.README</code> within the <code>img</code> folders. </p> <p>When you have completed making additions to (or editing) the documentation, 1\ufe0f\u20e3 click on the source control tab then 2\ufe0f\u20e3 click on the <code>plus</code> symbol next to the changes you are finished with to stage them, 3\ufe0f\u20e3\ufe0f add a commit message that is associated with the work you have done, and the 4\ufe0f\u20e3 Click on <code>Commit &amp; Push</code> </p> <p>Once you have committed your changes, 1\ufe0f\u20e3 Click on the burger menu and then 2\ufe0f\u20e3 click on <code>Go To Repository</code> </p> <p>Your fork of the repository will be opened in a new tab within your browser, navigate to that tab. Once there 1\ufe0f\u20e3 ensure you are on the <code>main</code>, you should see how many commits ahead of the upstream branch you are, then 2\ufe0f\u20e3 click on <code>Contribute</code>-&gt; <code>Open pull request</code>. </p> <p>On the next screen, 1\ufe0f\u20e3 give your pull request a meaningful title, 2\ufe0f\u20e3 give additional details regarding changes made in the larger text box, then 3\ufe0f\u20e3\ufe0f click on <code>Create pull request</code>. Also ensure you are creating a pull request to the upstream <code>main</code> branch from your <code>main</code> branch. </p> <p>Once your pull request is opened you need to wait for it to be merged before you can open a new one.</p>"},{"location":"developer/documentation/writing/#creating-new-files","title":"Creating new files","text":""},{"location":"developer/documentation/writing/#navigation","title":"Navigation","text":"<p>All pages need to be added to the 'Nav' section of the <code>mkdocs-base.yml</code> file. This will ensure that it is available in the menus and that mkdocs renders without errors. For example, if you wish to add a new page to the User Guide area, in Nav you would add a line like this:</p> <p><code>- \"Navigating the map\": users/guide/map-navigation.md</code></p> <p>Sometimes you may not wish to have the new page displayed in the menu system (this can be useful when, for example, it is accessed via a link in another page. In these cases, leave the menu entry part blank e.g.</p> <p><code>- \"\": users/guide/map-navigation.md</code></p> <p>Mkdocs will still generate the page but it will not be added to the menu.</p>"},{"location":"developer/documentation/writing/#technical-notes","title":"Technical notes","text":""},{"location":"developer/documentation/writing/#working-locally","title":"Working locally","text":"<p>If you want to work with the documentation locally (i.e. directly on your PC), you need to follow this general process:</p> <ol> <li>Install python</li> <li>Install pip</li> <li>Install virtualenv (<code>pip install virtualenv</code>)</li> <li>Make the docs folder your working directory (<code>cd docs</code>)</li> <li>Create the virtual env in the docs folder (<code>python -m venv env</code>)</li> <li>Activate the venv (<code>source env/bin/activate</code>)</li> <li>Install the python modules listed in docs/requirements.txt (<code>pip install -r requirements.txt</code>)</li> <li>If you are on Linux or macOS, open the docs directory in a shell and run <code>build-docs-html.sh</code></li> <li>In the docs directory, run <code>mkdocs serve</code></li> <li>Open your web browser at https://localhost:8000 to view the rendered docs.</li> </ol> <p>Note that <code>mkdocs serve</code> will dynamically re-render the docs any time you make a change. The process above is illustrated in the diagram below:</p> <p></p>"},{"location":"developer/documentation/writing/#hooks","title":"Hooks","text":"<p>We implement two hooks (plugins for mkdocs that are invoked during the docs rendering process).</p> <ul> <li>uuid_redirects_hook.py - this is used to handle page redirects from a uuid - see below for more details</li> <li>python_manual_hook.py - this is used to auto-generate the reference guide for the python modules, classes and functions that make up the code base for this project.</li> </ul>"},{"location":"developer/documentation/writing/#permalinks-for-user-and-admin-docs","title":"Permalinks for user and admin docs","text":"<p>If you are a developer, you should be aware of the workflow for creating user and administrator documentation for each page you create.</p> <p>Every page should have a help link on it that leads to the appropriate manual page. The workflow for doing this is:</p> <ol> <li>Generate a new page UUID using the provided python utility e.g. <code>./create-uuid.py</code></li> <li>Create a new page in the appropriate manual section e.g. <code>docs/src/user/manual/login.md</code></li> <li>In the metadata section at the top of the page, add the context id e.g. <code>context_id: V4cVEFd2TmwYJVb5HvWRwa</code></li> <li>In your django view, set up your help button to point to the site url and your context id. e.g. <code>https://siteurl/V4cVEFd2TmwYJVb5HvWRwa</code></li> </ol> <p>Whenever the user visits the page using the UUID URL, they will be redirected to the correct page e.g. <code>https://siteurl/login/</code>. This system protects us from file renaming and reorganising on the site, and ensures that the help link will always remain valid.</p>"},{"location":"developer/documentation/writing/#generating-pdfs","title":"Generating PDFS","text":"<p>To generate PDFS, <code>cd</code> into <code>SAEOSS-Portal/docs</code> and then run the <code>build-docs-pdf</code> in a local terminal</p>"},{"location":"developer/documentation/writing/#generating-static-site","title":"Generating Static Site","text":"<p>To generate HTML, <code>cd</code> into <code>SAEOSS-Portal/docs</code> and then run the <code>build-docs-html</code> in a local terminal. You can then run <code>mkdocs serve</code> to generate the static site on your local host, if there is a port conflict you can specify the port using the <code>-a</code> flag e.g <code>mkdocs serve -a 127.0.0.1:8001</code>.</p>"},{"location":"developer/guide/","title":"SAEOSS-Portal Developer Guide","text":"<p>In this section of the documentation, we aim to onboard developers onto the process of setting up a developer workstation, understanding the system architecture, contributing back to the project and so forth. Here is a brief overview of the content provided here:</p> <ul> <li>Architecture: - Here we outline the system architecture using ER Diagrams, Software Component Diagrams etc.</li> <li>Prerequisites: - An overview of the software that needs to be installed before you can start.</li> <li>Cloning: - In this section we cover how to make a local working copy on your own machine.</li> <li>IDE Setup: - Here we walk through setting up your IDE.</li> <li>Building: - This covers tasks related to building the application so you can test it in your browser.</li> <li>Configuration: - This covers standard configuration tasks that need to be done once the site is brought online.</li> <li>Workflows: - Examples of typical workflows for adding features, fixing bugs etc.</li> <li>Roadmap: - Here we outline future plans for the project.</li> </ul>"},{"location":"developer/guide/architecture/","title":"System Architecture","text":"<p>In this section, we outline the system architecture using ER Diagrams, Software Component Diagrams etc. and key libraries / frameworks used in this project.</p>"},{"location":"developer/guide/architecture/#frameworks-used","title":"Frameworks Used","text":"<p>The following is a list, with brief descriptions, of the key components used in creating this platform. Please refer to their individual documentation for in-depth technical information.</p> Logo Name Notes CKAN CKAN is an open-source DMS (data management system) for powering data hubs and data portals. CKAN makes it easy to publish, share and use data. CKAN PostgreSQL is a powerful, open source object-relational database system with over 35 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance. Pycsw pycsw allows for the publishing and discovery of geospatial metadata via numerous APIs (CSW 2/CSW 3, OpenSearch, OAI-PMH, SRU), providing a standards-based metadata and catalogue component of spatial data infrastructures. Docker Accelerate how you build, share, and run applications. Docker helps developers build, share, and run applications anywhere \u2014 without tedious environment configuration or management. Maplibre Open-source mapping libraries for web and mobile app developers. Ckanext-harvest Remote harvesting extension for CKAN. Jenkins It is used to continually create and test software projects, making it easier for developers and DevOps engineers to integrate changes to the project and for consumers to get a new build. Argo Argo Events is an event-driven workflow automation framework and dependency manager that helps you manage Kubernetes resources, Argo Workflows, and serverless workloads on events from a variety of source. # High-level architecture <p>This is the high-level system architecture relating to the interaction between the applications.</p> <p></p>"},{"location":"developer/guide/architecture/#ckan-components","title":"CKAN Components","text":""},{"location":"developer/guide/architecture/#data-model","title":"Data Model","text":"<p>The following diagram represents all of the database entities that are created by PostgreSQL. Right click the image and open it in its own tab to see it at full resolution.</p> <p> Note: Click on the image to open an enlarged view</p> <p>For more details on the relationship between the entities, constraints and higher degree of analysis of the database, please click here</p>"},{"location":"developer/guide/building/","title":"Building the dev environment","text":"<p>This section covers the process of building and running the application from your IDE.</p> <p>\ud83d\udea9 NOTE: Make sure you have gone through the IDE Setup Process before following these notes.</p>"},{"location":"developer/guide/building/#setting-up-a-development-environment","title":"Setting Up a Development Environment","text":"<p>Developers should follow the provided instructions to establish their development environment, ensuring consistency in tools and configurations across the team while fostering collaboration. This streamlined approach also boosts productivity, simplifies scalability, and bolsters security by isolating sensitive data.</p> <p>Below are the steps to effectively and accurately set up a productive developer environment:</p>"},{"location":"developer/guide/building/#getting-the-source-code","title":"\ud83d\udc69\u200d\ud83d\udcbb Getting the Source Code","text":"<p>To contribute to the project, you need to fork and clone the repository. This allows you to view and edit the code in your own repository, from which you can create pull requests to merge any changes.</p>"},{"location":"developer/guide/building/#1-navigate-to-the-github-repository","title":"1. Navigate to the GitHub Repository","text":"<p>Go to the SAEOSS-Portal GitHub Repository: https://github.com/kartoza/SAEOSS-Portal</p>"},{"location":"developer/guide/building/#2-fork-the-repository","title":"2. Fork the Repository","text":"<p>Follow the instructions for setting up a proper developer environment, which includes forking the repository.</p> <p></p>"},{"location":"developer/guide/building/#3-navigate-to-your-forked-github-repository","title":"3. Navigate to Your Forked GitHub Repository","text":"<p>Access your forked repository, usually found in your personal repositories, at: https://github.com/{Your-Github-Handle}/SAEOSS-Portal</p> <p>NOTE: Replace {Your-Github-Handle} with your GitHub handle name to fork your repository.</p>"},{"location":"developer/guide/building/#4-clone-the-repository","title":"4. Clone the Repository","text":"<p>Clone the forked repository to your local machine using Git. This allows you to make changes to the code.</p> <pre><code>git clone https://github.com/{Your-Github-Handle}/SAEOSS-Portal.git\n</code></pre>"},{"location":"developer/guide/building/#5-create-a-new-branch","title":"5. Create a New Branch","text":"<p>Before making any changes, create a new branch for your feature or bug fix. This keeps your changes isolated from the main branch.</p> <pre><code>git branch {name_of_your_new_branch}\n</code></pre> <p>NOTE: Replace {name_of_your_new_branch} with the preferred name of your branch.</p> <p>You can also clone the main repository, but this workflow is generally not recommended. We strongly advise developers to follow the aforementioned workflow.</p> <pre><code>git clone https://github.com/kartoza/SAEOSS-Portal.git\n</code></pre> <p>\ud83e\udea7 Now that you have the built the project, move on to the Design documentation.</p>"},{"location":"developer/guide/cloning/","title":"Checking out the Code","text":"<p>This section outlines the process of checking out the code for local development.</p> <p>\ud83d\udea9 Make sure you have gone through the Prerequisites Section before following these notes.</p> <p>Git Code check out  https://github.com/kartoza/SAEOSSS-Portal.git</p> <pre><code>git clone https://github.com/kartoza/SAEOSS-Portal.git\n</code></pre> <p>\ud83d\udcd2Which branch to use?  Note that we deploy our staging work from the <code>develop</code> branch and our production environment from the <code>main</code> branch. If you are planning on contributing improvements to the project, please submit them against the <code>develop</code> branch.</p> <p>\ud83e\udea7 Now that you have the code checked out, move on to the IDE Setup documentation.</p>"},{"location":"developer/guide/configuration/","title":"Project Setup","text":""},{"location":"developer/guide/configuration/#clone-saeoss-portal-repository","title":"Clone SAEOSS-Portal repository","text":"<p>This will clone the SAEOSS-Portal repository to your machine <pre><code>git clone https://github.com/kartoza/SAEOSS-Portal.git\n</code></pre></p>"},{"location":"developer/guide/configuration/#project-setup_1","title":"Project Setup","text":""},{"location":"developer/guide/configuration/#docker-installation","title":"Docker installation","text":"<p>The project needs docker to be able to run it. To install it, please follow below instruction.</p> <pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg     \n</code></pre> <p>On the next prompt line:</p> <pre><code>echo \\\n\"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]https:download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre> <p>Run apt update:</p> <pre><code>sudo apt-get update\n</code></pre> <p>This will install docker <pre><code>sudo apt-get install  docker-ce-cli containerd.io\n</code></pre></p> <p>This will check if installation of docker was successful <pre><code>sudo docker version\n</code></pre> And it should return like this</p> <pre><code>Client: Docker Engine - Community\n Version:           20.10.9\n API version:       1.41\n Go version:        go1.16.8\n Git commit:        c2ea9bc\n Built:             Mon Oct  4 16:08:29 2021\n OS/Arch:           linux/amd64\n Context:           default\n Experimental:      true\n</code></pre>"},{"location":"developer/guide/configuration/#manage-docker-as-non-root","title":"Manage docker as non-root","text":"<p>This will ensure that the docker can be executed without sudo. <pre><code>sudo systemctl daemon-reload\nsudo systemctl start docker\nsudo usermod -a -G $USER\nsudo systemctl enable docker\n</code></pre></p> <p>Verify that you can run docker commands without sudo. <pre><code>docker run hello-world\n</code></pre></p> <p>For more information how to install docker, please visit Install Docker Engine</p>"},{"location":"developer/guide/configuration/#get-the-project-up-and-running","title":"Get the project up and running","text":"<ol> <li>Navigate to docker folder <code>cd SAEOSS-Portal/docker</code></li> <li>Run the script to build the docker containers <code>./build.sh</code></li> <li>Start the containers <code>./compose.py --compose-file docker-compose.yml --compose-file docker-compose.dev.yml up</code></li> <li>The first time you launch it you will need to set up the ckan database (since the ckan image's entrypoint explicitly does not take care of this). Run the following command: <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan db init</code></li> <li>Afterwards, proceed to run any migrations required by the ckanext-saeoss extension <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan db upgrade --plugin saeoss</code></li> <li>After having initialized the database you can now create the first CKAN sysadmin user <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan sysadmin add admin</code>. Answer the prompts in order to provide the details for this new user. After its successful creation you can login to the CKAN site with the admin user.</li> <li>In order to be able to serve the system's datasets through various OGC standards, create a DB materialized view in order to integrate with pycsw: <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan dalrrd-emc-dcpr pycsw create-materialized-view</code></li> <li>Rebuild solr index: <code>docker exec -it saeoss_ckan-web_1 poetry run ckan search-index rebuild</code></li> <li>You can access the site on your localhost by visiting http:localhost:5000</li> </ol>"},{"location":"developer/guide/design/","title":"Design","text":"<p>\ud83e\udea7 Once you have reviewed the design sheets, you can move on to our Roadmap.</p>"},{"location":"developer/guide/ide-setup/","title":"Setting up your IDE","text":"<p>This section outlines the process for configuring your IDE (Integrated Development Environment) for development.</p> <p>\ud83d\udea9 Make sure you have gone through the Cloning Section before following these notes.</p>"},{"location":"developer/guide/ide-setup/#vs-code-setup","title":"VS Code Setup","text":"<p>Open the project in VSCode (1\ufe0f\u20e3, 2\ufe0f\u20e3) by navigating the the place on your file system where you checked out the code in the pre-requisites step above (3\ufe0f\u20e3).</p> <p></p> <p>Accept the 'trust authors' prompt</p> <p></p>"},{"location":"developer/guide/ide-setup/#copying-the-env","title":"Copying the .env","text":"<p>Copy the <code>template.env</code> to <code>.env</code>  Edit the <code>.env</code> file and change the</p> <p><pre><code>DJANGO_SETTINGS_MODULE=core.settings.prod\n</code></pre> to   </p> <pre><code>DJANGO_SETTINGS_MODULE=core.settings.dev\n</code></pre> <p></p>"},{"location":"developer/guide/ide-setup/#override-docker-configs","title":"Override Docker Configs","text":"<p>We are going to copy the docker overrides template to a local file that will not be under version control.</p> <p></p> <p>Rename the file to <code>docker-compose.override.yml</code></p> <p></p> <p>Initially you will not need to change anything in this file, though you may want to take a look through the various configurations provided here if you want to tweak your local setup.</p> <p>Now that you have your IDE set up, we can move on to building the project.</p>"},{"location":"developer/guide/ide-setup/#using-pycharm","title":"Using pycharm","text":"<p>This section is for using pycharm.</p> <p>Requirements:</p> <ul> <li>Pycharm</li> <li>Finished Setting up the project</li> </ul>"},{"location":"developer/guide/ide-setup/#setup-interpreter","title":"Setup interpreter","text":"<ol> <li> <p>Go to file -&gt; setting -&gt; Project -&gt; Project Interpreter -&gt; click cog -&gt; add    </p> </li> <li> <p>Go to ssh interpreter -&gt; Fill the form like below    </p> </li> <li> <p>Click next and fill docker as password    </p> </li> <li> <p>Click next and change interpreter like below and click finish    </p> </li> <li> <p>After finish, it will show all package like below.    </p> </li> <li> <p>In current page, click path mappings, click + button and put local path to where the project (django-project folder) and remote path is like below. and click oK.    </p> </li> </ol> <p>Now the interpreter is done. When we restart the machine, we need to do <code>make up</code> to run the project.</p>"},{"location":"developer/guide/ide-setup/#setup-run-configuration","title":"Setup run configuration","text":"<p>After the interpreter is done, we need configuration to run the project in development mode.</p> <ol> <li> <p>Click \"Add configuration\" like in the cursor in the image below. (top-right)    </p> </li> <li> <p>There will be a popup, and click +, then click django server like below     </p> </li> <li> <p>It will show the form and fill like below.    </p> </li> <li> <p>Don't click the OK yet, but click Environment Variables and add environments like below 9by clicking + button).    </p> </li> <li> <p>After that, click OK.</p> </li> <li> <p>Now we need to run the server by clicking go button in below image.    </p> </li> <li> <p>When we click the go button, pycharm will run a process until like image below.    </p> </li> <li> <p>Now it is done. We can access the development server in http://localhost:2000/</p> </li> </ol> <p>This development mode is DEBUG mode, and also whenever we change the code, the site will also change in runtime.</p> <p>For more information how to set up on pycharm, please visit Using a Docker Compose-Based Python Interpreter in PyCharm</p>"},{"location":"developer/guide/ide-setup/#quick-installation-guide","title":"Quick Installation Guide","text":"<p>This project is a ckan extension, it can be installed standalone. To deploy this project we use  docker, so you need to have docker running on the host.</p> <p>NOTE: Docker is needed to continue with the quick installation guide. Ensure you have docker installed on your system before continuing.</p> <p>Build docker images</p> <pre><code>cd SAEOSS-Portal/docker\n./build.sh\n</code></pre> <p>Start up project</p> <pre><code>./compose.py --compose-file docker-compose.yml --compose-file docker-compose.dev.yml up\n</code></pre> <p>Run down the project</p> <pre><code>./compose.py --compose-file docker-compose.yml --compose-file docker-compose.dev.yml down\n</code></pre> <p>After starting up, the project is available on your local host at http://localhost:5000 </p>"},{"location":"developer/guide/ide-setup/#operations","title":"Operations","text":""},{"location":"developer/guide/ide-setup/#rebuild-solr-index","title":"Rebuild solr index","text":"<pre><code># check if there are any datasets that are not indexed\nckan search-index check\n\n# re-index\ndocker exec -it saeoss_ckan_web_1 poetry run ckan search-index rebuild\n</code></pre>"},{"location":"developer/guide/ide-setup/#operate-harvesters","title":"Operate harvesters","text":"<p>You may use the various <code>ckan harvester &lt;command&gt;</code> commands to operate existing harvesters.</p> <p>Create a job:</p> <pre><code>docker exec -t saeoss-ckan_harvesting-runner poetry run ckan harvester job &lt;source-id&gt;\n</code></pre>"},{"location":"developer/guide/ide-setup/#send-notifications-by-email","title":"Send notifications by email","text":"<p>This needs to be run periodically (once per hour is likely enough).</p> <pre><code>docker exec -it saeoss_ckan_web_1 ckan saeoss send-email-notifications\n</code></pre> <p>Additionally, in order for notifications to work, there is some configuration:</p> <ul> <li>The CKAN settings must have <code>ckan.activity_streams_email_notifications = true</code></li> <li>The CKAN settings must have the relevant email configuration (likely being passed   as environment variables)</li> <li>Each user must manually choose to receive notification e-mails - This is done in   the user's profile</li> <li>Each user must manually follow those entities (datasets, organizations, etc) that   it finds interesting enough in order to be notified of changes via email</li> </ul>"},{"location":"developer/guide/ide-setup/#refresh-pycsw-materialized-view","title":"Refresh pycsw materialized view","text":"<p>This needs to be run periodically (once per hour is likely enough).</p> <pre><code>docker exec -t ckan dalrrd-emc-dcpr pycsw refresh-materialized-view\n</code></pre>"},{"location":"developer/guide/ide-setup/#create-sysadmin-user","title":"Create sysadmin user","text":"<p>After having initialized the database you can now create the first CKAN sysadmin user.</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan sysadmin add admin\n</code></pre> <p>Answer the prompts in order to provide the details for this new user. After its successful creation you can login to the CKAN site with the <code>admin</code> user.</p>"},{"location":"developer/guide/ide-setup/#initialize-ckan-database","title":"Initialize CKAN database","text":"<p>The first time you launch it you will need to set up the ckan database (since the ckan image's entrypoint explicitly does not take care of this, as mentioned above). Run the following command:</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan db init\n</code></pre> <p>Afterwards, proceed to run any migrations required by the ckanext-dlarrd-emc-dcpr extension</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan db upgrade --plugin dalrrd_emc_dcpr\n</code></pre> <p>Now you should be able to go to <code>http://localhost:5000</code> and see the ckan landing page. If not, you may need to reload the ckan web app after performing the DB initialization step. This can done by sending the <code>HUP</code> signal to the gunicorn application server (which is running our ckan flask app):</p> <pre><code>docker exec -ti saeoss_ckan_web_1 bash -c 'kill -HUP 1'\n</code></pre>"},{"location":"developer/guide/ide-setup/#generate-pycsw-db-view","title":"Generate pycsw DB view","text":"<p>In order to be able to serve the system's datasets through various OGC standards, create a DB materialized view in order to integrate with pycsw:</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan dalrrd-emc-dcpr pycsw create-materialized-view\n</code></pre>"},{"location":"developer/guide/ide-setup/#ingest-a-collection-of-metadata-from-a-given-directory-currently-cbers-xml-files","title":"Ingest a collection of metadata from a given directory (currently CBERS xml files)","text":"<p>create datasets (metadata records) from files stored in a directory</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan saeoss ingest cbers --source-path &lt;path&gt; --user &lt;username&gt;\n</code></pre>"},{"location":"developer/guide/ide-setup/#perform-stac-fetch-and-create-datasets-from-stac-endpoint","title":"Perform STAC Fetch and create datasets from STAC endpoint","text":"<p>create datasets (metadata records) from stac endpoint</p> <pre><code>docker exec -ti saeoss_ckan_web_1 poetry run ckan saeoss stac create-stac-dataset --url &lt;url&gt; --user &lt;username&gt; --max &lt;max_number_of_records&gt;\n</code></pre>"},{"location":"developer/guide/ide-setup/#production","title":"Production","text":"<p>Section for juanique and zakki to complete</p>"},{"location":"developer/guide/prerequisites/","title":"Prerequisites","text":"<p>In this section we cover any tools that need to be on your system so that you can have a local development environment.</p>"},{"location":"developer/guide/prerequisites/#overview","title":"Overview","text":"<p>We assume in our notes that you are using the current Ubuntu LTS - though we try to keep things generic so that you can repeat on other distros or WSL2 on windows.</p> <p>We recommend using the official Docker packages (not those provided by your distro) and assume membership of the docker group. See docker.io's guide for setup notes and below for adding yourself to the docker group.</p> <p><pre><code>sudo usermod -a -G docker $user\n</code></pre> (Restart your computer after making this change)</p> <p>You need to have docker-compose installed - version 1.29 or later should work fine.</p> <p></p> <p>You should have Git installed.</p> <p>You should have VSCode installed (using PyCharm is also possible).</p> <p>If using VSCode (our recommended IDE), you need the the VSCode Dev Containers extension installed (minimum version 0.304.0).</p> <p> </p> <p> </p> <p>You will also need Gnu 'make' installed.</p> <p>If you already have all of the above criteria met, you can move on to Cloning to check out the code, otherwise, read on for more detailed notes on setting up your system.</p>"},{"location":"developer/guide/prerequisites/#dependencies-installation","title":"Dependencies installation","text":"<p>The project provide make command that making setup process easier. To install make on your machine or virtual box server, do:</p> <pre><code>sudo apt install make\n</code></pre> <p>Project has recipe that you can use to run the project in one command. This recipe needs docker-compose to be able to use it. To install it, do:</p> <pre><code>sudo apt install docker-compose\napt install ca-certificates curl gnup lsb-release  \n</code></pre>"},{"location":"developer/guide/prerequisites/#docker-installation","title":"Docker installation","text":"<p>The project needs docker to be able to run it. To install docker, please follow these instructions.</p> <pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg     \n</code></pre> <p>On the next prompt line:</p> <pre><code>echo \\\n\"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg]https:download.docker.com/linux/ubuntu \\\n$(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n</code></pre> <p>Run apt update:</p> <pre><code>sudo apt-get update\n</code></pre> <p>This will install docker <pre><code>sudo apt-get install  docker-ce-cli containerd.io\n</code></pre></p> <p>This will check if installation of docker was successful <pre><code>sudo docker version\n</code></pre> And it should return like this</p> <pre><code>Client: Docker Engine - Community\n Version:           20.10.9\n API version:       1.41\n Go version:        go1.16.8\n Git commit:        c2ea9bc\n Built:             Mon Oct  4 16:08:29 2021\n OS/Arch:           linux/amd64\n Context:           default\n Experimental:      true\n</code></pre>"},{"location":"developer/guide/prerequisites/#manage-docker-as-non-root","title":"Manage docker as non-root","text":"<p>This will ensure that the docker can be executed without sudo. <pre><code>sudo systemctl daemon-reload\nsudo systemctl start docker\nsudo usermod -a -G $USER\nsudo systemctl enable docker\n</code></pre></p> <p>Verify that you can run docker commands without sudo. <pre><code>docker run hello-world\n</code></pre></p> <p>For more information how to install docker, please visit Install Docker Engine</p> <p>\ud83e\udea7 If you already have all of the above criteria met, you can move on to Cloning to check out the code.</p>"},{"location":"developer/guide/roadmap/","title":"Roadmap","text":"<p>Like most Open Source Software, this project is an ongoing work in progress.</p> <p>This document outlines the various ongoing activities and critical changes expected to be introduced.</p>"},{"location":"developer/guide/roadmap/#future-plans","title":"Future plans","text":"<ul> <li>Ingest SANSA and SAEONN datasets</li> <li>Ingest datasets form other sources</li> <li>Improve user interface</li> <li>Improve compliance of metadata</li> </ul>"},{"location":"developer/guide/roadmap/#considerations","title":"Considerations","text":"<p>The current main branch is under heavy development and should be considered unstable.</p>"},{"location":"developer/guide/workflows/","title":"Developer Workflows","text":""},{"location":"developer/guide/workflows/#adding-a-feature","title":"Adding a Feature","text":"<ul> <li>Create an Issue</li> <li>Wait for it to be added to a Sprint</li> <li>Functional Tests</li> <li>Playwright Tests</li> <li>Write end user documentation</li> </ul>"},{"location":"developer/guide/workflows/#fixing-a-bug","title":"Fixing a Bug","text":"<ul> <li>Claim an Issue</li> <li>Wait for it to be added to a Sprint</li> <li>Regression Test</li> <li>Implement Fix</li> </ul>"},{"location":"developer/guide/workflows/#creating-pull-requests","title":"Creating Pull Requests","text":"<p>NOTE: Frequent PR's should be made to ensure quality of development. Read more on this later in the document.</p>"},{"location":"developer/guide/workflows/#pull-request-workflow","title":"Pull Request Workflow","text":""},{"location":"developer/guide/workflows/#1-fork-the-repository","title":"1. Fork the Repository","text":"<p>Follow the instructions for setting up a proper developer environment, which includes forking the repository.</p>"},{"location":"developer/guide/workflows/#2-clone-the-repository","title":"2. Clone the Repository","text":"<p>Clone the forked repository to your local machine using Git. This allows you to make changes to the code.</p>"},{"location":"developer/guide/workflows/#3-create-a-new-branch","title":"3. Create a New Branch","text":"<p>Before making any changes, create a new branch for your feature or bug fix. This keeps your changes isolated from the main branch.</p>"},{"location":"developer/guide/workflows/#4-make-and-commit-changes","title":"4. Make and Commit Changes","text":"<p>Make the necessary code changes in your local branch. Use Git to commit these changes with clear and descriptive commit messages.</p>"},{"location":"developer/guide/workflows/#5-push-changes-to-github","title":"5. Push Changes to GitHub","text":"<p>Push your local branch with changes to your forked repository on GitHub.</p>"},{"location":"developer/guide/workflows/#6-open-a-pull-request","title":"6. Open a Pull Request","text":"<p>Visit the original repository on GitHub, and GitHub will detect your recently pushed branch. Click on the \"Compare &amp; pull request\" button.</p>"},{"location":"developer/guide/workflows/#7-resolving-conflicts","title":"7. Resolving Conflicts","text":"<p>When conflicts are detected, GitHub will generate a message indicating that your pull request cannot be merged until all conflicts have been resolved. This message typically appears when the conflict is too intricate for GitHub's automatic conflict resolver to handle.</p>"},{"location":"developer/guide/workflows/#8-submitting-your-pull-request","title":"8. Submitting Your Pull Request","text":"<p>Simply click the \"Create pull request\" button to submit your pull request. Your request will become visible to the repository's maintainers. It is their responsibility to review the code and merge your pull request into the main repository.</p> <p>Congratulations! You've successfully created a pull request on GitHub, contributing your changes to the open-source project. Your code is now part of the main project for others to use and build upon.</p>"},{"location":"developer/guide/workflows/#frequent-pull-requests-for-efficient-collaboration","title":"Frequent Pull Requests for Efficient Collaboration","text":"<p>Developers should embrace the practice of creating frequent pull requests (PRs) when working on a project for several compelling reasons. Here's why:</p> <p>Collaboration and Feedback: Frequent PRs foster a culture of collaboration. They enable developers to share their work early and often with team members, facilitating peer review and feedback. This iterative process ensures that code changes align with project goals and coding standards and provides an opportunity for knowledge sharing among team members.</p> <p>Code Quality Assurance: By making smaller, incremental changes through frequent PRs, developers can identify and rectify issues more easily. This proactive approach to code review helps catch bugs, improve code readability, and maintain a high level of code quality. It minimizes the risk of introducing complex and hard-to-fix issues that can arise from large, monolithic code changes.</p> <p>Continuous Integration: Frequent PRs seamlessly integrate with continuous integration (CI) and continuous delivery (CD) workflows. CI systems can automatically build, test, and deploy changes submitted through PRs, ensuring that new code integrates smoothly with the existing codebase. This leads to a more stable and reliable project.</p> <p>Project Transparency: Frequent PRs provide transparency into the development process. Team members, stakeholders, and project managers can easily track progress and stay informed about the latest changes. This transparency is especially valuable in agile and collaborative environments.</p> <p>Risk Mitigation: Smaller, more frequent PRs help identify and mitigate potential risks early in the development cycle. If a particular PR introduces an issue, it's easier to identify the source and resolve it promptly, minimizing the impact on the overall project timeline.</p> <p>In summary, creating frequent pull requests is a best practice that enhances collaboration, code quality, and project efficiency. It's a fundamental approach that not only helps developers work more effectively but also contributes to the success of the entire project.</p>"},{"location":"developer/guide/workflows/#committing-to-project","title":"Committing To Project","text":"<p>Follow our commit message conventions.</p>"},{"location":"developer/guide/workflows/#pull-request-template","title":"Pull Request Template","text":"<p>If it has related issues, add links to the issues(like <code>#123</code>) in the description. Fill in the Pull Request Template by check your case.</p>"},{"location":"developer/guide/workflows/#how-to-open-issues-and-create-pull-requests-on-github","title":"How to Open Issues and Create Pull Requests on GitHub","text":"<p>When contributing to the development of the platform, it's essential to adhere to the correct workflow guidelines. Begin by configuring your IDE and developer environment and familiarizing yourself with the approved coding standards. Following the proper workflow guarantees high-quality development and strict adherence to endorsed code standards.</p>"},{"location":"developer/guide/templates/bug-report-message-template/","title":"Bug Report Template","text":"<p>A standard workflow for creating tickets is advised to make sure enough information about the problem is related, cutting down on time developers would spend trying to understand the issue at hand. To mitigate this a general approach has been created to make sure users are able to create a GitHub ticket with as much detail as possible. </p> <p>NOTE: Github supports various forms of media including: Markdown syntax, images and video. All of these can be used to better and more accurately describe your issue. Read more</p>"},{"location":"developer/guide/templates/bug-report-message-template/#the-following-template-can-be-copied-and-used-to-create-a-new-ticket","title":"The following template can be copied and used to create a new ticket:","text":"<pre><code>**Title** \nGive issue a descriptive title.\n\n**Describe the bug**\nA clear and concise description of what the bug is.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Expected behavior**\nA clear and concise description of what you expected to happen.\n\n**Screenshots**\nIf applicable, add screenshots to help explain your problem.\n\n**Desktop (please complete the following information):**\n - OS: [e.g. iOS]\n - Browser [e.g. chrome, safari]\n - Version [e.g. 22]\n\n**Smartphone (please complete the following information):**\n - Device: [e.g. iPhone6]\n - OS: [e.g. iOS8.1]\n - Browser [e.g. stock browser, safari]\n - Version [e.g. 22]\n\n**Additional context**\nAdd any other context about the problem here.\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/","title":"Commit Message Convention","text":"<p>When committing changes to the platform informative commit messages are necessary to assist developers to easily review changes and speed up merging of pull requests once the yah been created. In this case all who contribute to the platform whether through development or any additions to its features or information, the following commit message convention should be used:</p>"},{"location":"developer/guide/templates/commit-message-convention/#message-crop","title":"Message crop","text":"<p>Git automatically crops messages at 75 characters and the subject is capped at 50 characters. This is easily viewed when using an IDE like <code>vs code</code> as the character cap changes color. What this means in simple terms is a message is only allowed to contain 75 characters per line.</p>"},{"location":"developer/guide/templates/commit-message-convention/#subject","title":"Subject","text":"<p>When creating a commit message its important to give it a short descriptive subject. The subject should also be separate from the body of the commit massage. This can be achieved by simply adding a blank line.</p> <pre><code># Commit message subject\n#\n# Commit message body\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/#message-body","title":"Message body","text":"<p>It is important to specify as much information in the body of the commit message as possible whilst being mindful of the character limit imposed by Git. In this section elaborate on what the commit does: \"Fix broken image links on index page\" or \"Implement proposed messaging system\". In many cases the commit message should be the answer to this phrase: <code>When this commit is implemented then it will...</code>.</p> <pre><code># Implement SANS 1876 standard \n# \n# Ensure new metadata records are compliant with the proposed standard.\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/#related-tickets","title":"Related tickets","text":"<p>In many cases GitHub issues are more explanatory than the commit message. When possible ensure related tickets are linked either in the body or subject line of your commit message. This makes tracking issue fixes easier as ell as diagnosing future issues.</p> <pre><code># Ticket/183\n# \n# Ensure metadata records are sans 1876 compliant.\n</code></pre>"},{"location":"developer/guide/templates/commit-message-convention/#tests","title":"Tests","text":"<p>In cases where development should pass tests, the results thereof should be indicated where possible. This can also be indicated with Pull Requests.</p> <pre><code># Ticket/183\n# \n# Ensure metadata records are sans 1876 compliant.\n# Test1: pass\n</code></pre>"},{"location":"developer/guide/templates/pull-request-template/","title":"Pull Request Template","text":"<pre><code>### Description\n\nPlease include a summary of the changes and the related issue. Please also include relevant motivation and context. List any dependencies that are required for this change.\n\nFixes # (issue)\n\n**Screenshots/Media**\n\nInclude any screenshots or media related to bug fix to display working functionality\n\n#### Type of change\n\nPlease delete options that are not relevant.\n\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] This change requires a documentation update\n\n### How Has This Been Tested?\n\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\n\n- [ ] Test A\n- [ ] Test B\n\n**Test Configuration**:\n* Firmware version:\n* Hardware:\n* Toolchain:\n* SDK:\n\n### Checklist:\n\n- [ ] My code follows the style guidelines of this project\n- [ ] I have performed a self-review of my code\n- [ ] I have commented my code following the docstring standard\n- [ ] I have made corresponding changes to the documentation, or created documentation for this\n- [ ] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [ ] New and existing unit tests pass locally with my changes\n- [ ] Any dependent changes have been merged and published in downstream modules\n</code></pre>"},{"location":"developer/manual/","title":"Code Reference Manual","text":"<p>Below is linked reference manuals for coding languages and frameworks used in SAEOSS-Portal.</p>"},{"location":"developer/manual/#python-reference-manual","title":"Python Reference Manual","text":"<p>Python Reference Manual</p>"},{"location":"developer/manual/#ckan-reference-manual","title":"CKAN Reference Manual","text":"<p>Ckan Reference Manual</p> <p>Ckan API Reference</p>"},{"location":"developer/manual/#index","title":"Index","text":"<ul> <li>Coding Conventions: </li> </ul>"},{"location":"developer/manual/assets/","title":"Assets package","text":""},{"location":"developer/manual/assets/#css","title":"CSS","text":""},{"location":"developer/manual/assets/#js","title":"JS","text":""},{"location":"developer/manual/assets/#web-assets","title":"web assets","text":""},{"location":"developer/manual/blueprints/","title":"Blueprints","text":"<p>Flask uses a concept of blueprints for making application components and supporting common patterns within an application or across applications.  Blueprints can greatly simplify how large applications work and provide a central means for Flask extensions to register operations on applications. A Blueprint object works similarly to a Flask application object, but it is not actually an application. Rather it is a blueprint of how to construct or extend an application. For further information see</p> <p>A blueprint rendering contact page.</p> <p>A blueprint rendering map page.</p> <p>A blueprint rendering new pages.</p> <p>Utility methods for news blueprints</p> <p>re-implement stats blueprint as it's not working</p>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.contact.index","title":"index","text":"<pre><code>index()\n</code></pre> <p>A blueprint rendering contact template.</p> Source code in <code>ckanext/saeoss/blueprints/contact.py</code> <pre><code>@contact_blueprint.route(\"/\")\ndef index():\n\"\"\"A blueprint rendering contact template.\n    \"\"\"\nreturn toolkit.render(\"contact.html\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.map.index","title":"index","text":"<pre><code>index()\n</code></pre> <p>A blueprint rendering map template.</p> Source code in <code>ckanext/saeoss/blueprints/map.py</code> <pre><code>@map_blueprint.route(\"/\")\ndef index():\n\"\"\"A blueprint rendering map template.\n    \"\"\"\nreturn toolkit.render(\"map/map.html\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news.index","title":"index","text":"<pre><code>index()\n</code></pre> <p>A blueprint rendering new template.</p> Source code in <code>ckanext/saeoss/blueprints/news.py</code> <pre><code>@news_blueprint.route(\"/\")\ndef index():\n\"\"\"A blueprint rendering new template.\n    \"\"\"\nlist_news()\nreturn toolkit.render(\"news.html\", type=\"news\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news.news_delete","title":"news_delete","text":"<pre><code>news_delete(page)\n</code></pre> <p>A blueprint rendering deleting new.</p> Source code in <code>ckanext/saeoss/blueprints/news.py</code> <pre><code>def news_delete(page):\n\"\"\"A blueprint rendering deleting new.\n    \"\"\"\nreturn news_delete_util(page, page_type=\"news\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news.news_edit","title":"news_edit","text":"<pre><code>news_edit(page=None, data=None, errors=None, error_summary=None)\n</code></pre> <p>A blueprint rendering editing new.</p> Source code in <code>ckanext/saeoss/blueprints/news.py</code> <pre><code>def news_edit(page=None, data=None, errors=None, error_summary=None):\n\"\"\"A blueprint rendering editing new.\n    \"\"\"\nreturn news_edit_util(page, data, errors, error_summary, \"news\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news.news_show","title":"news_show","text":"<pre><code>news_show(page)\n</code></pre> <p>A blueprint rendering new show.</p> Source code in <code>ckanext/saeoss/blueprints/news.py</code> <pre><code>def news_show(page):\n\"\"\"A blueprint rendering new show.\n    \"\"\"\nreturn utils.pages_show(page, page_type=\"news\")\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news_utils.list_news","title":"list_news","text":"<pre><code>list_news()\n</code></pre> <p>Get list og new.</p> Source code in <code>ckanext/saeoss/blueprints/news_utils.py</code> <pre><code>def list_news():\n\"\"\"Get list og new.\"\"\"\ntk.c.pages_dict = tk.get_action(\"ckanext_pages_list\")(\ncontext={}, data_dict={\"page_type\": \"news\"}\n)\ntk.c.page = helpers.Page(\ncollection=tk.c.pages_dict,\npage=tk.request.params.get(\"page\", 1),\nurl=helpers.pager_url,\nitems_per_page=21,\n)\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news_utils.news_delete_util","title":"news_delete_util","text":"<pre><code>news_delete_util(page, page_type='pages')\n</code></pre> <p>Delete a new.</p> Source code in <code>ckanext/saeoss/blueprints/news_utils.py</code> <pre><code>def news_delete_util(page, page_type=\"pages\"):\n\"\"\"Delete a new.\n    \"\"\"\nif page.startswith(\"/\"):\npage = page[1:]\nif \"cancel\" in tk.request.params:\ntk.redirect_to(\"%s_edit\" % page_type, page=\"/\" + page)\ntry:\nif tk.request.method == \"POST\":\ntk.get_action(\"ckanext_pages_delete\")({}, {\"page\": page})\nreturn tk.redirect_to(\"/news\")\nelse:\nreturn tk.abort(404, _(\"Page Not Found\"))\nexcept tk.NotAuthorized:\nreturn tk.abort(401, _(\"Unauthorized to delete page\"))\nexcept tk.ObjectNotFound:\nreturn tk.abort(404, _(\"Group not found\"))\nreturn tk.render(\"ckanext_pages/confirm_delete.html\", {\"page\": page})\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.news_utils.news_edit_util","title":"news_edit_util","text":"<pre><code>news_edit_util(page=None, data=None, errors=None, error_summary=None, page_type='pages')\n</code></pre> <p>Edit a new.</p> Source code in <code>ckanext/saeoss/blueprints/news_utils.py</code> <pre><code>def news_edit_util(\npage=None, data=None, errors=None, error_summary=None, page_type=\"pages\"\n):\n\"\"\"Edit a new.\n    \"\"\"\npage_dict = None\nif page:\nif page.startswith(\"/\"):\npage = page[1:]\npage_dict = tk.get_action(\"ckanext_pages_show\")(\ncontext={}, data_dict={\"org_id\": None, \"page\": page}\n)\nif page_dict is None:\npage_dict = {}\nif tk.request.method == \"POST\" and not data:\ndata = _parse_form_data(tk.request)\npage_dict.update(data)\npage_dict[\"org_id\"] = None\npage_dict[\"page\"] = page\npage_dict[\"page_type\"] = \"page\" if page_type == \"pages\" else page_type\ntry:\ntk.get_action(\"ckanext_pages_update\")(context={}, data_dict=page_dict)\nexcept tk.ValidationError as e:\nerrors = e.error_dict\nerror_summary = e.error_summary\ntk.h.flash_error(error_summary)\nreturn news_edit_util(\npage, data, errors, error_summary, page_type=page_type\n)\nendpoint = \"news.news_show\"\n# tk.redirect_to(endpoint, page='/' + page_dict['name'])\nreturn tk.redirect_to(\"/news\")\ntry:\ntk.check_access(\"ckanext_pages_update\", {\"user\": tk.c.user or tk.c.author})\nexcept tk.NotAuthorized:\nreturn tk.abort(401, _(\"Unauthorized to create or edit a page\"))\nif not data:\ndata = page_dict\nerrors = errors or {}\nerror_summary = error_summary or {}\nform_snippet = config.get(\"ckanext.pages.form\", \"ckanext_pages/base_form.html\")\nvars = {\n\"data\": data,\n\"errors\": errors,\n\"error_summary\": error_summary,\n\"page\": page or \"\",\n\"form_snippet\": form_snippet,\n}\nreturn tk.render(\"ckanext_pages/%s_edit.html\" % page_type, extra_vars=vars)\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.saved_searches.delete_saved_search","title":"delete_saved_search","text":"<pre><code>delete_saved_search()\n</code></pre> <p>deletes a saved search via it's id.</p> Source code in <code>ckanext/saeoss/blueprints/saved_searches.py</code> <pre><code>@saved_searches_blueprint.route(\n\"/delete_saved_search\", methods=[\"GET\", \"POST\"], strict_slashes=False\n)\ndef delete_saved_search():\n\"\"\"\n    deletes a saved search via it's id.\n    \"\"\"\nif request.method == \"POST\":\nsaved_search_id = request.json[\"saved_search_id\"]\nq = f\"\"\" delete from saved_searches where saved_search_id ='{saved_search_id}' \"\"\"\nmodel.Session.execute(q)\nmodel.Session.commit()\nreturn jsonify({\"status\": 200})\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.saved_searches.save_current_search","title":"save_current_search","text":"<pre><code>save_current_search()\n</code></pre> <p>save the current search query with user_id.</p> Source code in <code>ckanext/saeoss/blueprints/saved_searches.py</code> <pre><code>@saved_searches_blueprint.route(\n\"/save_search\", methods=[\"GET\", \"POST\"], strict_slashes=False\n)\ndef save_current_search():\n\"\"\"save the current search query with user_id.\n    \"\"\"\nquery = request.json\nuser_id = c.userobj.id\nsaved_search_id = uuid.uuid4()\nsaved_search_title = _get_saved_search_title(query)\nq = f\"\"\" insert into saved_searches values('{saved_search_id}', '{user_id}', '{query}', '{saved_search_title}','{datetime.now()}') \"\"\"\nresult = model.Session.execute(q)\nmodel.Session.commit()\nreturn jsonify({\"status\": 200})\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.sys_stats.get_deleted_packages","title":"get_deleted_packages","text":"<pre><code>get_deleted_packages()\n</code></pre> <p>@return: Returns list of deleted pkgs and date when they were deleted,             in format: [(id, date_ordinal), ...]</p> Source code in <code>ckanext/saeoss/blueprints/sys_stats.py</code> <pre><code>def get_deleted_packages():\n\"\"\"\n    @return: Returns list of deleted pkgs and date when they were deleted,\n                in format: [(id, date_ordinal), ...]\n    \"\"\"\ndef deleted_packages() -&gt; list[tuple[str, int]]:\n# Can't filter by time in select because 'min' function has to\n# be 'for all time' else you get first revision in the time period.\npackage = table(\"package\")\nactivity = table(\"activity\")\ns = (\nselect(\n[package.c[\"id\"], func.min(activity.c[\"timestamp\"])],\nfrom_obj=[\nactivity.join(package, activity.c[\"object_id\"] == package.c[\"id\"])\n],\n)\n.where(activity.c[\"activity_type\"] == \"deleted package\")\n.group_by(package.c[\"id\"])\n.order_by(func.min(activity.c[\"timestamp\"]))\n)\nres = model.Session.execute(s).fetchall()\nres_pickleable: list[tuple[str, int]] = []\nfor pkg_id, deleted_datetime in res:\nres_pickleable.append((pkg_id, deleted_datetime.toordinal()))\nreturn res_pickleable\nreturn deleted_packages()\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.sys_stats.get_new_packages","title":"get_new_packages","text":"<pre><code>get_new_packages()\n</code></pre> <p>@return: Returns list of new pkgs and date when they were created, in             format: [(id, date_ordinal), ...]</p> Source code in <code>ckanext/saeoss/blueprints/sys_stats.py</code> <pre><code>def get_new_packages() -&gt; list[tuple[str, int]]:\n\"\"\"\n    @return: Returns list of new pkgs and date when they were created, in\n                format: [(id, date_ordinal), ...]\n    \"\"\"\ndef new_packages() -&gt; list[tuple[str, int]]:\n# Can't filter by time in select because 'min' function has to\n# be 'for all time' else you get first revision in the time period.\npackage = table(\"package\")\nactivity = table(\"activity\")\ns = (\nselect(\n[package.c[\"id\"], func.min(activity.c[\"timestamp\"])],\nfrom_obj=[\nactivity.join(package, activity.c[\"object_id\"] == package.c[\"id\"])\n],\n)\n.group_by(package.c[\"id\"])\n.order_by(func.min(activity.c[\"timestamp\"]))\n)\nres = model.Session.execute(s).fetchall()\nres_pickleable: list[tuple[str, int]] = []\nfor pkg_id, created_datetime in res:\nres_pickleable.append((pkg_id, created_datetime.toordinal()))\nreturn res_pickleable\nreturn new_packages()\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.sys_stats.get_package_revisions","title":"get_package_revisions","text":"<pre><code>get_package_revisions()\n</code></pre> <p>@return: Returns list of revisions and date of them, in             format: [(id, date), ...]</p> Source code in <code>ckanext/saeoss/blueprints/sys_stats.py</code> <pre><code>def get_package_revisions() -&gt; list[Any]:\n\"\"\"\n    @return: Returns list of revisions and date of them, in\n                format: [(id, date), ...]\n    \"\"\"\npackage = table(\"package\")\nactivity = table(\"activity\")\ns = select(\n[package.c[\"id\"], activity.c[\"timestamp\"]],\nfrom_obj=[activity.join(package, activity.c[\"object_id\"] == package.c[\"id\"])],\n).order_by(activity.c[\"timestamp\"])\nres = model.Session.execute(s).fetchall()\nreturn res\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.sys_stats.index","title":"index","text":"<pre><code>index()\n</code></pre> <p>A blueprint rendering stats template.</p> Source code in <code>ckanext/saeoss/blueprints/sys_stats.py</code> <pre><code>@stats_blueprint.route(\"/\")\ndef index():\n\"\"\"A blueprint rendering stats template.\n    \"\"\"\nlargestGroups = largest_groups()\ntopTags = top_tags()\ntopPackagesCreators = top_package_creators()\nmostEditedPackages = most_edited_packages()\npackageRevisions = get_by_week(\"package_revisions\")\npackagesCreated = get_by_week(\"new_packages\")\npackagesDeleted = get_deleted_packages()\nweeklyPackages = get_num_packages_by_week()\nreturn toolkit.render(\n\"sys_stats.html\",\n{\n\"largest_groups\": largestGroups,\n\"top_tags\": topTags,\n\"top_packages_creators\": topPackagesCreators,\n\"most_edited_packages\": mostEditedPackages,\n\"package_revisions\": packageRevisions,\n\"packages_created\": packagesCreated,\n\"packages_deleted\": packagesDeleted,\n\"packages_per_week\": weeklyPackages\n},\n)\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.check_fields_mapping","title":"check_fields_mapping","text":"<pre><code>check_fields_mapping()\n</code></pre> <p>Construct new checkers (minimum, maximum) with simplified names</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def check_fields_mapping() -&gt; list:\n\"\"\"Construct new checkers (minimum, maximum)\n    with simplified names\n    \"\"\"\ndataset_keys = list(DATASET_NAMING_MAPPING.keys())\ndataset_values = list(DATASET_NAMING_MAPPING.values())\nnew_mapped_set = []\nfor item in xml_minimum_set:\ntry:\nnew_val_pos = dataset_values.index(item)\nnew_mapped_set.append(dataset_keys[new_val_pos])\nexcept ValueError:\nnew_mapped_set.append(item)\nreturn new_mapped_set\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.check_file_fields","title":"check_file_fields","text":"<pre><code>check_file_fields(file)\n</code></pre> <p>Performs different checks over the xml files.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>file  returns: ----- object with status: False and a message | status:True.</code> <p>The file to check.</p> required Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def check_file_fields(file) -&gt; dict:\n\"\"\"Performs different checks over\n    the xml files.\n    :param\n    file: The file to check.\n    :type\n    file: file\n    returns:\n    -----\n    object with status: False and a message\n    or status:True.\n    \"\"\"\nroot = None\n# has data check\ndataset = file_has_dataset(file)\nfile_name_reference = file.filename\nif dataset[\"state\"]:\nroot = dataset[\"root\"]\nelse:\nreturn dataset\nif root is not None:\n# return and object of the root\nroot = return_object_root(root)\n# map standarized names into db fields names\nroot = map_xml_fields(root)\n# has field more than maximum set\nmaximum_fields_check_ob = maximum_fields_check(root, file_name_reference)\nif maximum_fields_check_ob[\"state\"] == False:\nreturn {\"state\": False, \"msg\": maximum_fields_check_ob[\"msg\"]}\n# has field less than minimum set\nminimum_set_check_ob = minimum_set_check(root, file_name_reference)\nif minimum_set_check_ob[\"state\"] == False:\nreturn {\"state\": False, \"msg\": minimum_set_check_ob[\"msg\"]}\nroot = lowercase_dataset_values(root)\nroot = handle_responsible_party_choices_fields(root)\nroot = handle_numeric_choices(root)\nroot = set_language_abbreviation(root)\n# root = handle_date_fields(root)\nlogger.debug(\"create ckan dataset\", root)\nreturn create_ckan_dataset(root)\n# things went ok\nelse:\nreturn {\"state\": False, \"msg\": \"something went wrong during dataset creation\"}\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.create_ckan_dataset","title":"create_ckan_dataset","text":"<pre><code>create_ckan_dataset(root_ob)\n</code></pre> <p>Create package via ckan api's package_create action.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def create_ckan_dataset(root_ob):\n\"\"\"Create package via ckan api's\n    package_create action.\n    \"\"\"\nlogger.debug(\"from xml parser blueprint\", root_ob)\npackage_title = root_ob[\"title\"]\npackage_title = change_name_special_chars_to_underscore(package_title)\nslug_url_field = package_title.replace(\" \", \"-\")\nslug_url_field = slug_url_field.lower()\n# root_ob.update({\"name\": slug_url_field})\ncreate_action = toolkit.get_action(\"package_create\")\ntry:\ncreate_action(data_dict=root_ob)\nexcept ValidationError as e:\nif e.error_summary is None:\nsummary = \"\"\nelse:\nsummary = json.dumps(e.error_summary)\nreturn {\n\"state\": False,\n\"msg\": f'error creating package \"{package_title}\": ' + summary,\n}\nreturn {\"state\": True, \"msg\": f'package \"{package_title}\" were created'}\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.extract_files","title":"extract_files","text":"<pre><code>extract_files()\n</code></pre> <p>The blueprint allows for multiple files to be sent at once, extract each and call parse_xml_dataset. return success after all files parsed.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>@file_parser_blueprint.route(\"/\", methods=[\"GET\", \"POST\"], strict_slashes=False)\ndef extract_files():\n\"\"\"The blueprint allows for multiple\n    files to be sent at once, extract\n    each and call parse_xml_dataset.\n    return success after all files\n    parsed.\n    \"\"\"\n# files = request.files.to_dict()\nglobal creator\ncreator = c.userobj\nfiles = request.files.getlist(\"dataset_files\")\nlogger.debug(f\"file {files}\")\n# logging the request files.\nlogger.debug(\"from xml parser blueprint, the files object should be:\", files)\nerr_msgs = []\ninfo_msgs = []\nlogger.debug('==============================')\nfor file in files:\ncheck_result = check_file_fields(file)\nif check_result is None:\nerr_msgs.append(\nf'something went wrong during \"{file.filename}\" dataset creation!'\n)\nif check_result[\"state\"] == False:\nerr_msgs.append(check_result[\"msg\"])\nelse:\ninfo_msgs.append(check_result[\"msg\"])\n# aggregate messages\nif len(err_msgs) &gt; 0:\nres = {\"info_msgs\": info_msgs, \"err_msgs\": err_msgs}\ntry:\nsend_email_to_creator(res)\nexcept:\npass\nreturn jsonify({\"response\": res})\nelse:\n# only when all packages are created\nres = {\"info_msgs\": info_msgs, \"err_msgs\": err_msgs}\ntry:\nsend_email_to_creator(res)\nexcept:\npass\nreturn jsonify({\"response\": \"all packages were created\", \"status\": 200})\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.file_has_dataset","title":"file_has_dataset","text":"<pre><code>file_has_dataset(file)\n</code></pre> <p>Parses the file, checks if file has a dataset within it and returns it.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>file</code> <p>the xml file to parse</p> required Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def file_has_dataset(file):\n\"\"\"Parses the file,\n    checks if file has a\n    dataset within it and\n    returns it.\n    :param\n    file: the xml file to parse\n    :type\n    file: file\n    \"\"\"\ntry:\nxml_string = get_xml_string(file)\ndom_ob = dom.parseString(xml_string)\nexcept ExpatError:\n\"\"\"\n        this happens when the file is\n        completely empty without any tags\n        \"\"\"\nreturn {\"state\": False, \"msg\": f\"file {file.filename} is empty!\"}\nroot = dom_ob.firstChild\nif root.hasChildNodes():\n\"\"\"\n        this will cause the same problem as above\n        \"\"\"\nreturn {\"state\": True, \"root\": root}\nelse:\nreturn {\"state\": False, \"msg\": f\"file {file.filename} is empty!\"}\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.handle_date_field","title":"handle_date_field","text":"<pre><code>handle_date_field(date_field)\n</code></pre> <p>Returns a date from iso-string YY-MM-DDTHH:MM:SS</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def handle_date_field(date_field):\n\"\"\"Returns a date from iso-string\n    YY-MM-DDTHH:MM:SS\n    \"\"\"\niso_date = datetime.fromisoformat(date_field)\nreturn iso_date\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.handle_date_fields","title":"handle_date_fields","text":"<pre><code>handle_date_fields(root_ob)\n</code></pre> <p>Date fields need to be iso compliant inorder to create the package, transform date strings to dates.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def handle_date_fields(root_ob: dict) -&gt; dict:\n\"\"\"Date fields need to be\n    iso compliant inorder\n    to create the package,\n    transform date strings\n    to dates.\n    \"\"\"\ndate_fields = [\n\"metadata_reference_date_and_stamp-0-stamp\",\n\"metadata_reference_date_and_stamp-0-reference\",\n]\nfor field in date_fields:\niso_date_field = handle_date_field(root_ob.get(field))\nroot_ob[field] = iso_date_field\nreturn root_ob\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.handle_numeric_choices","title":"handle_numeric_choices","text":"<pre><code>handle_numeric_choices(root)\n</code></pre> <p>Some choices fields have a number value to be submitted these are provided by the user as text, corresponding number values should be returned</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def handle_numeric_choices(root):\n\"\"\"Some choices fields have a\n    number value to be submitted\n    these are provided by the\n    user as text, corresponding\n    number values should be returned\n    \"\"\"\nonline_resource_description = {\n\"download\": 1,\n\"information\": 2,\n\"offlineAccess\": 3,\n\"order\": 4,\n\"search\": 5,\n}\nspatial_parameters_spatial_representation_type = {\n\"vector\": 1,\n\"grid\": 2,\n\"text table\": 3,\n\"triangulated irregular network\": 4,\n\"stereo model\": 5,\n\"video\": 6,\n\"image\": 7,\n}\nmetadata_reference_date_and_stamp_reference_date_type = {\n\"creation\": 1,\n\"publication\": 2,\n\"revision\": 3,\n}\nmetadata_reference_date_and_stamp_stamp_date_type = {\"creation\": 1}\nonline_res_desc_value = root.get(\"online_resource-0-description\")\nif online_res_desc_value is not None:\nonline_res_desc_value = online_res_desc_value.lower()\nsprt = root[\"spatial_parameters-0-spatial_representation_type\"].lower()\nreference_date_type_value = root[\n\"metadata_reference_date_and_stamp-0-reference_date_type\"\n].lower()\nstamp_date_type_value = root[\n\"metadata_reference_date_and_stamp-0-stamp_date_type\"\n].lower()\nonline_res_desc_value_ = online_resource_description.get(online_res_desc_value)\nif online_res_desc_value_ is not None:\nroot[\"online_resource-0-description\"] = online_res_desc_value_\nsprt_ = spatial_parameters_spatial_representation_type.get(sprt)\nif sprt_ is not None:\nroot[\"spatial_parameters-0-spatial_representation_type\"] = sprt_\nreference_date_type_value_ = (\nmetadata_reference_date_and_stamp_reference_date_type.get(\nreference_date_type_value\n)\n)\nif reference_date_type_value_ is not None:\nroot[\n\"metadata_reference_date_and_stamp-0-reference_date_type\"\n] = reference_date_type_value_\nstamp_date_type_value_ = metadata_reference_date_and_stamp_stamp_date_type.get(\nstamp_date_type_value\n)\nif stamp_date_type_value_ is not None:\nroot[\n\"metadata_reference_date_and_stamp-0-stamp_date_type\"\n] = stamp_date_type_value_\nreturn root\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.handle_responsible_party_choices_fields","title":"handle_responsible_party_choices_fields","text":"<pre><code>handle_responsible_party_choices_fields(root)\n</code></pre> <p>Choices fields are strict, only a handful of choices to be returned, here were handling different variations that can be provided by the user for choices.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def handle_responsible_party_choices_fields(root: dict) -&gt; dict:\n\"\"\"Choices fields are strict,\n    only a handful of choices\n    to be returned, here were\n    handling different variations\n    that can be provided by the user\n    for choices.\n    \"\"\"\nresponsible_party_role = {\n\"resource provider\": \"resource_provider\",\n\"point of contact\": \"point_of_contact\",\n\"principal investigator\": \"principal_investigator\",\n}\ncontact_role = {\"point of contact\": \"point_of_contact\"}\nresponsible_party_role_value = root[\"responsible_party-0-role\"]\ncontact_role_value = root.get(\"contact-0-role\")\nrprv = responsible_party_role_value.lower()\nrprv_ = responsible_party_role.get(rprv)\ncrv_ = None\nif contact_role_value is not None:\ncrv = contact_role_value.lower()\ncrv_ = contact_role.get(crv)\nif rprv_ is not None:\nroot[\"responsible_party-0-role\"] = rprv_\nif crv_ is not None:\nroot[\"contact-0-role\"] = crv_\nreturn root\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.lowercase_dataset_values","title":"lowercase_dataset_values","text":"<pre><code>lowercase_dataset_values(root_ob)\n</code></pre> <p>The metadata creation with CKAN is a very subtle thing, if values provided with xml files are capitalized, some validation rules will fail (e.g. UCS-2 for metadata characteristic will fail vs ucs-2 ) hence lower everything.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def lowercase_dataset_values(root_ob):\n\"\"\"The metadata creation with CKAN is a\n    very subtle thing, if values provided\n    with xml files are capitalized, some\n    validation rules will fail (e.g. UCS-2 for\n    metadata characteristic will fail vs ucs-2\n    ) hence lower everything.\n    \"\"\"\ntextual_fields = [\n\"metadata_language_and_character_set-0-dataset_character_set\",\n\"metadata_language_and_character_set-0-metadata_character_set\",\n\"topic_and_sasdi_theme-0-iso_topic_category\",\n\"topic_and_sasdi_theme-0-sasdi_theme\",\n]\nfor key, value in root_ob.items():\nif key in textual_fields:\ntry:\nroot_ob[key] = value.lower()\nexcept:\n\"the case of dates ..etc\"\npass\nreturn root_ob\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.map_xml_fields","title":"map_xml_fields","text":"<pre><code>map_xml_fields(root)\n</code></pre> <p>Give more user friendly naming for the different fields, avoid the look of the repeating subfields field_name-0-subfield_name</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def map_xml_fields(root: dict) -&gt; dict:\n\"\"\"Give more user friendly naming\n    for the different fields, avoid\n    the look of the repeating subfields\n    field_name-0-subfield_name\n    \"\"\"\nimport copy\nroot_cp = copy.deepcopy(root)\nfor k in root_cp.keys():\ntry:\ndb_field_name = DATASET_NAMING_MAPPING[k]\nroot[db_field_name] = root.pop(k)\nexcept KeyError:\n# the key will presist and fail in max/min checks\npass\nreturn root\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.maximum_fields_check","title":"maximum_fields_check","text":"<pre><code>maximum_fields_check(root_ob, file_name_reference)\n</code></pre> <p>Checking if the provided field is more than the maximum set of EMC datasets fields.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def maximum_fields_check(root_ob, file_name_reference: str):\n\"\"\"Checking if the provided field\n    is more than the maximum set\n    of EMC datasets fields.\n    \"\"\"\nroot_ob_keys = root_ob.keys()\nfor field in root_ob_keys:\nif field not in xml_full_set:\nreturn {\n\"state\": False,\n\"msg\": f'field \"{field}\" '\n+ f'in the file \"{file_name_reference}\" is not within the '\n+ \"maximum set of allowed xml fields\",\n}\nreturn {\"state\": True}\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.minimum_set_check","title":"minimum_set_check","text":"<pre><code>minimum_set_check(root_ob, file_name_reference)\n</code></pre> <p>Checking if the xml file fields has the minimum required set.</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def minimum_set_check(root_ob: dict, file_name_reference: str):\n\"\"\"Checking if the xml file fields\n    has the minimum required set.\n    \"\"\"\n# adding field \"name\" later dynamically\nfor tag in xml_minimum_set:\nif tag not in root_ob:\nif tag != \"name\":\nmsg = f'field \"{tag}\" is a required field, missed in file \"{file_name_reference}\"'\nreturn {\"state\": False, \"msg\": msg}\nreturn {\"state\": True}\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.return_object_root","title":"return_object_root","text":"<pre><code>return_object_root(root)\n</code></pre> <p>Transform the xml dom root into an object of tag_name:tag_value</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def return_object_root(root):\n\"\"\"Transform the xml dom\n    root into an object of\n    tag_name:tag_value\n    \"\"\"\nob_root = {}\nfor field in root.childNodes:\nif field.nodeType != 3:\nob_root[field.tagName] = field.childNodes[0].data\nreturn ob_root\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.send_email_to_creator","title":"send_email_to_creator","text":"<pre><code>send_email_to_creator(res)\n</code></pre> <p>Per issue #105 we need to send emails to creator for mail_user function check https://github.com/ckan/ckan/blob/master/ckan/lib/mailer.py</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def send_email_to_creator(res):\n\"\"\"Per issue #105 we need\n    to send emails to creator\n    for mail_user function\n    check https://github.com/ckan/ckan/blob/master/ckan/lib/mailer.py\n    \"\"\"\nglobal creator\nmsg_body = (\n\"xml upload process completed, please navigate to the\"\n+ \"following messages: \\n\"\n)\ncreated_packages_msgs = res[\"info_msgs\"]\nerror_packages_msgs = res[\"err_msgs\"]\nmsg_body += \"created packages: \\n\"\nfor msg in created_packages_msgs:\nmsg_body += f\"{msg} \\n\"\nmsg_body += \"packages with errors upon creation \\n\"\nfor msg in error_packages_msgs:\nmsg_body += f\"{msg} \\n\"\ntry:\nmail_user(creator, subject=\"creating dataset via xml upload\", body=msg_body)\nexcept MailerException as e:\nreturn\n</code></pre>"},{"location":"developer/manual/blueprints/#ckanext.saeoss.blueprints.file_parser.set_language_abbreviation","title":"set_language_abbreviation","text":"<pre><code>set_language_abbreviation(root)\n</code></pre> <p>Check if dataset language and metadata language provided as \"english\" not \"en\" it will be rejected</p> Source code in <code>ckanext/saeoss/blueprints/file_parser.py</code> <pre><code>def set_language_abbreviation(root: dict) -&gt; dict:\n\"\"\"Check if dataset language and metadata\n    language provided as \"english\"\n    not \"en\" it will be rejected\n    \"\"\"\ndataset_lang = root.get(\"metadata_language_and_character_set-0-dataset_language\")\nif dataset_lang is not None:\ndataset_lang = dataset_lang.lower()\nmetadata_lang = root.get(\"metadata_language_and_character_set-0-metadata_language\")\nif metadata_lang is not None:\nmetadata_lang = metadata_lang.lower()\nif dataset_lang == \"english\":\nroot[\"metadata_language_and_character_set-0-dataset_language\"] = \"en\"\nif metadata_lang == \"english\":\nroot[\"metadata_language_and_character_set-0-metadata_language\"] = \"en\"\nreturn root\n</code></pre>"},{"location":"developer/manual/cli/","title":"Command Line Interface","text":"<p>CKAN CLI commands for the saeoss extension</p> <p>Docker entrypoint for CKAN</p> <p>This entrypoint script is inspired by CKAN's, but with some modifications, the most obvious being that rather than a bash script, this is a Python module.</p>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli._parse_date_time.parse_date_time","title":"parse_date_time","text":"<pre><code>parse_date_time(date_stamp)\n</code></pre> <p>A helper method to create a date object from a CBERS time stamp.</p> <p>Parameters:</p> Name Type Description Default <code>date_stamp</code> <code>str  Example format from CBERS:`2015-12-03 10:40:23`</code> <p>Date in this format:</p> required <p>Returns:</p> Type Description <code>datetime</code> <p>A python datetime object.</p> Source code in <code>ckanext/saeoss/cli/_parse_date_time.py</code> <pre><code>def parse_date_time(date_stamp):\n\"\"\"A helper method to create a date object from a CBERS time stamp.\n    :param date_stamp: Date in this format:\n    :type date_stamp: str\n    Example format from CBERS:`2015-12-03 10:40:23`\n    :returns: A python datetime object.\n    :rtype: datetime\n    \"\"\"\n# print 'Parsing Date: %s\\n' % date_stamp\nstart_year = date_stamp[0:4]\nstart_month = date_stamp[5:7]\nstart_day = date_stamp[8:10]\nstart_time = date_stamp[11:19]\ntokens = start_time.split(':')\nstart_hour = tokens[0]\nstart_minute = tokens[1]\nstart_seconds = tokens[2]\nparsed_date_time = datetime(\nint(start_year),\nint(start_month),\nint(start_day),\nint(start_hour),\nint(start_minute),\nint(start_seconds))\nreturn parsed_date_time\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.bootstrap","title":"bootstrap","text":"<pre><code>bootstrap()\n</code></pre> <p>Bootstrap the saeoss extension</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef bootstrap():\n\"\"\"Bootstrap the saeoss extension\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.cbers","title":"cbers","text":"<pre><code>cbers(source_path, user, owner_org, test_only_flag=False, verbosity_level=2, halt_on_error_flag=False)\n</code></pre> <p>Ingest a collection of CBERS metadata folders.</p> <p>Parameters:</p> Name Type Description Default <code>test_only_flag</code> <code>bool</code> <p>Whether to do a dummy run ( database will not be updated. Default False.</p> <code>False</code> <code>source_path</code> <code>str</code> <p>A CBERS created CBERS 04 metadata xml file and thumbnail.</p> required <code>verbosity_level</code> <code>int</code> <p>How verbose the logging output should be. 0-2 where 2 is very very very very verbose! Default is 1.</p> <code>2</code> <code>halt_on_error_flag</code> <code>bool</code> <p>Whather we should stop processing when the first error is encountered. Default is True.</p> <code>False</code> <code>ignore_missing_thumbs</code> <code>bool</code> <p>Whether we should raise an error if we find we are missing a thumbnails. Default is False.</p> required Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@ingest.command()\n@click.option(\n\"--source-path\",\nhelp=\"A path where CBERS xml source locate\",\n)\n@click.option(\n\"--user\",\nhelp=\"user added the dataset\",\n)\n@click.option(\n\"--owner-org\",\nhelp=\"organisation which the dataset belongs to\",\n)\ndef cbers(source_path,\nuser,\nowner_org,\ntest_only_flag=False,\nverbosity_level=2,\nhalt_on_error_flag=False,\n):\n\"\"\"\n        Ingest a collection of CBERS metadata folders.\n        :param test_only_flag: Whether to do a dummy run ( database will not be\n            updated. Default False.\n        :type test_only_flag: bool\n        :param source_path: A CBERS created CBERS 04 metadata xml file and thumbnail.\n        :type source_path: str\n        :param verbosity_level: How verbose the logging output should be. 0-2\n            where 2 is very very very very verbose! Default is 1.\n        :type verbosity_level: int\n        :param halt_on_error_flag: Whather we should stop processing when the first\n            error is encountered. Default is True.\n        :type halt_on_error_flag: bool\n        :param ignore_missing_thumbs: Whether we should raise an error\n            if we find we are missing a thumbnails. Default is False.\n        :type ignore_missing_thumbs: bool\n        \"\"\"\ndef log_message(message, level=1):\n\"\"\"Log a message for a given leven.\n        :param message: A message.\n        :param level: A log level.\n        \"\"\"\nif verbosity_level &gt;= level:\nprint(message)\nlog_message((\n'Running CBERS 04 Importer with these options:\\n'\n'Test Only Flag: %s\\n'\n'Source Dir: %s\\n'\n'Verbosity Level: %s\\n'\n'Halt on error: %s\\n'\n'------------------')\n% (test_only_flag, source_path, verbosity_level,\nhalt_on_error_flag), 2)\n# Scan the source folder and look for any sub-folders\n# The sub-folder names should be e.g.\n# L5-_TM-_HRF_SAM-_0176_00_0078_00_920606_080254_L0Ra_UTM34S\nlog_message('Scanning folders in %s' % source_path, 1)\n# Loop through each folder found\ningestor_version = 'CBERS 04 ingestor version 1.1'\nrecord_count = 0\nupdated_record_count = 0\ncreated_record_count = 0\nfailed_record_count = 0\nlog_message('Starting directory scan...', 2)\nlist_dataset = glob.glob(os.path.join(source_path, '*.XML'))\nlog_message(f\"dataset {list_dataset}\")\n# workers = len(list_dataset)\nwith futures.ThreadPoolExecutor(3) as executor:\nto_do = []\nfor cbers_folder in list_dataset:\nrecord_count += 1\ntry:\n# Get the folder name\nproduct_folder = os.path.split(cbers_folder)[-1]\nlog_message(product_folder, 2)\n# Find the first and only xml file in the folder\n# search_path = os.path.join(str(cbers_folder), '*.XML')\nlog_message(cbers_folder, 2)\nxml_file = glob.glob(cbers_folder)[0]\nfile = os.path.basename(xml_file)\nfile_name = os.path.splitext(file)[0]\noriginal_product_id = get_original_product_id(file_name)\n# Create a DOM document from the file\ndom = parse(xml_file)\n# First grab all the generic properties that any CBERS will have...\ngeometry = get_geometry(log_message, dom)\nstart_date_time, center_date_time = get_dates(\nlog_message, dom)\n# projection for GenericProduct\nprojection = get_projection(dom)\n# Band count for GenericImageryProduct\nband_count = get_band_count(dom)\nrow = get_scene_row(dom)\npath = get_scene_path(dom)\nsolar_azimuth_angle = get_solar_azimuth_angle(dom)\nsensor_inclination = get_sensor_inclination()\n# # Spatial resolution x for GenericImageryProduct\nspatial_resolution_x = float(get_spatial_resolution_x(dom))\n# # Spatial resolution y for GenericImageryProduct\nspatial_resolution_y = float(\nget_spatial_resolution_y(dom))\nlog_message('Spatial resolution y: %s' % spatial_resolution_y, 2)\n# # Spatial resolution for GenericImageryProduct calculated as (x+y)/2\nspatial_resolution = (spatial_resolution_x + spatial_resolution_y) / 2\nlog_message('Spatial resolution: %s' % spatial_resolution, 2)\nradiometric_resolution = get_radiometric_resolution(dom)\nlog_message('Radiometric resolution: %s' % radiometric_resolution, 2)\nquality = get_quality(dom)\n# ProductProfile for OpticalProduct\n# product_profile = get_product_profile(log_message, original_product_id)\n# Do the ingestion here...\ndataset_name = f\"sansa_{uuid.uuid4()}\"\ndata = {\n'title': original_product_id,\n'owner_org': '',\n'lineage_statement': 'cbrs',\n'spatial': geometry,\n'spatial_representation_type': '007',\n'spatial_reference_system': projection,\n'reference': center_date_time,\n'reference_date_type': '001',\n'equivalent_scale': radiometric_resolution,\n'name': dataset_name,\n'version': '1.0',\n'radiometric_resolution': radiometric_resolution,\n'band_count': band_count,\n'unique_product_id': original_product_id,\n'spatial_resolution_x': spatial_resolution_x,\n'spatial_resolution_y': spatial_resolution_y,\n'spatial_resolution': spatial_resolution,\n'product_acquisition_start': start_date_time,\n'sensor_inclination_angle': sensor_inclination,\n'solar_azimuth_angle': solar_azimuth_angle,\n'row': row,\n'path': path,\n'quality': quality\n}\ndata[\"id\"] = data[\"unique_product_id\"]\ndata[\"lineage\"] = \"cbrs\"\ndata[\"notes\"] = data[\"radiometric_resolution\"]\ndata[\"owner_org\"] = owner_org\ndata[\"spatial\"] = [\n[16.4699, -34.8212],\n[32.8931, -34.8212],\n[32.8931, -22.1265],\n[16.4699, -22.1265],\n[16.4699, -34.8212]\n]\nlogger.debug('catalogue=======&gt; just after', str(data))\n# Check if it's already in catalogue:\n# try:\n#     today = datetime.today()\n#     time_stamp = today.strftime(\"%Y-%m-%d\")\n#     log_message('Time Stamp: %s' % time_stamp, 2)\n# except Exception as e:\n#     print(e.message)\n# update_mode = True\nexcept Exception as e:\nlog_message('Error on dataset value')\nlogger.debug('catalogue=======&gt;', str(data))\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {'name': user})\nfuture = executor.submit(utils.create_single_dataset, user, data)\nto_do.append(future)\nnum_created = 0\nnum_already_exist = 0\nnum_failed = 0\nfor done_future in futures.as_completed(to_do):\ntry:\nresult = done_future.result()\nif result == utils.DatasetCreationResult.CREATED:\nnum_created += 1\nelif result == utils.DatasetCreationResult.NOT_CREATED_ALREADY_EXISTS:\nnum_already_exist += 1\nexcept dictization_functions.DataError:\nlogger.exception(f\"Could not create dataset\")\nnum_failed += 1\nexcept ValueError:\nlogger.exception(f\"Could not create dataset\")\nnum_failed += 1\n# To decide: should we remove ingested product folders?\nprint('===============================')\nprint('Products processed : %s ' % record_count)\nprint('Products updated : %s ' % updated_record_count)\nprint('Products imported : %s ' % created_record_count)\nprint('Products failed to import : %s ' % failed_record_count)\nprint('===============================')\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_materialized_view","title":"create_materialized_view","text":"<pre><code>create_materialized_view()\n</code></pre> <p>Create the materialized view used to map between CKAN and pycsw</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@pycsw.command()\ndef create_materialized_view():\n\"\"\"Create the materialized view used to map between CKAN and pycsw\"\"\"\njinja_env = utils.get_jinja_env()\ntemplate = jinja_env.get_template(\"pycsw/pycsw_view.sql\")\nddl_command = template.render(view_name=_PYCSW_MATERIALIZED_VIEW_NAME)\nwith model.meta.engine.connect() as conn:\nconn.execute(sla_text(ddl_command))\n# conn.commit()\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_pages","title":"create_pages","text":"<pre><code>create_pages()\n</code></pre> <p>Create default pages</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@bootstrap.command()\ndef create_pages():\n\"\"\"Create default pages\"\"\"\nlogger.info(\"Creating default pages...\")\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\ncontext = {\"user\": user[\"name\"]}\nexisting_pages = toolkit.get_action(\"ckanext_pages_list\")(\ncontext=context, data_dict={}\n)\nexisting_page_names = [p[\"name\"] for p in existing_pages]\nfor page in PORTAL_PAGES:\nif page.name not in existing_page_names:\nlogger.info(f\"Creating page {page.name!r}...\")\ntoolkit.get_action(\"ckanext_pages_update\")(\ncontext=context, data_dict=page.to_data_dict()\n)\nelse:\nlogger.info(f\"Page {page.name!r} already exists, skipping...\")\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_saeoss_organizations","title":"create_saeoss_organizations","text":"<pre><code>create_saeoss_organizations()\n</code></pre> <p>Create main Saeoss organizations</p> <p>This command creates the main Saeoss organizations.</p> <p>This function may fail if the Saeoss organizations already exist but are disabled, which can happen if they are deleted using the CKAN web frontend.</p> <p>This is a product of a CKAN limitation whereby it is not possible to retrieve a list of organizations regardless of their status - it will only return those that are active.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@bootstrap.command()\ndef create_saeoss_organizations():\n\"\"\"Create main Saeoss organizations\n    This command creates the main Saeoss organizations.\n    This function may fail if the Saeoss organizations already exist but are disabled,\n    which can happen if they are deleted using the CKAN web frontend.\n    This is a product of a CKAN limitation whereby it is not possible to retrieve a\n    list of organizations regardless of their status - it will only return those that\n    are active.\n    \"\"\"\nexisting_organizations = toolkit.get_action(\"organization_list\")(\ncontext={},\ndata_dict={\n\"organizations\": [org.name for org in SAEOSS_ORGANIZATIONS],\n\"all_fields\": False,\n},\n)\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\nfor org_details in SAEOSS_ORGANIZATIONS:\nif org_details.name not in existing_organizations:\nlogger.info(f\"Creating organization {org_details.name!r}...\")\ntry:\ntoolkit.get_action(\"organization_create\")(\ncontext={\n\"user\": user[\"name\"],\n\"return_id_only\": True,\n},\ndata_dict={\n\"name\": org_details.name,\n\"title\": org_details.title,\n\"description\": org_details.description,\n\"image_url\": org_details.image_url,\n},\n)\nexcept toolkit.ValidationError:\nlogger.exception(f\"Could not create organization {org_details.name!r}\")\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_sample_datasets","title":"create_sample_datasets","text":"<pre><code>create_sample_datasets(owner_org, num_datasets, name_prefix, name_suffix, temporal_range, longitude_range, latitude_range)\n</code></pre> <p>Create multiple sample datasets</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@load_sample_data.command()\n@click.argument(\"owner_org\")\n@click.option(\"-n\", \"--num-datasets\", default=10, show_default=True)\n@click.option(\"-p\", \"--name-prefix\", default=\"sample-dataset\", show_default=True)\n@click.option(\"-s\", \"--name-suffix\")\n@click.option(\n\"-t\",\n\"--temporal-range\",\nnargs=2,\ntype=click.DateTime(),\ndefault=(dt.datetime(2021, 1, 1), dt.datetime(2022, 12, 31)),\n)\n@click.option(\"-x\", \"--longitude-range\", nargs=2, type=float, default=(16.3, 33.0))\n@click.option(\"-y\", \"--latitude-range\", nargs=2, type=float, default=(-35.0, -21.0))\ndef create_sample_datasets(\nowner_org,\nnum_datasets,\nname_prefix,\nname_suffix,\ntemporal_range,\nlongitude_range,\nlatitude_range,\n):\n\"\"\"Create multiple sample datasets\"\"\"\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\ndatasets = generate_sample_datasets(\nnum_datasets,\nname_prefix,\nowner_org,\nname_suffix,\ntemporal_range_start=temporal_range[0],\ntemporal_range_end=temporal_range[1],\nlongitude_range_start=longitude_range[0],\nlongitude_range_end=longitude_range[1],\nlatitude_range_start=latitude_range[0],\nlatitude_range_end=latitude_range[1],\n)\nready_to_create_datasets = [ds.to_data_dict() for ds in datasets]\nworkers = min(3, len(ready_to_create_datasets))\nwith futures.ThreadPoolExecutor(workers) as executor:\nto_do = []\nfor dataset in ready_to_create_datasets:\nfuture = executor.submit(utils.create_single_dataset, user, dataset)\nto_do.append(future)\nnum_created = 0\nnum_already_exist = 0\nnum_failed = 0\nfor done_future in futures.as_completed(to_do):\ntry:\nresult = done_future.result()\nif result == utils.DatasetCreationResult.CREATED:\nnum_created += 1\nelif result == utils.DatasetCreationResult.NOT_CREATED_ALREADY_EXISTS:\nnum_already_exist += 1\nexcept dictization_functions.DataError:\nlogger.exception(f\"Could not create dataset\")\nnum_failed += 1\nexcept ValueError:\nlogger.exception(f\"Could not create dataset\")\nnum_failed += 1\nlogger.info(f\"Created {num_created} datasets\")\nlogger.info(f\"Skipped {num_already_exist} datasets\")\nlogger.info(f\"Failed to create {num_failed} datasets\")\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_sample_organizations","title":"create_sample_organizations","text":"<pre><code>create_sample_organizations(app_context)\n</code></pre> <p>Create sample organizations and members</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@load_sample_data.command()\n@provide_request_context\ndef create_sample_organizations(app_context):\n\"\"\"Create sample organizations and members\"\"\"\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\ncreate_org_action = toolkit.get_action(\"organization_create\")\ncreate_org_member_action = toolkit.get_action(\"organization_member_create\")\ncreate_harvester_action = toolkit.get_action(\"harvest_source_create\")\nlogger.info(f\"Creating sample organizations ...\")\nfor org_details, memberships, harvesters in SAMPLE_ORGANIZATIONS:\nlogger.debug(f\"Creating {org_details.name!r}...\")\ntry:\ncreate_org_action(\ncontext={\n\"user\": user[\"name\"],\n},\ndata_dict={\n\"name\": org_details.name,\n\"title\": org_details.title,\n\"description\": org_details.description,\n\"image_url\": org_details.image_url,\n},\n)\nexcept toolkit.ValidationError:\nlogger.exception(f\"Could not create organization {org_details.name!r}\")\nfor user_name, role in memberships:\nlogger.debug(f\"Creating membership {user_name!r} ({role!r})...\")\ncreate_org_member_action(\ncontext={\n\"user\": user[\"name\"],\n},\ndata_dict={\n\"id\": org_details.name,\n\"username\": user_name,\n\"role\": role if role != \"publisher\" else \"admin\",\n},\n)\nfor harvester_details in harvesters:\nlogger.debug(f\"Creating harvest source {harvester_details.name!r}...\")\ntry:\ncreate_harvester_action(\ncontext={\"user\": user[\"name\"]},\ndata_dict={\n\"name\": harvester_details.name,\n\"url\": harvester_details.url,\n\"source_type\": harvester_details.source_type,\n\"frequency\": harvester_details.update_frequency,\n\"config\": json.dumps(harvester_details.configuration),\n\"owner_org\": org_details.name,\n},\n)\nexcept toolkit.ValidationError:\nlogger.exception(\nf\"Could not create harvest source {harvester_details.name!r}\"\n)\nlogger.debug(\nf\"Attempting to re-enable possibly deleted harvester source...\"\n)\nsample_harvester = model.Package.get(harvester_details.name)\nif sample_harvester is None:\nlogger.error(\nf\"Could not find harvester source {harvester_details.name!r}\"\n)\ncontinue\nelse:\nsample_harvester.state = model.State.ACTIVE\nmodel.repo.commit()\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.create_stac_dataset_func","title":"create_stac_dataset_func","text":"<pre><code>create_stac_dataset_func(user, url, owner_org, number_records=10)\n</code></pre> <p>fetch data from a valid stac catalog and create datasets out of stack items</p> <p>Parameters:</p> Name Type Description Default <code>user</code> <code>str</code> <p>authorized user name to create the dataset</p> required <code>url</code> <code>str</code> <p>url of the catalogue</p> required <code>owner_org</code> <code>str</code> <p>Organization where the dataset will belong</p> required <code>number_records</code> <code>int</code> <p>Maximum number of created dataset from STAC items</p> <code>10</code> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>def create_stac_dataset_func(user: str, url: str, owner_org: str, number_records: int = 10):\n\"\"\"\n    fetch data from a valid stac catalog\n    and create datasets out of stack items\n    :param user: authorized user name to create the dataset\n    :type user: str\n    :param url: url of the catalogue\n    :type url: str\n    :param owner_org: Organization where the dataset will belong\n    :type owner_org: str\n    :param number_records: Maximum number of created dataset from STAC items\n    :type number_records: int\n    todo:\n    1. enchance the resources preview\n    2. remove the filler data\n    3. add proper checks for params (user, url, max)\n    \"\"\"\ncatalog = Client.open(url)\nstac_collections = list(catalog.get_collections())\ntry:\nnumber_records = int(number_records)\nexcept:\nnumber_records = 10\nlogger.info(\"number_records is not an integer, setting it to 10\")\ncreated = 0\nprocessed = 0\nstac_harvester_id = uuid.uuid4()\nowner_org = owner_org\nq = f\"\"\" insert into stac_harvester values('{stac_harvester_id}', '{user}', '{owner_org}', '{url}', '{number_records}', 'running', '', '{datetime.datetime.now()}') \"\"\"\nmodel.Session.execute(q)\nmodel.Session.commit()\nfor collection in stac_collections:\ncollection_items = collection.get_items()\nfor item in collection_items:\nif processed &gt; number_records:\nbreak\nlogger.debug(f\"collection_items {collection_items}\")\ndata_dict = {}\nmeta_date = item.properties.get(\n\"start_datetime\",\nitem.properties.get(\n\"datetime\",\ndatetime.datetime.now().isoformat()\n)\n)\nmeta_date = datetime_parse(meta_date).strftime(\"%Y-%m-%dT%H:%M:%S\")\ndata_dict[\"id\"] = catalog.id + item.id\ndata_dict[\"title\"] = f\"{catalog.title} - {collection.title} - {item.properties.get('title', item.id)}\"\ndata_dict[\"name\"] = item.id\n# there might or might not be notes, let's take the notes of the catalog for the moment\ndata_dict[\"notes\"] = collection.description\ndata_dict[\"responsible_party-0-individual_name\"] = \"responsible individual name\"\ndata_dict[\"responsible_party-0-role\"] = \"owner\"\ndata_dict[\"responsible_party-0-position_name\"] = \"position name\"\ndata_dict[\"dataset_reference_date-0-reference\"] = meta_date\ndata_dict[\"dataset_reference_date-0-reference_date_type\"] = \"1\"\ndata_dict[\"topic_and_sasdi_theme-0-iso_topic_category\"] = \"farming\"\ndata_dict[\"owner_org\"] = owner_org\ndata_dict[\"lineage_statement\"] = \"lineage statement\"\ndata_dict[\"private\"] = False\ndata_dict[\"metadata_language_and_character_set-0-dataset_language\"] = \"en\"\ndata_dict[\"metadata_language_and_character_set-0-metadata_language\"] = \"en\"\ndata_dict[\"metadata_language_and_character_set-0-dataset_character_set\"] = \"utf-8\"\ndata_dict[\"metadata_language_and_character_set-0-metadata_character_set\"] = \"utf-8\"\ndata_dict[\"lineage\"] = \"lineage statement\"\ndata_dict[\"distribution_format-0-name\"] = \"distribution format\"\ndata_dict[\"distribution_format-0-version\"] = \"1.0\"\ndata_dict[\"spatial\"] = json.dumps(item.geometry)\ndata_dict[\"spatial_parameters-0-equivalent_scale\"] = \"equivalent scale\"\ndata_dict[\"spatial_parameters-0-spatial_representation_type\"] = \"001\"\ndata_dict[\"spatial_parameters-0-spatial_reference_system\"] = \"EPSG:3456\"\ndata_dict[\"metadata_date\"] = meta_date\ndata_dict[\"tag_string\"] = \"general\"\ndata_dict[\"resources\"] = []\nif data_dict.get('dataset_reference_date', None):\ndel data_dict['dataset_reference_date']\nlogger.debug('stac_item:', str(data_dict))\n# TODO dataset thumbnail, tags,\nfor link in item.links:\nif link.rel == \"thumbnail\":\ndata_dict[\"resources\"].append({\n\"name\": link.target,\n\"url\": link.target,\n\"format\": \"jpg\",\n\"format_version\":\n\"1.0\"\n})\nif link.rel == \"self\":\ndata_dict[\"resources\"].append({\n\"name\": \"STAC Item\",\n\"url\": link.target,\n\"format\": \"JSON\",\n\"format_version\":\n\"1.0\"\n})\nwith futures.ThreadPoolExecutor(3) as executor:\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {'name': user})\nfuture = executor.submit(utils.create_single_dataset, user, data_dict)\nlogger.debug(future.result())\nif str(future.result()) != 'DatasetCreationResult.NOT_CREATED_ALREADY_EXISTS':\ncreated += 1\nprocessed += 1\n_q = f\"\"\" update stac_harvester set message = 'finished', status = 'finished' WHERE harvester_id = '{stac_harvester_id}' \"\"\"\n_result = model.Session.execute(_q)\nmodel.Session.commit()\nlogger.debug('STAC dataset creation finished')\nlogger.debug(f'{created} records created')\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.defer_to_alembic","title":"defer_to_alembic","text":"<pre><code>defer_to_alembic(alembic_command, collect_args, command_arg, command_kwarg)\n</code></pre> <p>Run an alembic command</p> <p>Examples:</p> <pre><code>\b\ndefer-to-alembic current --command-kwarg=verbose:true\ndefer-to-alembic heads --command-kwarg=verbose:true\ndefer-to-alembic history\n</code></pre> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@extra_commands.command()\n@click.argument(\"alembic_command\")\n@click.option(\n\"--collect-args\",\nhelp=\"Should the command args be collected into a list?\",\nis_flag=True,\n)\n@click.option(\n\"--command-arg\",\nmultiple=True,\nhelp=\"Arguments for the alembic command. Can be provided multiple times\",\n)\n@click.option(\n\"--command-kwarg\",\nmultiple=True,\nhelp=(\n\"Provide each keyword argument as a colon-separated string of \"\n\"key_name:value. This option can be provided multiple times\"\n),\n)\ndef defer_to_alembic(alembic_command, collect_args, command_arg, command_kwarg):\n\"\"\"Run an alembic command\n    Examples:\n        \\b\n        defer-to-alembic current --command-kwarg=verbose:true\n        defer-to-alembic heads --command-kwarg=verbose:true\n        defer-to-alembic history\n    \"\"\"\nalembic_wrapper = AlembicWrapper(\"saeoss\")\nbool_keys = (\n\"verbose\",\n\"autogenerate\",\n)\ntry:\ncommand = getattr(alembic.command, alembic_command)\nexcept AttributeError:\nlogger.exception(\"Something wrong with retrieving the command\")\nelse:\nkwargs = {}\nfor raw_kwarg in command_kwarg:\nkey, value = raw_kwarg.partition(\":\")[::2]\nif key in bool_keys:\nkwargs[key] = toolkit.asbool(value)\nelse:\nkwargs[key] = value\nif collect_args:\nout = alembic_wrapper.run_command(command, command_arg, **kwargs)\nelse:\nout = alembic_wrapper.run_command(command, *command_arg, **kwargs)\nfor line in out:\nlogger.info(line)\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_data","title":"delete_data","text":"<pre><code>delete_data()\n</code></pre> <p>Delete saeoss bootstrapped and sample data</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef delete_data():\n\"\"\"Delete saeoss bootstrapped and sample data\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_pages","title":"delete_pages","text":"<pre><code>delete_pages()\n</code></pre> <p>Delete default pages</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@delete_data.command()\ndef delete_pages():\n\"\"\"Delete default pages\"\"\"\nlogger.info(\"Deleting default pages...\")\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\ncontext = {\"user\": user[\"name\"]}\nexisting_pages = toolkit.get_action(\"ckanext_pages_list\")(\ncontext=context, data_dict={}\n)\nexisting_page_names = [p[\"name\"] for p in existing_pages]\nfor page in PORTAL_PAGES:\nif page.name in existing_page_names:\nlogger.info(f\"Deleting page {page.name!r}...\")\ntoolkit.get_action(\"ckanext_pages_delete\")(\ncontext=context, data_dict={\"page\": page.name}\n)\nelse:\nlogger.info(f\"Page {page.name!r} does not exist, skipping...\")\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_saeoss_organizations","title":"delete_saeoss_organizations","text":"<pre><code>delete_saeoss_organizations()\n</code></pre> <p>Delete the main Saeoss organizations.</p> <p>This command will delete the Saeoss organizations from the CKAN DB - CKAN refers to this as purging the organizations (the CKAN default behavior is to have the delete command simply disable the existing organizations, but keeping them in the DB).</p> <p>It can safely be called multiple times - it will only ever delete the organizations once.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@delete_data.command()\ndef delete_saeoss_organizations():\n\"\"\"Delete the main Saeoss organizations.\n    This command will delete the Saeoss organizations from the CKAN DB - CKAN refers to\n    this as purging the organizations (the CKAN default behavior is to have the delete\n    command simply disable the existing organizations, but keeping them in the DB).\n    It can safely be called multiple times - it will only ever delete the\n    organizations once.\n    \"\"\"\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\nfor org_details in SAEOSS_ORGANIZATIONS:\nlogger.info(f\"Purging  organization {org_details.name!r}...\")\ntry:\ntoolkit.get_action(\"organization_purge\")(\ncontext={\"user\": user[\"name\"]}, data_dict={\"id\": org_details.name}\n)\nexcept toolkit.ObjectNotFound:\nlogger.info(\nf\"Organization {org_details.name!r} does not exist, skipping...\"\n)\nlogger.info(f\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_sample_datasets","title":"delete_sample_datasets","text":"<pre><code>delete_sample_datasets()\n</code></pre> <p>Deletes at most 1000 of existing sample datasets</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@delete_data.command()\ndef delete_sample_datasets():\n\"\"\"Deletes at most 1000 of existing sample datasets\"\"\"\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\npurge_dataset_action = toolkit.get_action(\"dataset_purge\")\nget_datasets_action = toolkit.get_action(\"package_search\")\nmax_rows = 1000\nexisting_sample_datasets = get_datasets_action(\ncontext={\"user\": user[\"name\"]},\ndata_dict={\n\"q\": f\"tags:{SAMPLE_DATASET_TAG}\",\n\"rows\": max_rows,\n\"facet\": False,\n\"include_drafts\": True,\n\"include_private\": True,\n},\n)\nfor dataset in existing_sample_datasets[\"results\"]:\nlogger.debug(f\"Purging dataset {dataset['name']!r}...\")\npurge_dataset_action(\ncontext={\"user\": user[\"name\"]}, data_dict={\"id\": dataset[\"id\"]}\n)\nnum_existing = existing_sample_datasets[\"count\"]\nremaining_sample_datasets = num_existing - max_rows\nif remaining_sample_datasets &gt; 0:\nlogger.info(f\"{remaining_sample_datasets} still remain\")\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_sample_organizations","title":"delete_sample_organizations","text":"<pre><code>delete_sample_organizations()\n</code></pre> <p>Delete sample organizations.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@delete_data.command()\ndef delete_sample_organizations():\n\"\"\"Delete sample organizations.\"\"\"\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\norg_show_action = toolkit.get_action(\"organization_show\")\npurge_org_action = toolkit.get_action(\"organization_purge\")\npackage_search_action = toolkit.get_action(\"package_search\")\ndataset_purge_action = toolkit.get_action(\"dataset_purge\")\nharvest_source_list_action = toolkit.get_action(\"harvest_source_list\")\nharvest_source_delete_action = toolkit.get_action(\"harvest_source_delete\")\nlogger.info(f\"Purging sample organizations ...\")\nfor org_details, _, _ in SAMPLE_ORGANIZATIONS:\ntry:\norg = org_show_action(\ncontext={\"user\": user[\"name\"]}, data_dict={\"id\": org_details.name}\n)\nlogger.debug(f\"{org = }\")\nexcept toolkit.ObjectNotFound:\nlogger.info(f\"Organization {org_details.name} does not exist, skipping...\")\nelse:\npackages = package_search_action(\ncontext={\"user\": user[\"name\"]},\ndata_dict={\"fq\": f\"owner_org:{org['id']}\"},\n)\nlogger.debug(f\"{packages = }\")\nfor package in packages[\"results\"]:\nlogger.debug(f\"Purging package {package['id']}...\")\ndataset_purge_action(\ncontext={\"user\": user[\"name\"]}, data_dict={\"id\": package[\"id\"]}\n)\nharvest_sources = harvest_source_list_action(\ncontext={\"user\": user[\"name\"]}, data_dict={\"organization_id\": org[\"id\"]}\n)\nlogger.debug(f\"{ harvest_sources = }\")\nfor harvest_source in harvest_sources:\nlogger.debug(f\"Deleting harvest_source {harvest_source['title']}...\")\nharvest_source_delete_action(\ncontext={\"user\": user[\"name\"], \"clear_source\": True},\ndata_dict={\"id\": harvest_source[\"id\"]},\n)\nlogger.debug(f\"Purging {org_details.name!r}...\")\npurge_org_action(\ncontext={\"user\": user[\"name\"]},\ndata_dict={\"id\": org[\"id\"]},\n)\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.delete_sample_users","title":"delete_sample_users","text":"<pre><code>delete_sample_users()\n</code></pre> <p>Delete sample users.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@delete_data.command()\ndef delete_sample_users():\n\"\"\"Delete sample users.\"\"\"\nuser = toolkit.get_action(\"get_site_user\")({\"ignore_auth\": True}, {})\ndelete_user_action = toolkit.get_action(\"user_delete\")\nlogger.info(f\"Deleting sample users ...\")\nfor user_details in SAMPLE_USERS:\nlogger.info(f\"Deleting {user_details.name!r}...\")\ndelete_user_action(\ncontext={\"user\": user[\"name\"]},\ndata_dict={\"id\": user_details.name},\n)\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.drop_materialized_view","title":"drop_materialized_view","text":"<pre><code>drop_materialized_view()\n</code></pre> <p>Delete the materialized view used to map between CKAN and pycsw</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@pycsw.command()\ndef drop_materialized_view():\n\"\"\"Delete the materialized view used to map between CKAN and pycsw\"\"\"\nwith model.meta.engine.connect() as conn:\nconn.execute(\nsla_text(f\"DROP MATERIALIZED VIEW {_PYCSW_MATERIALIZED_VIEW_NAME}\")\n)\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.extra_commands","title":"extra_commands","text":"<pre><code>extra_commands()\n</code></pre> <p>Extra commands that are less relevant</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef extra_commands():\n\"\"\"Extra commands that are less relevant\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.harvesting_dispatcher","title":"harvesting_dispatcher","text":"<pre><code>harvesting_dispatcher(ctx, post_run_delay_seconds)\n</code></pre> <p>Manages the harvesting queue and then sleeps a while after that.</p> <p>This command takes care of submitting pending jobs and marking done jobs as finished.</p> <p>It is similar to ckanext.harvest's <code>harvester run</code> CLI command, with the difference being that this command is designed to run and then wait a specific amount of time before exiting. This is a workaround for the fact that it is not possible to specify a delay period when restarting docker containers in docker-compose's normal mode.</p> <p>NOTE: This command is not needed when running under k8s or docker-compose swarm mode, as these offer other ways to control periodic services. In that case you can simply configure the periodic service and then use</p> <p><code>launch-ckan-cli harvester run</code></p> <p>as the container's CMD instruction.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@extra_commands.command()\n@click.option(\n\"--post-run-delay-seconds\",\nhelp=\"How much time to sleep after performing the harvesting command\",\ndefault=(60 * 5),\n)\n@click.pass_context\ndef harvesting_dispatcher(ctx, post_run_delay_seconds: int):\n\"\"\"Manages the harvesting queue and then sleeps a while after that.\n    This command takes care of submitting pending jobs and marking done jobs as finished.\n    It is similar to ckanext.harvest's `harvester run` CLI command, with the difference\n    being that this command is designed to run and then wait a specific amount of time\n    before exiting. This is a workaround for the fact that it is not possible to\n    specify a delay period when restarting docker containers in docker-compose's normal\n    mode.\n    NOTE: This command is not needed when running under k8s or docker-compose swarm\n    mode, as these offer other ways to control periodic services. In that case you can\n    simply configure the periodic service and then use\n    `launch-ckan-cli harvester run`\n    as the container's CMD instruction.\n    \"\"\"\nflask_app = ctx.meta[\"flask_app\"]\nwith flask_app.test_request_context():\nlogger.info(f\"Calling harvester run command...\")\nharvest_utils.run_harvester()\nlogger.info(f\"Sleeping for {post_run_delay_seconds!r} seconds...\")\ntime.sleep(post_run_delay_seconds)\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.ingest","title":"ingest","text":"<pre><code>ingest()\n</code></pre> <p>Ingest a collection to metadata</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef ingest():\n\"\"\" Ingest a collection to metadata\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.load_sample_data","title":"load_sample_data","text":"<pre><code>load_sample_data()\n</code></pre> <p>Load sample data into non-production deployments</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef load_sample_data():\n\"\"\"Load sample data into non-production deployments\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.pycsw","title":"pycsw","text":"<pre><code>pycsw()\n</code></pre> <p>Commands related to integration between CKAN and pycsw</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef pycsw():\n\"\"\"Commands related to integration between CKAN and pycsw\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.refresh_materialized_view","title":"refresh_materialized_view","text":"<pre><code>refresh_materialized_view()\n</code></pre> <p>Refresh the materialized view used to map between CKAN and pycsw</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@pycsw.command()\ndef refresh_materialized_view():\n\"\"\"Refresh the materialized view used to map between CKAN and pycsw\"\"\"\nwith model.meta.engine.connect() as conn:\nconn.execute(\nsla_text(\nf\"REFRESH MATERIALIZED VIEW {_PYCSW_MATERIALIZED_VIEW_NAME} WITH DATA;\"\n)\n)\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.refresh_pycsw_materialized_view","title":"refresh_pycsw_materialized_view","text":"<pre><code>refresh_pycsw_materialized_view(ctx, post_run_delay_seconds)\n</code></pre> <p>Refreshes the pycsw materiolized view and then sleeps for a while</p> <p>This is similar to our own <code>ckan run pycsw refresh-materialized-view</code>, with the difference being that this command is designed to run and then wait a specific amount of time before exiting. This is a workaround for the fact that it is not possible to specify a delay period when restarting docker containers in docker-compose's normal mode.</p> <p>NOTE: This command is not needed when running under k8s or docker-compose swarm mode, as these offer other ways to control periodic services. In that case you can simply configure a periodic service and then use</p> <p><code>launch-ckan-cli saeoss pycsw refresh-materizalied-view</code></p> <p>as the container's CMD instruction.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@extra_commands.command()\n@click.option(\n\"--post-run-delay-seconds\",\nhelp=\"How much time to sleep after refreshing the materialized view\",\ndefault=(60 * 5),\n)\n@click.pass_context\ndef refresh_pycsw_materialized_view(ctx, post_run_delay_seconds: int):\n\"\"\"Refreshes the pycsw materiolized view and then sleeps for a while\n    This is similar to our own `ckan run pycsw refresh-materialized-view`, with the\n    difference being that this command is designed to run and then wait a specific\n    amount of time before exiting. This is a workaround for the fact that it is not\n    possible to specify a delay period when restarting docker containers in\n    docker-compose's normal mode.\n    NOTE: This command is not needed when running under k8s or docker-compose swarm\n    mode, as these offer other ways to control periodic services. In that case you can\n    simply configure a periodic service and then use\n    `launch-ckan-cli saeoss pycsw refresh-materizalied-view`\n    as the container's CMD instruction.\n    \"\"\"\nflask_app = ctx.meta[\"flask_app\"]\nwith flask_app.test_request_context():\nlogger.info(f\"Calling the pycsw refresh-materialized-view command...\")\nctx.invoke(refresh_materialized_view)\nlogger.info(f\"Sleeping for {post_run_delay_seconds!r} seconds...\")\ntime.sleep(post_run_delay_seconds)\nlogger.info(\"Done!\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.saeoss","title":"saeoss","text":"<pre><code>saeoss(verbose)\n</code></pre> <p>Commands related to the saeoss extension.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@click.group()\n@click.option(\"--verbose\", is_flag=True)\ndef saeoss(verbose: bool):\n\"\"\"Commands related to the saeoss extension.\"\"\"\nclick_handler = utils.ClickLoggingHandler()\nlogging.basicConfig(\nlevel=logging.DEBUG if verbose else logging.INFO, handlers=(click_handler,)\n)\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.send_email_notifications","title":"send_email_notifications","text":"<pre><code>send_email_notifications()\n</code></pre> <p>Send pending email notifications to users</p> <p>This command should be ran periodically.</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.command()\ndef send_email_notifications():\n\"\"\"Send pending email notifications to users\n    This command should be ran periodically.\n    \"\"\"\nsetting_key = \"ckan.activity_streams_email_notifications\"\nif toolkit.asbool(toolkit.config.get(setting_key)):\nenv_sentinel = \"CKAN_SMTP_PASSWORD\"\nif os.getenv(env_sentinel) is not None:\nnum_sent = get_and_send_notifications_for_all_users()\nlogger.info(f\"Sent {num_sent} emails\")\nlogger.info(\"Done!\")\nelse:\nlogger.error(\nf\"Could not find the {env_sentinel!r} environment variable. Email \"\nf\"notifications are not configured correctly. Aborting...\",\n)\nelse:\nlogger.error(f\"{setting_key} is not enabled in config. Aborting...\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.shell","title":"shell","text":"<pre><code>shell()\n</code></pre> <p>Launch a shell with CKAN already imported and ready to explore</p> <p>The implementation of this command is mostly inspired and adapted from django's <code>shell</code> command</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@click.command()\ndef shell():\n\"\"\"\n    Launch a shell with CKAN already imported and ready to explore\n    The implementation of this command is mostly inspired and adapted from django's\n    `shell` command\n    \"\"\"\ntry:\nfrom IPython import start_ipython\nstart_ipython(argv=[])\nexcept ImportError:\nimport code\n# Set up a dictionary to serve as the environment for the shell.\nimported_objects = {}\n# By default, this will set up readline to do tab completion and to read and\n# write history to the .python_history file, but this can be overridden by\n# $PYTHONSTARTUP or ~/.pythonrc.py.\ntry:\nsys.__interactivehook__()\nexcept Exception:\n# Match the behavior of the cpython shell where an error in\n# sys.__interactivehook__ prints a warning and the exception and continues.\nprint(\"Failed calling sys.__interactivehook__\")\ntraceback.print_exc()\n# Set up tab completion for objects imported by $PYTHONSTARTUP or\n# ~/.pythonrc.py.\ntry:\nimport readline\nimport rlcompleter\nreadline.set_completer(rlcompleter.Completer(imported_objects).complete)\nexcept ImportError:\npass\n# Start the interactive interpreter.\ncode.interact(local=imported_objects)\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.stac","title":"stac","text":"<pre><code>stac()\n</code></pre> <p>Commnads related to STAC catalogues</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@saeoss.group()\ndef stac():\n\"\"\"Commnads related to STAC catalogues\"\"\"\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.commands.test_background_job","title":"test_background_job","text":"<pre><code>test_background_job(job_name, job_arg, job_kwarg)\n</code></pre> <p>Run background jobs synchronously</p> <p>JOB_NAME is the name of the job function to be run. Look in the <code>jobs</code> module for existing functions.</p> <p>Example:</p> <p>\b     ckan saeoss test-background-job \\         notify_org_admins_of_dataset_maintenance_request \\         --job-arg=f1733d0c-5188-43b3-8039-d95efb76b4f5</p> Source code in <code>ckanext/saeoss/cli/commands.py</code> <pre><code>@extra_commands.command()\n@click.argument(\"job_name\")\n@click.option(\n\"--job-arg\",\nmultiple=True,\nhelp=\"Arguments for the job function. Can be provided multiple times\",\n)\n@click.option(\n\"--job-kwarg\",\nmultiple=True,\nhelp=(\n\"Provide each keyword argument as a colon-separated string of \"\n\"key_name:value. This option can be provided multiple times\"\n),\n)\ndef test_background_job(job_name, job_arg, job_kwarg):\n\"\"\"Run background jobs synchronously\n    JOB_NAME is the name of the job function to be run. Look in the `jobs` module for\n    existing functions.\n    Example:\n    \\b\n        ckan saeoss test-background-job \\\\\n            notify_org_admins_of_dataset_maintenance_request \\\\\n            --job-arg=f1733d0c-5188-43b3-8039-d95efb76b4f5\n    \"\"\"\njob_function = getattr(jobs, job_name, None)\nif job_function is not None:\nkwargs = {}\nfor raw_kwarg in job_kwarg:\nkey, value = raw_kwarg.partition(\":\")[::2]\nkwargs[key] = value\njob_function(*job_arg, **kwargs)\nlogger.info(\"Done!\")\nelse:\nlogger.error(f\"Job function {job_name!r} does not exist\")\n</code></pre>"},{"location":"developer/manual/cli/#ckanext.saeoss.cli.utils.ClickLoggingHandler","title":"ClickLoggingHandler","text":"<p>             Bases: <code>Handler</code></p> <p>Custom logging handler to allow using click output functions</p>"},{"location":"developer/manual/coding-conventions/","title":"Coding Conventions","text":""},{"location":"developer/manual/constants/","title":"Constants","text":"<p>The constants variables</p>"},{"location":"developer/manual/email-notification/","title":"Email Notifications","text":"<p>Reimplementation of the core CKAN email notifications.</p> <p>This module reimplements the core CKAN email notifications in order to:</p> <ul> <li> <p>Be able to provide more visibility onto what is going on. This includes returning the   number of emails being sent.</p> </li> <li> <p>Modify the default implementation in order to not require an active request.</p> </li> </ul>"},{"location":"developer/manual/email-notification/#ckanext.saeoss.email_notifications.get_notifications","title":"get_notifications","text":"<pre><code>get_notifications(user_dict, since)\n</code></pre> <p>Return any email notifications for the given user since <code>since</code>.</p> <p>For example email notifications about activity streams will be returned for any activities the occurred since <code>since</code>.</p> <p>Parameters:</p> Name Type Description Default <code>user_dict</code> <code>dictionary</code> <p>a dictionary representing the user, should contain 'id' and 'name'</p> required <code>since</code> <p>datetime after which to return notifications from</p> required <p>Returns:</p> Type Description <code>list of dicts with keys 'subject' and 'body'</code> <p>a list of email notifications</p> Source code in <code>ckanext/saeoss/email_notifications.py</code> <pre><code>def get_notifications(user_dict, since):\n\"\"\"Return any email notifications for the given user since `since`.\n    For example email notifications about activity streams will be returned for\n    any activities the occurred since `since`.\n    :param user_dict: a dictionary representing the user, should contain 'id'\n        and 'name'\n    :type user_dict: dictionary\n    :param since: datetime after which to return notifications from\n    :rtype since: datetime.datetime\n    :returns: a list of email notifications\n    :rtype: list of dicts with keys 'subject' and 'body'\n    \"\"\"\nnotifications = []\nlogger.debug(f\"Retrieving notifications for {user_dict['name']!r} since {since!r}\")\nfor function in _notifications_functions:\nnotifications.extend(function(user_dict, since))\nreturn notifications\n</code></pre>"},{"location":"developer/manual/email-notification/#ckanext.saeoss.email_notifications.send_notification","title":"send_notification","text":"<pre><code>send_notification(user, email_dict)\n</code></pre> <p>Email <code>email_dict</code> to <code>user</code>.</p> Source code in <code>ckanext/saeoss/email_notifications.py</code> <pre><code>def send_notification(user, email_dict):\n\"\"\"Email `email_dict` to `user`.\"\"\"\nimport ckan.lib.mailer\nif not user.get(\"email\"):\nlogger.debug(\nf\"User {user.get('name')!r} does not have an email address configured\"\n)\n# FIXME: Raise an exception.\nreturn\ntry:\nckan.lib.mailer.mail_recipient(\nuser[\"display_name\"],\nuser[\"email\"],\nemail_dict[\"subject\"],\nemail_dict[\"body\"],\n)\nexcept ckan.lib.mailer.MailerException:\nlogger.error(ckan.lib.mailer.MailerException)\nraise\nelse:\nlogger.debug(f\"Email sent!\")\n</code></pre>"},{"location":"developer/manual/email-notification/#ckanext.saeoss.email_notifications.string_to_timedelta","title":"string_to_timedelta","text":"<pre><code>string_to_timedelta(s)\n</code></pre> <p>Parse a string s and return a standard datetime.timedelta object.</p> <p>Handles days, hours, minutes, seconds, and microseconds.</p> <p>Accepts strings in these formats:</p> <p>2 days 14 days 4:35:00 (hours, minutes and seconds) 4:35:12.087465 (hours, minutes, seconds and microseconds) 7 days, 3:23:34 7 days, 3:23:34.087465 .087465 (microseconds only)</p> <p>Raises:</p> Type Description <code>ckan.logic.ValidationError</code> <p>if the given string does not match any of the recognised formats</p> Source code in <code>ckanext/saeoss/email_notifications.py</code> <pre><code>def string_to_timedelta(s):\n\"\"\"Parse a string s and return a standard datetime.timedelta object.\n    Handles days, hours, minutes, seconds, and microseconds.\n    Accepts strings in these formats:\n    2 days\n    14 days\n    4:35:00 (hours, minutes and seconds)\n    4:35:12.087465 (hours, minutes, seconds and microseconds)\n    7 days, 3:23:34\n    7 days, 3:23:34.087465\n    .087465 (microseconds only)\n    :raises ckan.logic.ValidationError: if the given string does not match any\n        of the recognised formats\n    \"\"\"\npatterns = []\ndays_only_pattern = \"(?P&lt;days&gt;\\d+)\\s+day(s)?\"\npatterns.append(days_only_pattern)\nhms_only_pattern = \"(?P&lt;hours&gt;\\d?\\d):(?P&lt;minutes&gt;\\d\\d):(?P&lt;seconds&gt;\\d\\d)\"\npatterns.append(hms_only_pattern)\nms_only_pattern = \".(?P&lt;milliseconds&gt;\\d\\d\\d)(?P&lt;microseconds&gt;\\d\\d\\d)\"\npatterns.append(ms_only_pattern)\nhms_and_ms_pattern = hms_only_pattern + ms_only_pattern\npatterns.append(hms_and_ms_pattern)\ndays_and_hms_pattern = \"{0},\\s+{1}\".format(days_only_pattern, hms_only_pattern)\npatterns.append(days_and_hms_pattern)\ndays_and_hms_and_ms_pattern = days_and_hms_pattern + ms_only_pattern\npatterns.append(days_and_hms_and_ms_pattern)\nfor pattern in patterns:\nmatch = re.match(\"^{0}$\".format(pattern), s)\nif match:\nbreak\nif not match:\nraise logic.ValidationError(\"Not a valid time: {0}\".format(s))\ngd = match.groupdict()\ndays = int(gd.get(\"days\", \"0\"))\nhours = int(gd.get(\"hours\", \"0\"))\nminutes = int(gd.get(\"minutes\", \"0\"))\nseconds = int(gd.get(\"seconds\", \"0\"))\nmilliseconds = int(gd.get(\"milliseconds\", \"0\"))\nmicroseconds = int(gd.get(\"microseconds\", \"0\"))\ndelta = dt.timedelta(\ndays=days,\nhours=hours,\nminutes=minutes,\nseconds=seconds,\nmilliseconds=milliseconds,\nmicroseconds=microseconds,\n)\nreturn delta\n</code></pre>"},{"location":"developer/manual/get-releases/","title":"Get Releases","text":"<p>Get project releases from Github API.</p>"},{"location":"developer/manual/helpers/","title":"Helpers","text":""},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.build_pages_nav_main","title":"build_pages_nav_main","text":"<pre><code>build_pages_nav_main(*args)\n</code></pre> <p>Reimplementation of ckanext-pages <code>build_pages_nav_main()</code></p> <p>This function reimplements the original ckanext-pages in order to overcome a bug whereby the groups menu is not removable because of a typo in its route name.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def build_pages_nav_main(*args):\n\"\"\"Reimplementation of ckanext-pages `build_pages_nav_main()`\n    This function reimplements the original ckanext-pages in order to overcome\n    a bug whereby the groups menu is not removable because of a typo in its route name.\n    \"\"\"\nabout_menu = toolkit.asbool(toolkit.config.get(\"ckanext.pages.about_menu\", True))\ngroup_menu = toolkit.asbool(toolkit.config.get(\"ckanext.pages.group_menu\", True))\norg_menu = toolkit.asbool(\ntoolkit.config.get(\"ckanext.pages.organization_menu\", True)\n)\nnew_args = []\nfor arg in args:\nif arg[0] == \"home.about\" and not about_menu:\ncontinue\nif arg[0] == \"organization.index\" and not org_menu:\ncontinue\nif arg[0] == \"group.index\" and not group_menu:\ncontinue\nnew_args.append(arg)\noutput = core_build_nav_main(*new_args)\n# do not display any private pages in menu even for sysadmins\npages_list = toolkit.get_action(\"ckanext_pages_list\")(\nNone, {\"order\": True, \"private\": False}\n)\npage_name = \"\"\nis_current_page = toolkit.get_endpoint() in (\n(\"pages\", \"show\"),\n(\"pages\", \"blog_show\"),\n)\nif is_current_page:\npage_name = toolkit.request.path.split(\"/\")[-1]\nfor page in pages_list:\nif page.get(\"title\") == \"About\":\ncontinue  # nsif staff decided they don't want about page.\ntype_ = \"blog\" if page[\"page_type\"] == \"blog\" else \"pages\"\nname = quote(page[\"name\"])\ntitle = html_escape(page[\"title\"])\nlink = toolkit.h.literal('&lt;a href=\"/{}/{}\"&gt;{}&lt;/a&gt;'.format(type_, name, title))\nif page[\"name\"] == page_name:\nli = (\ntoolkit.literal('&lt;li class=\"active\"&gt;') + link + toolkit.literal(\"&lt;/li&gt;\")\n)\nelse:\nli = toolkit.literal(\"&lt;li&gt;\") + link + toolkit.literal(\"&lt;/li&gt;\")\noutput = output + li\nreturn output\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_all_datasets_count","title":"get_all_datasets_count","text":"<pre><code>get_all_datasets_count(user_obj)\n</code></pre> <p>fixes a bug when applying solr active search</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_all_datasets_count(user_obj):\n\"\"\"\n    fixes a bug when applying\n    solr active search\n    \"\"\"\n# context = {\"user\":c.user, \"auth_user_obj\":c.userobj}\n# return len(packages)\n# 32000 rows is the maximum of what can be retrieved\n# by ckan at once.\n# the question becomes, do i want you to know the private datasets count ?\n# q = \"\"\" select count(distinct(id)) from package where state='active' and type='dataset' \"\"\"\n# result = model.Session.execute(q)\n# return result.fetchone()[0]\n# this doesn't work\n# results = toolkit.get_action(\"package_list\")(context={\"auth_user_obj\": c.userobj}, data_dict={'include_private':True})\nresult = toolkit.get_action(\"package_search\")(\ndata_dict={\"q\": \"*:*\", \"include_private\": True}\n)\nreturn result[\"count\"]\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_current_release","title":"get_current_release","text":"<pre><code>get_current_release()\n</code></pre> <p>get releases to website footer, the release depends on the environment, if it's staging it uses v..-rc, rather if it's production v...</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_current_release():\n\"\"\"get releases to website footer,\n    the release depends on the environment,\n    if it's staging it uses v*.*.*-rc, rather\n    if it's production v.*.*.*\n    \"\"\"\ncurrent_file_path = Path(__file__)\nreleases_file_path = current_file_path.parent.joinpath(\"releases.txt\")\nwith open(releases_file_path) as f:\nreleases = json.loads(f.read())\ncurrent_branch = _get_git_branch()\n# this might change so main is release candidate\n# and release branch is the latest release\nif current_branch == \"development\":\nreturn releases.get(\"latest_release_candidate\")\nelif current_branch == \"main\":\nreturn releases.get(\"latest_release\")\nelse:\nreturn \"\"\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_datasets_thumbnail","title":"get_datasets_thumbnail","text":"<pre><code>get_datasets_thumbnail(data_dict)\n</code></pre> <p>Generate thumbnails based on metadataset</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_datasets_thumbnail(data_dict):\n\"\"\"\n    Generate thumbnails based on metadataset\n    \"\"\"\ndata_thumbnail = \"/images/org.png\"\nlogger.debug(f\"data dict from helper {data_dict['organization']['image_url']}\")\nif data_dict.get(\"metadata_thumbnail\"):\ndata_thumbnail = data_dict.get(\"metadata_thumbnail\")\nelse:\n# data_resource = data_dict.get(\"resources\")\n# for resource in data_resource:\n#     if resource[\"format\"].lower() == \"wms\":\n#         wms_url = resource[\"url\"]\n#         parsed_url = dict(parse_qsl(urlparse(wms_url).query))\n#         parsed_url[\"format\"] = \"image/png; mode=8bit\"\n#         data_thumbnail = \"%s?%s\" % (\n#             wms_url.split(\"?\")[0],\n#             urlencode(parsed_url),\n#         )\n#         break\nimage_url = data_dict['organization']['image_url']\nif image_url and not image_url.startswith('http'):\n#munge here should not have an effect only doing it incase\n#of potential vulnerability of dodgy api input\nimage_url = munge.munge_filename_legacy(image_url)\ndata_thumbnail = h.url_for_static(\n'uploads/group/%s' % data_dict['organization']['image_url'],\nqualified=True\n)\nlogger.debug(f\"image_url {data_thumbnail}\")\nreturn data_thumbnail\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_default_bounding_box","title":"get_default_bounding_box","text":"<pre><code>get_default_bounding_box()\n</code></pre> <p>Return the default bounding box in the form upper left, lower right</p> <p>This function calculates the default bounding box from the <code>ckan.saeoss.default_spatial_search_extent</code> configuration value. Note that this configuration value is expected to be in GeoJSON format and in GeoJSON, coordinate pairs take the form <code>lon, lat</code>.</p> <p>This function outputs a list with upper left latitude, upper left latitude, lower right latitude, lower right longitude.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_default_bounding_box() -&gt; typing.Optional[typing.List[float]]:\n\"\"\"Return the default bounding box in the form upper left, lower right\n    This function calculates the default bounding box from the\n    `ckan.saeoss.default_spatial_search_extent` configuration value. Note that\n    this configuration value is expected to be in GeoJSON format and in GeoJSON,\n    coordinate pairs take the form `lon, lat`.\n    This function outputs a list with upper left latitude, upper left latitude, lower\n    right latitude, lower right longitude.\n    \"\"\"\nconfigured_extent = toolkit.config.get(\n\"ckan.saeoss.default_spatial_search_extent\"\n)\nparsed_extent = json.loads(configured_extent)\nreturn convert_geojson_to_bbox(parsed_extent)\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_default_spatial_search_extent","title":"get_default_spatial_search_extent","text":"<pre><code>get_default_spatial_search_extent(padding_degrees=None)\n</code></pre> <p>Return GeoJSON polygon with bbox to use for default view of spatial search map widget.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_default_spatial_search_extent(\npadding_degrees: typing.Optional[float] = None,\n) -&gt; typing.Dict:\n\"\"\"\n    Return GeoJSON polygon with bbox to use for default view of spatial search map widget.\n    \"\"\"\nconfigured_extent = toolkit.config.get(\n\"ckan.saeoss.default_spatial_search_extent\"\n)\nif padding_degrees and configured_extent:\nparsed_extent = json.loads(configured_extent)\nresult = _pad_geospatial_extent(parsed_extent, padding_degrees)\nelse:\nresult = configured_extent\nreturn result\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_featured_datasets_count","title":"get_featured_datasets_count","text":"<pre><code>get_featured_datasets_count()\n</code></pre> <p>used with facets count</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_featured_datasets_count():\n\"\"\"\n    used with facets count\n    \"\"\"\nsearch_action = toolkit.get_action(\"package_search\")\nresult = search_action(data_dict={\"q\": \"featured:true\", \"include_private\": True})\nreturn result[\"count\"]\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_maintenance_custom_other_field_data","title":"get_maintenance_custom_other_field_data","text":"<pre><code>get_maintenance_custom_other_field_data(data_dict)\n</code></pre> <p>The custom field \"maintenance\" stores other options in an __extra structure in the database, in package_extra table, this structure doesn't show up with regular ckan actions like package_show, package_search ..etc., we need to grab it from the database, if other alternatives can be used (e.g. when using the pkg coming with /package/read.html, the whole data shows up) it would be preferable</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_maintenance_custom_other_field_data(data_dict):\n\"\"\"The custom field \"maintenance\" stores **other**\n    options in an __extra structure in the database,\n    in package_extra table, this structure\n    doesn't show up with regular ckan actions like\n    **package_show**, **package_search** ..etc., we need\n    to grab it from the database, if other alternatives\n    can be used (e.g. when using the pkg coming with\n    /package/read.html, the whole data shows up)\n    it would be preferable\n    \"\"\"\ndataset_id = data_dict.get(\"id\")\n# will be none if we are creating new package\nif dataset_id is not None:\nq = f\"\"\" select value from package_extra where package_id='{data_dict[\"id\"]}' AND key = 'maintenance_information'  \"\"\"\nresult = model.Session.execute(q)\nfor row in result.fetchall():\nload_row = json.loads(dict(row)[\"value\"])\ntry:\nreturn load_row[0][\"__extras\"][\"custom_other_choice_select\"]\nexcept:\npass\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_org_memberships","title":"get_org_memberships","text":"<pre><code>get_org_memberships(user_id)\n</code></pre> <p>Return a list of organizations and roles where the input user is a member</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_org_memberships(user_id: str):\n\"\"\"Return a list of organizations and roles where the input user is a member\"\"\"\nquery = (\nmodel.Session.query(model.Group, model.Member.capacity)\n.join(model.Member, model.Member.group_id == model.Group.id)\n.join(model.User, model.User.id == model.Member.table_id)\n.filter(\nmodel.User.id == user_id,\nmodel.Member.state == \"active\",\nmodel.Group.is_organization == True,\n)\n.order_by(model.Group.name)\n)\nreturn query.all()\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_org_public_records_count","title":"get_org_public_records_count","text":"<pre><code>get_org_public_records_count(org_id)\n</code></pre> <p>the default behavior is showing fixed number of recoreds for orgs if the user is not a part of them in org list page, we are adjusting</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_org_public_records_count(org_id: str) -&gt; int:\n\"\"\"\n    the default behavior is showing fixed\n    number of recoreds for orgs if the\n    user is not a part of them in org\n    list page, we are adjusting\n    \"\"\"\nquery = model.Session.query(model.Package).filter(\nmodel.Package.owner_org == org_id,\nmodel.Package.private == \"f\",\nmodel.Package.state == \"active\",\nmodel.Package.type == \"dataset\",\n)\ncount = len(query.all())\nreturn count\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_recent_news","title":"get_recent_news","text":"<pre><code>get_recent_news(number=5, exclude=None)\n</code></pre> <p>Get the five recent news.</p> <p>Parameters:</p> Name Type Description Default <code>number</code> <code>int</code> <p>Number of new want to get</p> <code>5</code> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_recent_news(number=5, exclude=None):\n\"\"\"Get the five recent news.\n    :param\n    number: Number of new want to get\n    :type\n    number: int\n    \"\"\"\nnews_list = toolkit.get_action(\"ckanext_pages_list\")(\nNone, {\"order_publish_date\": True, \"private\": False, \"page_type\": \"news\"}\n)\nnew_list = []\nfor news in news_list:\nif exclude and news[\"name\"] == exclude:\ncontinue\nnew_list.append(news)\nif len(new_list) == number:\nbreak\nreturn new_list\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_saved_searches","title":"get_saved_searches","text":"<pre><code>get_saved_searches()\n</code></pre> <p>Returns saved searches</p> <p>based on a user id.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_saved_searches():\n\"\"\"Returns saved searches\n    based on a user id.\n    \"\"\"\nif c.userobj is None:\nreturn []\nuser_id = c.userobj.id\nif c.userobj.sysadmin:\nq = f\"\"\" select saved_search_title, search_query, saved_search_date, saved_search_id, owner_user from saved_searches order by owner_user \"\"\"\nelse:\nq = f\"\"\" select saved_search_title, search_query, saved_search_date, saved_search_id from saved_searches where owner_user='{user_id}' order by saved_search_date desc \"\"\"\nrows = model.Session.execute(q)\nsaved_searches_list = []\nfor row in rows:\nsaved_searches_list.append(row)\n# saved_searches_list = SavedSearches.get(SavedSearches,owner_user=user_id)\nreturn saved_searches_list\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_seo_metatags","title":"get_seo_metatags","text":"<pre><code>get_seo_metatags(site_key)\n</code></pre> <p>Get metatags value for SEO.</p> <p>Parameters:</p> Name Type Description Default <code>site_key</code> <code>str</code> <p>Site's key</p> required Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_seo_metatags(site_key):\n\"\"\"Get metatags value for SEO.\n    :param\n    site_key: Site's key\n    :type\n    site_key: str\n    \"\"\"\ndata_dict = {\n\"site_author\": toolkit.config.get(\n\"ckan.site_author\",\n),\n\"site_description\": toolkit.config.get(\n\"ckan.site_description\",\n),\n\"site_keywords\": toolkit.config.get(\n\"ckan.site_keywords\",\n),\n}\nreturn data_dict[site_key]\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_user_dashboard_packages","title":"get_user_dashboard_packages","text":"<pre><code>get_user_dashboard_packages(user_id)\n</code></pre> <p>The current behavior displays all the available datasets to the user, we need only the datasets created by the user.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>int</code> <p>User's id</p> required Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_user_dashboard_packages(user_id):\n\"\"\"The current behavior displays\n    all the available datasets to the\n    user, we need only the datasets\n    created by the user.\n    :param\n    user_id: User's id\n    :type\n    user_id: int\n    \"\"\"\n# q = f\"\"\" select package.*, key, value from package join package_extra on package_id=package.id where\n# package.creator_user_id='{user_id}' \"\"\" rows = model.Session.execute(q) packages = [] for row in rows:\n# packages.append(dict(row)) return packages\nquery = model.Session.query(model.Package).filter(\nmodel.Package.creator_user_id == user_id\n)\npackages = [\npackage_dictize(package, context={\"user\": user_id, \"model\": model})\nfor package in query.all()\n]\nreturn packages\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_user_id","title":"get_user_id","text":"<pre><code>get_user_id(user_name)\n</code></pre> <p>Gets user id from its username (the username is also unique)</p> <p>Parameters:</p> Name Type Description Default <code>user_name</code> <code>str</code> <p>User's username</p> required Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_user_id(user_name: str):\n\"\"\"Gets user id from its username (the username is also unique)\n    :param\n    user_name: User's username\n    :type\n    user_name:str\n    \"\"\"\nuser_obj = model.Session.query(model.User).filter_by(name=user_name).first()\nreturn user_obj.id\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_user_name","title":"get_user_name","text":"<pre><code>get_user_name(user_id)\n</code></pre> <p>Get a user's username by its id</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>int</code> <p>User's id</p> required Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_user_name(user_id):\n\"\"\"Get a user's username by its id\n    :param\n    user_id: User's id\n    :type\n    user_id:int\n    \"\"\"\nuser_obj = model.Session.query(model.User).filter_by(id=user_id).first()\nreturn user_obj.name\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_user_name_from_url","title":"get_user_name_from_url","text":"<pre><code>get_user_name_from_url(url)\n</code></pre> <p>Get user's name from url</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>The url</p> required Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_user_name_from_url(url: str):\n\"\"\"Get user's name from url\n    :param\n    url: The url\n    :type\n    url:str\n    \"\"\"\nreturn url.split(\"/user/\")[1]\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.get_year","title":"get_year","text":"<pre><code>get_year()\n</code></pre> <p>Display current year in the footer.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def get_year():\n\"\"\"Display current year in the footer.\n    \"\"\"\nreturn datetime.datetime.now().year\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.mod_scheming_flatten_subfield","title":"mod_scheming_flatten_subfield","text":"<pre><code>mod_scheming_flatten_subfield(subfield, data)\n</code></pre> <p>this is specifically for testing site and might not be useful after a while, we are mimicking and modifying https://github.com/ckan/ckanext-scheming/blob/master/ckanext/scheming/helpers.py#L414 to avoid few errors</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def mod_scheming_flatten_subfield(subfield, data):\n\"\"\"\n    this is specifically for testing site\n    and might not be useful after a while,\n    we are mimicking and modifying\n    https://github.com/ckan/ckanext-scheming/blob/master/ckanext/scheming/helpers.py#L414\n    to avoid few errors\n    \"\"\"\nflat = dict(data)\nif subfield[\"field_name\"] not in data:\nreturn flat\nfor i, record in enumerate(data[subfield[\"field_name\"]]):\nprefix = \"{field_name}-{index}-\".format(\nfield_name=subfield[\"field_name\"],\nindex=i,\n)\nfor k in record:\n\"\"\"\n            this is where the modification happens,\n            records can be just an empty string,\n            accessing it as a dict would cause a\n            type error\n            \"\"\"\nif type(flat) is dict and type(record) is dict:\nflat[prefix + k] = record[k]\nreturn flat\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.org_member_list","title":"org_member_list","text":"<pre><code>org_member_list(org_id, role=None)\n</code></pre> <p>Return list of organization members with the specified role</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def org_member_list(org_id: str, role: typing.Optional[str] = None) -&gt; typing.List:\n\"\"\"Return list of organization members with the specified role\"\"\"\nmember_list_action = toolkit.get_action(\"member_list\")\norg_members = member_list_action(data_dict={\"id\": org_id, \"object_type\": \"user\"})\nresults = []\nfor member_id, _, member_role in org_members:\nif role is None or member_role.lower() == role.lower():\nresults.append(member_id)\nreturn results\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.user_is_org_member","title":"user_is_org_member","text":"<pre><code>user_is_org_member(org_id, user=None, role=None)\n</code></pre> <p>Check if user has editor role in the input organization.</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def user_is_org_member(\norg_id: str, user=None, role: typing.Optional[str] = None\n) -&gt; bool:\n\"\"\"Check if user has editor role in the input organization.\"\"\"\nresult = False\nif user is not None:\nmember_list_action = toolkit.get_action(\"member_list\")\ntry:\norg_members = member_list_action(\ndata_dict={\"id\": org_id, \"object_type\": \"user\"}\n)\nexcept:\nreturn result\nlogger.debug(f\"{user.id=}\")\nlogger.debug(f\"{org_members=}\")\nfor member_id, _, member_role in org_members:\nif user.id == member_id:\nif role is None or member_role.lower() == role.lower():\nresult = True\nbreak\nreturn result\n</code></pre>"},{"location":"developer/manual/helpers/#ckanext.saeoss.helpers.user_is_staff_member","title":"user_is_staff_member","text":"<pre><code>user_is_staff_member(user_id)\n</code></pre> <p>Check if user is a member of the staff org</p> Source code in <code>ckanext/saeoss/helpers.py</code> <pre><code>def user_is_staff_member(user_id: str) -&gt; bool:\n\"\"\"Check if user is a member of the staff org\"\"\"\nmemberships_action = toolkit.get_action(\"organization_list_for_user\")\nmemberships = memberships_action(context={\"user\": user_id}, data_dict={})\nportal_staff = toolkit.config.get(\n\"ckan.saeoss.portal_staff_organization_name\", \"saeoss staff\"\n)\nfor group in memberships:\nis_org = group.get(\"type\", \"organization\") == \"organization\"\nis_portal_staff = group.get(\"title\").lower() == portal_staff.lower()\nif is_org and is_portal_staff:\nresult = True\nbreak\nelse:\nresult = False\nreturn result\n</code></pre>"},{"location":"developer/manual/jobs/","title":"Jobs","text":"<p>Asynchronous jobs for SAEOSS portal.</p>"},{"location":"developer/manual/jobs/#ckanext.saeoss.jobs.notify_org_admins_of_dataset_management_request","title":"notify_org_admins_of_dataset_management_request","text":"<pre><code>notify_org_admins_of_dataset_management_request(activity_id)\n</code></pre> <p>Send a request of management to an organisation admin</p> <p>Parameters:</p> Name Type Description Default <code>activity_id</code> <code>str</code> <p>The activity to request</p> required Source code in <code>ckanext/saeoss/jobs.py</code> <pre><code>def notify_org_admins_of_dataset_management_request(activity_id: str):\n\"\"\"Send a request of management to an organisation admin\n    :param\n    activity_id: The activity to request\n    :type\n    activity_id: str\n    \"\"\"\nactivity_obj = model.Activity.get(activity_id)\nif activity_obj is not None:\nactivity_type = DatasetManagementActivityType(activity_obj.activity_type)\ndataset = (activity_obj.data or {}).get(\"package\")\ntemplates_map = {\nDatasetManagementActivityType.REQUEST_PUBLICATION: (),\nDatasetManagementActivityType.REQUEST_MAINTENANCE: (\n\"email_notifications/dataset_maintenance_request_subject.txt\",\n\"email_notifications/dataset_maintenance_request_body.txt\",\n),\n}\nif dataset is not None:\norg_id = dataset[\"owner_org\"]\norganization = toolkit.get_action(\"organization_show\")(\ncontext={\"ignore_auth\": True},\ndata_dict={\n\"id\": org_id,\n\"include_users\": True,\n},\n)\njinja_env = email_notifications.get_jinja_env()\nsubject_path, body_path = templates_map[activity_type]\nsubject_template = jinja_env.get_template(subject_path)\nbody_template = jinja_env.get_template(body_path)\nfor member in organization.get(\"users\", []):\nis_active = member.get(\"state\") == \"active\"\nis_org_admin = member.get(\"capacity\") == \"admin\"\nif is_active and is_org_admin:\nuser_obj = model.User.get(member[\"id\"])\nlogger.debug(\nf\"About to send a notification to {user_obj.name!r}...\"\n)\nsubject = subject_template.render(\nsite_title=toolkit.config.get(\"ckan.site_title\", \"SASDI EMC\")\n)\nbody = body_template.render(\norganization=organization,\nuser_obj=user_obj,\ndataset=dataset,\nh=toolkit.h,\nsite_url=toolkit.config.get(\"ckan.site_url\", \"\"),\n)\nemail_notifications.send_notification(\n{\n\"name\": user_obj.name,\n\"display_name\": user_obj.display_name,\n\"email\": user_obj.email,\n},\n{\"subject\": subject, \"body\": body},\n)\nelse:\nraise RuntimeError(f\"Could not retrieve activity with id {activity_id!r}\")\n</code></pre>"},{"location":"developer/manual/logic/","title":"Action","text":"<p>Override of CKAN actions</p> <p>ckan scheming gives repeating subfields the naming of fieldname-0*-subfieldname the number * can change accoring to the number of repeating subfields, this schema may affect how the field is going to be referenced from other services related to EMC, we are changing this naming here.</p>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.add_named_url.populate_dataset_name","title":"populate_dataset_name","text":"<pre><code>populate_dataset_name(data_dict, context, calls=0)\n</code></pre> <p>Adding uuid to the named url , the name field was a bit confusing to the client.</p> Source code in <code>ckanext/saeoss/logic/action/add_named_url.py</code> <pre><code>def populate_dataset_name(data_dict: dict, context: dict, calls:int = 0):\n\"\"\"Adding uuid to the named url\n    , the name field was a bit\n    confusing to the client.\n    \"\"\"\ntitle = data_dict.get(\"title\")\nif data_dict.get('name'):\nname = _remove_special_characters_from_package_url(data_dict.get('name'))\nelse:\nname = _remove_special_characters_from_package_url(title)\nvalidation_dict = {\"name\":name}\nschema = {\"name\": [tk.get_validator(\"package_name_exists\")]}\ndata,error = tk.navl_validate(validation_dict,schema, context)\nif error:\nreturn name\ncalls += 1\nif re.search(r'-\\d$',name):\nname = re.sub(r'-\\d$', '', name)\nname = name+'-'+str(calls)\nelse:\nname = name+'-'+str(calls)\ndata_dict['name'] = name\nreturn populate_dataset_name(data_dict, context, calls)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.package_create","title":"package_create","text":"<pre><code>package_create(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>package_create</code> action to check if package  is being published after being created.</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef package_create(original_action, context, data_dict):\n\"\"\"\n    Intercepts the core `package_create` action to check if package\n     is being published after being created.\n    \"\"\"\ndataset_name = populate_dataset_name(data_dict, context)\ndata_dict[\"name\"] = dataset_name\nlogger.debug(f\"inside package_create action: {data_dict=}\")\nreturn _act_depending_on_package_visibility(original_action, context, data_dict)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.package_patch","title":"package_patch","text":"<pre><code>package_patch(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>package_patch</code> action to check if package is being published.</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef package_patch(original_action, context, data_dict):\n\"\"\"\n    Intercepts the core `package_patch` action to check if package is being published.\n    \"\"\"\nreturn _act_depending_on_package_visibility(original_action, context, data_dict)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.package_show","title":"package_show","text":"<pre><code>package_show(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>package_show</code> action to add reference_date to package dict</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef package_show(original_action, context, data_dict):\n\"\"\"\n    Intercepts the core `package_show` action to add reference_date to package dict\n    \"\"\"\npackage_dict = _package_show(context, data_dict)\npackage_dict['reference_date'] = _get_reference_date(package_dict)\nreturn package_dict\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.package_update","title":"package_update","text":"<pre><code>package_update(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>package_update</code> action to check if package is being published.</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef package_update(original_action, context, data_dict):\n\"\"\"\n    Intercepts the core `package_update` action to check if package is being published.\n    \"\"\"\nlogger.debug(f\"inside package_update action: {data_dict=}\")\nreturn _act_depending_on_package_visibility(original_action, context, data_dict)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.user_create","title":"user_create","text":"<pre><code>user_create(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>user_create</code> action to also create the extra_fields.</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef user_create(original_action, context, data_dict):\n\"\"\"Intercepts the core `user_create` action to also create the extra_fields.\"\"\"\noriginal_result = original_action(context, data_dict)\nuser_id = original_result[\"id\"]\nmodel = context[\"model\"]\nextra = UserExtraFields(\nuser_id=user_id,\naffiliation=data_dict.get(\"extra_fields\") or \"\",\nprofessional_occupation=data_dict.get(\"extra_fields\") or \"\",\n)\nmodel.Session.add(extra)\nmodel.Session.commit()\noriginal_result[\"extra_fields\"] = _dictize_user_extra_fields(extra)\nreturn original_result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.user_patch","title":"user_patch","text":"<pre><code>user_patch(context, data_dict)\n</code></pre> <p>Implements user_patch action, which is not available on CKAN</p> <p>The <code>data_dict</code> parameter is expected to contain at least the <code>id</code> key, which should hold the user's id or name</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>def user_patch(context: typing.Dict, data_dict: typing.Dict) -&gt; typing.Dict:\n\"\"\"Implements user_patch action, which is not available on CKAN\n    The `data_dict` parameter is expected to contain at least the `id` key, which\n    should hold the user's id or name\n    \"\"\"\nlogger.debug(f\"{locals()=}\")\nlogger.debug(\"About to check access of user_update\")\ntoolkit.check_access(\"user_update\", context, data_dict)\nlogger.debug(\"After checking access of user_update\")\nshow_context = {\n\"model\": context[\"model\"],\n\"session\": context[\"session\"],\n\"user\": context[\"user\"],\n\"auth_user_obj\": context[\"auth_user_obj\"],\n}\nuser_dict = toolkit.get_action(\"user_show\")(\nshow_context, data_dict={\"id\": context[\"user\"]}\n)\nlogger.debug(f\"{user_dict=}\")\npatched = dict(user_dict)\npatched.update(data_dict)\nlogger.debug(f\"{patched=}\")\nupdate_action = toolkit.get_action(\"user_update\")\nreturn update_action(context, patched)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.user_show","title":"user_show","text":"<pre><code>user_show(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>user_show</code> action to add any extra_fields that may exist for the user</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef user_show(original_action, context, data_dict):\n\"\"\"\n    Intercepts the core `user_show` action to add any extra_fields that may exist for\n    the user\n    \"\"\"\noriginal_result = original_action(context, data_dict)\nuser_id = original_result.get(\"id\")\nmodel = context[\"model\"]\nuser_obj = model.Session.query(model.User).filter_by(id=user_id).first()\nif user_obj.extra_fields is not None:\noriginal_result[\"extra_fields\"] = _dictize_user_extra_fields(\nuser_obj.extra_fields\n)\nelse:\noriginal_result[\"extra_fields\"] = None\nreturn original_result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan.user_update","title":"user_update","text":"<pre><code>user_update(original_action, context, data_dict)\n</code></pre> <p>Intercepts the core <code>user_update</code> action to update any extra_fields that may exist for the user.</p> Source code in <code>ckanext/saeoss/logic/action/ckan.py</code> <pre><code>@toolkit.chained_action\ndef user_update(original_action, context, data_dict):\n\"\"\"\n    Intercepts the core `user_update` action to update any extra_fields that may exist\n    for the user.\n    \"\"\"\noriginal_result = original_action(context, data_dict)\nuser_id = original_result[\"id\"]\nmodel = context[\"model\"]\nuser_obj = model.Session.query(model.User).filter_by(id=user_id).first()\nif user_obj.extra_fields is None:\nextra = UserExtraFields(user_id=user_id)\nelse:\nextra = user_obj.extra_fields\nextra.affiliation = data_dict.get(\"extra_fields_affiliation\")\nextra.professional_occupation = data_dict.get(\n\"extra_fields_professional_occupation\"\n)\nmodel.Session.add(extra)\nmodel.Session.commit()\nlogger.debug(f\"{original_result=}\")\noriginal_result[\"extra_fields\"] = _dictize_user_extra_fields(extra)\nreturn original_result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.ckan_custom_actions.resource_update","title":"resource_update","text":"<pre><code>resource_update(original_action, context, data_dict)\n</code></pre> <p>Update a resource.</p> <p>To update a resource you must be authorized to update the dataset that the resource belongs to.</p> <p>.. note:: Update methods may delete parameters not explicitly provided in the     data_dict. If you want to edit only a specific attribute use <code>resource_patch</code>     instead.</p> <p>For further parameters see func:<code>~ckan.logic.action.create.resource_create</code>.</p> <p>Parameters:</p> Name Type Description Default <code>id</code> <code>string</code> <p>the id of the resource to update</p> required <p>Returns:</p> Type Description <code>string</code> <p>the updated resource</p> Source code in <code>ckanext/saeoss/logic/action/ckan_custom_actions.py</code> <pre><code>@toolkit.chained_action\ndef resource_update(original_action, context: dict, data_dict: dict):\n'''Update a resource.\n    To update a resource you must be authorized to update the dataset that the\n    resource belongs to.\n    .. note:: Update methods may delete parameters not explicitly provided in the\n        data_dict. If you want to edit only a specific attribute use `resource_patch`\n        instead.\n    For further parameters see\n    :py:func:`~ckan.logic.action.create.resource_create`.\n    :param id: the id of the resource to update\n    :type id: string\n    :returns: the updated resource\n    :rtype: string\n    '''\nlogger.debug(\"package update\", data_dict)\nmodel = context['model']\nid = _get_or_bust(data_dict, \"id\")\nif not data_dict.get('url'):\ndata_dict['url'] = ''\nlogger.debug(\"resource update\", data_dict)\nif \"http\" not in data_dict[\"url\"] and \"https\" not in data_dict[\"url\"]:\nif data_dict[\"updated_text\"]:\nfirst_folder = id[0:3]\nsecond_folder = id[3:6]\nfile_name = id[6:len(id)]\nupload = f\"/home/appuser/data/resources/{first_folder}/{second_folder}/{file_name}\"\nlogger.debug(f\"resource update custom {data_dict}\")\nf = open(upload, \"w\")\nf.write(data_dict[\"updated_text\"])\nf.close()\ndel data_dict[\"updated_text\"]\nresource = model.Resource.get(id)\ncontext[\"resource\"] = resource\nold_resource_format = resource.format\nif not resource:\nlogger.debug('Could not find resource %s', id)\nraise NotFound(_('Resource was not found.'))\n_check_access('resource_update', context, data_dict)\ndel context[\"resource\"]\npackage_id = resource.package.id\npkg_dict = _get_action('package_show')(dict(context, return_type='dict'),\n{'id': package_id})\nfor n, p in enumerate(pkg_dict['resources']):\nif p['id'] == id:\nbreak\nelse:\nlogger.error('Could not find resource %s after all', id)\nraise NotFound(_('Resource was not found.'))\n# Persist the datastore_active extra if already present and not provided\nif ('datastore_active' in resource.extras and\n'datastore_active' not in data_dict):\ndata_dict['datastore_active'] = resource.extras['datastore_active']\nfor plugin in plugins.PluginImplementations(plugins.IResourceController):\nplugin.before_update(context, pkg_dict['resources'][n], data_dict)\npkg_dict['resources'][n] = data_dict\ntry:\ncontext['use_cache'] = False\nupdated_pkg_dict = _get_action('package_update')(context, pkg_dict)\nexcept ValidationError as e:\ntry:\nraise ValidationError(e.error_dict['resources'][n])\nexcept (KeyError, IndexError):\nraise ValidationError(e.error_dict)\nresource = _get_action('resource_show')(context, {'id': id})\nif old_resource_format != resource['format']:\n_get_action('resource_create_default_resource_views')(\n{'model': context['model'], 'user': context['user'],\n'ignore_auth': True},\n{'package': updated_pkg_dict,\n'resource': resource})\nfor plugin in plugins.PluginImplementations(plugins.IResourceController):\nplugin.after_update(context, resource)\nreturn resource\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.dataset_versioning_control.handle_versioning","title":"handle_versioning","text":"<pre><code>handle_versioning(context, data_dict)\n</code></pre> <p>According to whether the dataset status is completed or not, the update action should either create a new version or overwrite the existing dataset.</p> Source code in <code>ckanext/saeoss/logic/action/dataset_versioning_control.py</code> <pre><code>def handle_versioning(context, data_dict):\n\"\"\"According to whether the dataset\n    status is completed or not, the\n    update action should either create\n    a new version or overwrite the\n    existing dataset.\n    \"\"\"\n# handling the version number\nold_dataset = toolkit.get_action(\"package_show\")(data_dict={\"id\": data_dict[\"id\"]})\nshared_items = {\nk: data_dict[k]\nfor k in data_dict\nif k in old_dataset and data_dict[k] == old_dataset[k]\n}\n# if it's changed from draft to active\nnon_shared = []\nfor k in data_dict:\nif k not in shared_items.keys():\nnon_shared.append(k)\nif k == \"state\":\nif old_dataset[k] == \"draft\":\nreturn data_dict\nif k == \"resources\":\nreturn data_dict\nresources = _get_package_resource(context, data_dict)\nnew_version = data_dict.get(\"version\")\nurl = data_dict.get(\"name\")\nnew_version = numbering_version(url, context, data_dict)\n# create new dataset if the status is completed\nif old_dataset.get(\"status\") == \"completed\":\ngenerated_id = \"\".join(\nrandom.SystemRandom().choice(string.ascii_uppercase + string.digits)\nfor _ in range(6)\n)\nupdate_dataset_title_and_url(new_version, generated_id, data_dict)\ncontext[\"ignore_auth\"] = True\ndata_dict[\"resources\"] = resources\nresult = toolkit.get_action(\"package_create\")(context, data_dict)\nflash_success(\"new version is created, updating the existing one !\")\nreturn result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.dataset_versioning_control.numbering_version","title":"numbering_version","text":"<pre><code>numbering_version(url, context, data_dict)\n</code></pre> <p>Handle the numbering logic of the new version, incrementing the last one by one</p> Source code in <code>ckanext/saeoss/logic/action/dataset_versioning_control.py</code> <pre><code>def numbering_version(url, context, data_dict):\n\"\"\"\n    Handle the numbering\n    logic of the new\n    version, incrementing\n    the last one by one\n    \"\"\"\nprevious_version = _get_previous_versions(url, context, data_dict)\nif previous_version == 0:\nversion_number = \"2\"\nelse:\nversion_number = previous_version + 1\nreturn str(version_number)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.dataset_versioning_control.search_and_update","title":"search_and_update","text":"<pre><code>search_and_update(title_or_url, new_version)\n</code></pre> <p>Uses regex to find version (num) at the end of string and substitute it, either in the title and/or url, the title has a dot in it's struct and the name (url) has a dash</p> Source code in <code>ckanext/saeoss/logic/action/dataset_versioning_control.py</code> <pre><code>def search_and_update(title_or_url, new_version):\n\"\"\"Uses regex to find version (num) at the end of\n    string and substitute it, either in the title\n    and/or url, the title\n    has a dot in it's struct and\n    the name (url) has a dash\n    \"\"\"\ndelimeter = \"\"\nstr_to_substitute = \"\"\nif title_or_url.get(\"type\") == \"title\":\ndelimeter = \".\"\nstr_to_substitute = title_or_url.get(\"title\")\nelse:\ndelimeter = \"_\"\nstr_to_substitute = title_or_url.get(\"url\")\n# ends with _v.digit\nmatch = re.search(r\"_v[._][\\d$]\", str_to_substitute)\nif match is not None:\nstr_to_substitute = re.sub(\nr\"_v[._][\\d]+$\", f\"_v{delimeter}{new_version}\", str_to_substitute\n)\nelse:\n# first time to change the versions\nstr_to_substitute += f\"_v{delimeter}\" + new_version\nreturn str_to_substitute\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.dataset_versioning_control.update_dataset_title_and_url","title":"update_dataset_title_and_url","text":"<pre><code>update_dataset_title_and_url(new_version, generated_id, data_dict)\n</code></pre> <p>Set the name and the url for the new version.</p> Source code in <code>ckanext/saeoss/logic/action/dataset_versioning_control.py</code> <pre><code>def update_dataset_title_and_url(\nnew_version: str, generated_id: str, data_dict: dict\n) -&gt; dict:\n\"\"\"Set the name and the url for\n    the new version.\n    \"\"\"\nid = data_dict.get(\"id\")\nnew_id = \"\"\nif id is not None:\nnew_id = id + \"_version_num_\" + new_version + \"_\" + generated_id\nnew_title = search_and_update(\n{\"type\": \"title\", \"title\": data_dict.get(\"title\")}, new_version\n)\nnew_url = search_and_update(\n{\"type\": \"url\", \"url\": data_dict.get(\"name\")}, new_version\n)\nfor i in new_url:\nif i in \"!\u201d#$%&amp;'()*+,./:;&lt;=&gt;?@[\\]^`{|}~.\":\nnew_url = new_url.replace(i, \"_\")\ndata_dict.update({\"id\": new_id, \"title\": new_title, \"name\": new_url})\nreturn data_dict\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.action.handle_repeating_subfields.handle_repeating_subfields_naming","title":"handle_repeating_subfields_naming","text":"<pre><code>handle_repeating_subfields_naming(data_dict)\n</code></pre> <p>change the naming of repeating subfields from fieldname-0-subfieldname to fieldname_subfieldname</p> Source code in <code>ckanext/saeoss/logic/action/handle_repeating_subfields.py</code> <pre><code>def handle_repeating_subfields_naming(data_dict: dict):\n\"\"\"\n    change the naming of repeating subfields from\n    fieldname-0-subfieldname\n    to fieldname_subfieldname\n    \"\"\"\nrepeating_fields = [\n\"contact\",\n\"lineage\",\n\"distribution\",\n\"maintenance_information\",\n\"reference_system_additional_info\",\n]\nnew_data_dict = deepcopy(data_dict)\nfor k in data_dict:\nfor key in repeating_fields:\nif k.startswith(key):\nkey_initials = f\"{key}-\\w+-\"\nprint(key_initials)\nsubfield_name = re.sub(key_initials, \"\", k)\nprint(subfield_name)\nnew_key = f\"{key}_\" + subfield_name\nnew_data_dict[new_key] = new_data_dict.pop(k)\nreturn new_data_dict\n</code></pre>"},{"location":"developer/manual/logic/#auth","title":"Auth","text":"<p>Custom auth functions for ckanext-pages</p> <p>These are used to control which users are allowed to edit new pages on the portal</p>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.ckan.authorize_package_publish","title":"authorize_package_publish","text":"<pre><code>authorize_package_publish(context, data_dict=None)\n</code></pre> <p>Check if the current user is authorized to publish a dataset</p> <p>Only org admins or site-wide sysadmins are authorized to publish a dataset (i.e. make it public).</p> Source code in <code>ckanext/saeoss/logic/auth/ckan.py</code> <pre><code>def authorize_package_publish(\ncontext: typing.Dict, data_dict: typing.Optional[typing.Dict] = None\n) -&gt; typing.Dict:\n\"\"\"Check if the current user is authorized to publish a dataset\n    Only org admins or site-wide sysadmins are authorized to publish a dataset (i.e.\n    make it public).\n    \"\"\"\ndata_ = data_dict.copy() if data_dict else {}\nuser = context[\"auth_user_obj\"]\nresult = {\"success\": False, \"msg\": \"You are not authorized to publish package\"}\n# TODO: check whether we need to make this check, as sysadmin is likely granted access by default\nif user.sysadmin:\nresult = {\"success\": True}\nelse:\n# if we have an org to check we can check if package can be published, otherwise\n# we have no way of knowing if the user is a member of the target org\n# beforehand, so we deny\nowner_org = data_.get(\"owner_org\", data_.get(\"group_id\"))\nif owner_org is not None:\nmembers = toolkit.get_action(\"member_list\")(\ndata_dict={\"id\": owner_org, \"object_type\": \"user\"}\n)\nadmin_member_ids = [\nmember_tuple[0]\nfor member_tuple in members\nif member_tuple[2] == \"Admin\"\n]\nif user.id in admin_member_ids:\nresult = {\"success\": True}\nreturn result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.ckan.package_patch","title":"package_patch","text":"<pre><code>package_patch(next_auth, context, data_dict)\n</code></pre> <p>Custom auth for the package_patch action.</p> Source code in <code>ckanext/saeoss/logic/auth/ckan.py</code> <pre><code>@toolkit.chained_auth_function\ndef package_patch(\nnext_auth: typing.Callable, context: typing.Dict, data_dict: typing.Dict\n):\n\"\"\"Custom auth for the package_patch action.\"\"\"\nlogger.debug(\"inside custom package_patch auth\")\nreturn package_update(next_auth, context, data_dict)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.ckan.package_update","title":"package_update","text":"<pre><code>package_update(next_auth, context, data_dict=None)\n</code></pre> <p>Custom auth for the package_update action.</p> <p>Packages that are public shall not be editable by users that are not org admins or site-wide sysadmins.</p> Source code in <code>ckanext/saeoss/logic/auth/ckan.py</code> <pre><code>@toolkit.chained_auth_function\ndef package_update(next_auth, context, data_dict=None):\n\"\"\"Custom auth for the package_update action.\n    Packages that are public shall not be editable by users that are not org admins\n    or site-wide sysadmins.\n    \"\"\"\nuser = context[\"auth_user_obj\"]\nif user.sysadmin:\nfinal_result = next_auth(context, data_dict)\nelif data_dict is not None:\n# NOTE: we do not call toolkit.get_action(\"package_show\") here but rather do it\n# the same as vanilla CKAN which uses a custom way to retrieve the object from\n# the context - this is in order to ensure other extensions\n# (e.g. ckanext.harvest) are able to function correctly\npackage = get_package_object(context, data_dict)\nif package.type == CKANEXT_HARVEST_DATASET_TYPE_NAME:\n# defer auth to the ckanext.harvest extension\nfinal_result = next_auth(context, data_dict)\nelse:\nresult = {\"success\": False}\nif package.private or package.state == \"draft\":\nresult[\"success\"] = True\nelse:\norg_id = data_dict.get(\"owner_org\", package.owner_org)\nif org_id is not None:\nmembers = toolkit.get_action(\"member_list\")(\ndata_dict={\"id\": org_id, \"object_type\": \"user\"}\n)\nfor member_id, _, role in members:\nif member_id == user.id and role.lower() == \"admin\":\nresult[\"success\"] = True\nbreak\nelse:\nresult[\"msg\"] = (\nf\"Only administrators of organization {org_id!r} are \"\nf\"authorized to edit one of its public datasets\"\n)\nif result[\"success\"]:\nfinal_result = next_auth(context, data_dict)\nelse:\nfinal_result = result\nelse:\nfinal_result = next_auth(context, data_dict)\nreturn final_result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.pages.authorize_delete_page","title":"authorize_delete_page","text":"<pre><code>authorize_delete_page(next_auth, context, data_dict=None)\n</code></pre> <p>Check whether user should be allowed to delete pages</p> <p>This auth function customizes the default behavior of ckanext-pages. Where the default is to only allow sysadmins to delete a page, we instead check if they are members of the special portal staff group.</p> <p>As a result of this override behavior we do not call <code>next_auth</code> here - otherwise the default ckanext-pages auth function would be called last and it would end up enforcing the default behavior.</p> Source code in <code>ckanext/saeoss/logic/auth/pages.py</code> <pre><code>@toolkit.chained_auth_function\ndef authorize_delete_page(\nnext_auth: typing.Callable,\ncontext: typing.Dict,\ndata_dict: typing.Optional[typing.Dict] = None,\n) -&gt; typing.Dict:\n\"\"\"Check whether user should be allowed to delete pages\n    This auth function customizes the default behavior of ckanext-pages. Where the\n    default is to only allow sysadmins to delete a page, we instead check if they are\n    members of the special portal staff group.\n    As a result of this override behavior we do not call `next_auth` here - otherwise\n    the default ckanext-pages auth function would be called last and it would\n    end up enforcing the default behavior.\n    \"\"\"\nresult = {\"success\": False}\nuser = context[\"auth_user_obj\"]\nif toolkit.h[\"user_is_staff_member\"](user.id):\nresult[\"success\"] = True\nelse:\nresult[\"msg\"] = toolkit._(\"You are not authorized to delete pages\")\nreturn result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.pages.authorize_edit_page","title":"authorize_edit_page","text":"<pre><code>authorize_edit_page(next_auth, context, data_dict=None)\n</code></pre> <p>Check whether user should be allowed to edit pages</p> <p>This auth function customizes the default behavior of ckanext-pages. Where the default is to only allow sysadmins to edit a page, we instead check if they are members of the special portal staff group.</p> <p>As a result of this override behavior we do not call <code>next_auth</code> here - otherwise the default ckanext-pages auth function would be called last and it would end up enforcing the default behavior (i.e. only allow sysadmins to edit a page).</p> Source code in <code>ckanext/saeoss/logic/auth/pages.py</code> <pre><code>@toolkit.chained_auth_function\ndef authorize_edit_page(\nnext_auth: typing.Callable,\ncontext: typing.Dict,\ndata_dict: typing.Optional[typing.Dict] = None,\n) -&gt; typing.Dict:\n\"\"\"Check whether user should be allowed to edit pages\n    This auth function customizes the default behavior of ckanext-pages. Where the\n    default is to only allow sysadmins to edit a page, we instead check if they are\n    members of the special portal staff group.\n    As a result of this override behavior we do not call `next_auth` here - otherwise\n    the default ckanext-pages auth function would be called last and it would\n    end up enforcing the default behavior (i.e. only allow sysadmins to edit a page).\n    \"\"\"\nresult = {\"success\": False}\nuser = context[\"auth_user_obj\"]\nif toolkit.h[\"user_is_staff_member\"](user.id):\nresult[\"success\"] = True\nelse:\nresult[\"msg\"] = toolkit._(\"You are not authorized to edit pages\")\nreturn result\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.auth.pages.authorize_show_page","title":"authorize_show_page","text":"<pre><code>authorize_show_page(next_auth, context, data_dict=None)\n</code></pre> <p>Check whether user should be allowed to view a page</p> <p>This auth function customized the default behavior of ckanext-pages. Where the default is to check if a page is public and if not only allow access to sysadmins, we want members of the special portal staff group to also be able to access private pages.</p> <p>As a result of this override behavior we may not call <code>next_auth</code> here - otherwise the default ckanext-pages auth function would be called last and it would end up enforcing the default behavior.</p> Source code in <code>ckanext/saeoss/logic/auth/pages.py</code> <pre><code>@toolkit.chained_auth_function\n@toolkit.auth_allow_anonymous_access\ndef authorize_show_page(\nnext_auth: typing.Callable,\ncontext: typing.Dict,\ndata_dict: typing.Optional[typing.Dict] = None,\n) -&gt; typing.Dict:\n\"\"\"Check whether user should be allowed to view a page\n    This auth function customized the default behavior of ckanext-pages. Where the\n    default is to check if a page is public and if not only allow access to sysadmins,\n    we want members of the special portal staff group to also be able to access private\n    pages.\n    As a result of this override behavior we may not call `next_auth` here - otherwise\n    the default ckanext-pages auth function would be called last and it would\n    end up enforcing the default behavior.\n    \"\"\"\ndata_dict = dict(data_dict) if data_dict is not None else {}\norg_id = data_dict.get(\"org_id\")\npage = data_dict.get(\"page\")\nout = pages_db.Page.get(group_id=org_id, name=page)\nresult = {\"success\": False}\nif out:\nif org_id:  # check membership of the user by calling original method\nresult = next_auth(context, data_dict)\nelse:  # universal page, lets see if page is private and/or if user is staff\nif out.private:  # user can only see it if it is from staff\nuser = context[\"auth_user_obj\"]\nif toolkit.h[\"user_is_staff_member\"](user.id):\nresult[\"success\"] = True\nelse:\nresult[\"msg\"] = toolkit._(\n\"You are not authorized to access page %s\" % page\n)\nelse:  # everyone can see it\nresult[\"success\"] = True\nelse:\nresult[\"msg\"] = toolkit._(\"Page %s not found\") % page\nreturn result\n</code></pre>"},{"location":"developer/manual/logic/#stac-validators","title":"STAC Validators","text":""},{"location":"developer/manual/logic/#converters","title":"Converters","text":""},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.check_if_int","title":"check_if_int","text":"<pre><code>check_if_int(data_dict)\n</code></pre> <p>check if the given value can be converted to an integer</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def check_if_int(data_dict):\n\"\"\"\n    check if the given value can be\n    converted to an integer\n    \"\"\"\nlogger.debug(\"convert to int \")\nif data_dict == \"\":\nreturn \"\"\ntry:\nreturn int(data_dict)\nexcept:\nraise toolkit.Invalid(\"select field should be an integer \")\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.check_if_number","title":"check_if_number","text":"<pre><code>check_if_number(data_dict)\n</code></pre> <p>check if the given value can be converted to a number</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def check_if_number(data_dict):\n\"\"\"\n    check if the given value can be\n    converted to a number\n    \"\"\"\nlogger.debug(\"convert to real number \")\nif data_dict == \"\":\nreturn \"\"\ntry:\nreturn float(data_dict)\nexcept:\nraise toolkit.Invalid(\"select field should be a number \")\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.convert_choices_select_to_int","title":"convert_choices_select_to_int","text":"<pre><code>convert_choices_select_to_int(data_dict, context)\n</code></pre> <p>while submitting the select choices numerical values, they are returned as strings, they should be submitted as ints, otherwises a value error would be raised.</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def convert_choices_select_to_int(data_dict, context):\n\"\"\"\n    while submitting the select choices numerical\n    values, they are returned as strings,\n    they should be submitted as ints, otherwises\n    a value error would be raised.\n    \"\"\"\n# TODO: adding the field name for proper loggin\nlogger.debug(\"convert select choices to int \")\nif data_dict == \"\":\nreturn \"\"\ntry:\nreturn int(data_dict)\nexcept:\nraise toolkit.Invalid(\"select field should have a string value\")\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.convert_select_custom_choice_to_extra","title":"convert_select_custom_choice_to_extra","text":"<pre><code>convert_select_custom_choice_to_extra(data_dict)\n</code></pre> <p>adding custom field to select options, currently appears as \"__extras\" in the database,</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def convert_select_custom_choice_to_extra(data_dict):\n\"\"\"\n    adding custom field to select options,\n    currently appears as \"__extras\" in the\n    database,\n    \"\"\"\nreturn data_dict\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.default_metadata_standard_name","title":"default_metadata_standard_name","text":"<pre><code>default_metadata_standard_name(value)\n</code></pre> <p>returns SANS1878 as the default metadata standard name.</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def default_metadata_standard_name(value):\n\"\"\"\n    returns SANS1878 as the default\n    metadata standard name.\n    \"\"\"\nif value == \"\":\nreturn \"SANS 1878-1:2011\"\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.default_metadata_standard_version","title":"default_metadata_standard_version","text":"<pre><code>default_metadata_standard_version(value)\n</code></pre> <p>returns SANS1878 as the default metadata standard name.</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def default_metadata_standard_version(value):\n\"\"\"\n    returns SANS1878 as the default\n    metadata standard name.\n    \"\"\"\nif value == \"\":\nreturn \"1.1\"\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.converters.spatial_resolution_converter","title":"spatial_resolution_converter","text":"<pre><code>spatial_resolution_converter(value)\n</code></pre> <p>the natural numbers validator used with spatial resolution field causes internal server error when the type is None, handled here</p> Source code in <code>ckanext/saeoss/logic/converters.py</code> <pre><code>def spatial_resolution_converter(value: str):\n\"\"\"\n    the natural numbers validator used with\n    spatial resolution field causes\n    internal server error when the type\n    is None, handled here\n    \"\"\"\nif value == \"\":\nreturn -1\nreturn value\n</code></pre>"},{"location":"developer/manual/logic/#schema","title":"Schema","text":""},{"location":"developer/manual/logic/#validators","title":"Validators","text":""},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.doi_validator","title":"doi_validator","text":"<pre><code>doi_validator(value)\n</code></pre> <p>check if the doi follows certain pattern.</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def doi_validator(value: str):\n\"\"\"\n    check if the doi follows\n    certain pattern.\n    \"\"\"\nif value == \"\" or value is None:\nreturn \"\"\nif type(value) is Missing:\nreturn \"\"\npattern = \"^10\\\\.\\\\d{4,}(\\\\.\\\\d+)*/[-._;()/:a-zA-Z0-9]+$\"\nif re.match(pattern, value) is None:\nraise toolkit.Invalid(\n\"\"\"\n        doi is not in the correct form,\n        please refer to https://www.doi.org/\n        \"\"\"\n)\nelse:\nreturn value\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.lineage_source_srs_validator","title":"lineage_source_srs_validator","text":"<pre><code>lineage_source_srs_validator(value)\n</code></pre> <p>\" the difference from above method that the lineage source srs can be empty</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def lineage_source_srs_validator(value):\n\"\"\" \"\n    the difference from above method\n    that the lineage source srs can\n    be empty\n    \"\"\"\nif value == \"\":\nreturn \"\"\nelse:\nsrs_validator(value)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.srs_validator","title":"srs_validator","text":"<pre><code>srs_validator(value)\n</code></pre> <p>Validator for a dataset's spatial_reference_system field</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def srs_validator(value: str) -&gt; str:\n\"\"\"Validator for a dataset's spatial_reference_system field\"\"\"\ntry:\nparsed_value = value.replace(\" \", \"\").upper()\nif parsed_value.count(\":\") == 0:\nraise toolkit.Invalid(\ntoolkit._(\"Please provide a colon-separated value, e.g. EPSG:4326\")\n)\nexcept AttributeError:\nvalue = \"EPSG:4326\"\ntry:\nauthority, code = value.split(\":\")\nexcept ValueError:\nraise toolkit.Invalid(\ntoolkit._(\n\"Could not extract Spatial Reference System's authority and code. \"\n\"Please provide them as a colon-separated value, e.g. \"\n\"EPSG:4326\"\n)\n% {\"value\": value}\n)\nreturn value\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.to_date_after_from_date_validator","title":"to_date_after_from_date_validator","text":"<pre><code>to_date_after_from_date_validator(key, flattened_data, errors, context)\n</code></pre> <p>Validator that checks that start and end dates are consistent</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def to_date_after_from_date_validator(key, flattened_data, errors, context):\n\"\"\"Validator that checks that start and end dates are consistent\"\"\"\nlogger.debug(f\"{flattened_data=}\")\n# ('reference_system_additional_info', 0, 'temporal_extent_period_duration_from')\nfrom_date = flattened_data[\n(\"reference_system_additional_info\", 0, \"temporal_extent_period_duration_from\")\n]\nto_date = flattened_data[\n(\"reference_system_additional_info\", 0, \"temporal_extent_period_duration_to\")\n]\nfrom_date = datetime.strptime(from_date, \"%y-%m-%d\")\nto_date = datetime.strptime(to_date, \"%y-%m-%d\")\nif to_date &lt; from_date:\nraise toolkit.Invalid(\ntoolkit._(\n\"Please provide correct temporal duration for temporal references (from - to)\"\n)\n)\nelse:\nreturn ignore_missing(key, flattened_data, errors, context)\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.value_or_true_validator","title":"value_or_true_validator","text":"<pre><code>value_or_true_validator(value)\n</code></pre> <p>Validator that provides a default value of <code>True</code> when the input is None.</p> <p>This was designed with a package's <code>private</code> field in mind. We want it to be assigned a value of True when it is not explicitly provided on package creation. This shall enforce creating private packages by default.</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def value_or_true_validator(value: typing.Union[str, Missing]):\n\"\"\"Validator that provides a default value of `True` when the input is None.\n    This was designed with a package's `private` field in mind. We want it to be\n    assigned a value of True when it is not explicitly provided on package creation.\n    This shall enforce creating private packages by default.\n    \"\"\"\nlogger.debug(f\"inside value_or_true. Original value: {value!r}\")\nreturn value if value != toolkit.missing else True\n</code></pre>"},{"location":"developer/manual/logic/#ckanext.saeoss.logic.validators.version_validator","title":"version_validator","text":"<pre><code>version_validator(value)\n</code></pre> <p>check if the version is number or not</p> Source code in <code>ckanext/saeoss/logic/validators.py</code> <pre><code>def version_validator(value):\n\"\"\"\n    check if the version is number or not\n    \"\"\"\ntry:\nvalue = float(value)\nexcept:\nraise toolkit.Invalid(\"the dataset version should be a number\")\nreturn value\n</code></pre>"},{"location":"developer/manual/plugins/","title":"Plugins","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.harvesting_plugin.HarvestingPlugin","title":"HarvestingPlugin","text":"<p>             Bases: <code>SingletonPlugin</code>, <code>DefaultDatasetForm</code></p> <p>Custom plugin to deal with harvesting-related customizations.</p> <p>This class exists in order to work around a bug in ckanext-spatial:</p> <pre><code>https://github.com/ckan/ckanext-spatial/issues/277\n</code></pre> <p>The mentioned bug prevents being able to have a CKAN extension plugin using both the <code>IValidators</code> and the <code>ISpatialHarvester</code> interfaces at the same time.</p> <p>As an alternative, we have implemented the current plugin class with the aim to use it strictly for customization of the harvesters (i.e. implement the ISpatialHarvester interface) while the main plugin class (saeoss_plugin.SaeossPlugin) is still handling all of the other SAEOSS customizations.</p>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.harvesting_plugin.HarvestingPlugin.get_package_dict","title":"get_package_dict","text":"<pre><code>get_package_dict(context, data_dict)\n</code></pre> <p>Extension point required by ISpatialHarvester</p> Source code in <code>ckanext/saeoss/plugins/harvesting_plugin.py</code> <pre><code>def get_package_dict(\nself, context: typing.Dict, data_dict: typing.Dict[str, typing.Any]\n) -&gt; typing.Dict[str, typing.Any]:\n\"\"\"Extension point required by ISpatialHarvester\"\"\"\npackage_dict = data_dict.get(\"package_dict\", {})\niso_values = data_dict.get(\"iso_values\", {})\nparsed_resources = []\nfor resource_dict in package_dict.get(\"resources\", []):\nparsed_resources.append(\n_CkanResource(\nurl=resource_dict.get(\"url\"),\nformat=resource_dict.get(\"format\"),\nformat_version=\"change me\",\nname=resource_dict.get(\"name\"),\ndescription=resource_dict.get(\"description\") or None,\n)\n)\nparsed_tags = []\nfor parsed_tag in package_dict.get(\"tags\", []):\nparsed_tags.append(\n{\"name\": parsed_tag.get(\"name\", \"\"), \"vocabulary_id\": None}\n)\n# declared_dataset_language = _get_possibly_list_item(\n#     iso_values, \"dataset-language\"\n# )\n# dataset_language = _get_language_code(declared_dataset_language or \"en\")\niso_topic_category = _get_possibly_list_item(iso_values, \"topic-category\")\nequivalent_scale = _get_possibly_list_item(iso_values, \"equivalent-scale\")\npackage_dict = _get_extras_subfields(package_dict)\ndataset = _CkanSaeossDataset(\ntype=\"dataset\",\nprivate=True,\nfeatured=False,\nname=package_dict.get(\"name\"),\ntitle=package_dict.get(\"title\"),\nnotes=package_dict.get(\"notes\"),\niso_topic_category=iso_topic_category or \"\",\nowner_org=package_dict.get(\"owner_org\", \"kartoza\"),\nmaintainer=iso_values.get(\"contact\"),\nmaintainer_email=iso_values.get(\"contact-email\"),\nlicense_id=LicenseNotSpecified.id,  # set this default and let publisher adjust\nspatial=_get_spatial_field(package_dict),\nresources=parsed_resources,\ntags=parsed_tags,\nsource=None,\nversion=None,\n)\n# for var in DATASET_Harvest_MINIMAL_SET_OF_FIELDS_MAPPING.values():\n#     setattr(dataset, var, None)\nnew_data_dict = dataset.to_data_dict()\nnew_data_dict.update(package_dict)\n# filers, remove these as you go\nnew_data_dict[\"metadata_language_and_character_set-0-metadata_character_set\"] = \"ucs-2\"\nnew_data_dict[\"metadata_language_and_character_set-0-dataset_character_set\"] = \"ucs-2\"\nnew_data_dict[\"spatial_parameters-0-equivalent_scale\"] = \"5000\"\nnew_data_dict[\"spatial_parameters-0-spatial_representation_type\"] = \"001\"\nnew_data_dict[\"lineage_statement\"] = \"lineage_statement\"\ndel new_data_dict[\"extras\"]\nnew_data_dict[\"id\"] = iso_values.get(\"guid\")\nnew_data_dict[\"metadata_modified\"] = iso_values.get(\"date_updated\")\nreturn new_data_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.harvesting_plugin.get_dataset_reference_date","title":"get_dataset_reference_date","text":"<pre><code>get_dataset_reference_date(harvested_reference_date, data_dict)\n</code></pre> <p>the reference date can be more than one with different types (creation, revision, publication, ..etc.)</p> Source code in <code>ckanext/saeoss/plugins/harvesting_plugin.py</code> <pre><code>def get_dataset_reference_date(\nharvested_reference_date: list,\ndata_dict: typing.Dict\n) -&gt; typing.Dict:\n\"\"\"\n    the reference date can be more than one with\n    different types (creation, revision, publication, ..etc.)\n    \"\"\"\nfallback_reference_date = None\nfor idx, related_date in enumerate(harvested_reference_date):\nif (raw_date := related_date.get(\"value\")) is not None:\ntry:\nreference_date = dateutil.parser.parse(raw_date)\nexcept dateutil.parser.ParserError:\nlogger.exception(\nmsg=f\"Could not parse {raw_date!r} as a datetime\"\n)\nresult = fallback_reference_date\nelse:\nresult = dateutil.parser.parse(\nreference_date.isoformat()\n).strftime(\"%Y-%m-%dT%H:%M:%S\")\n# get the type\nreference_date_type = get_reference_date_type(related_date.get(\"type\"))\nreference_date_key = _get_subfield_key(\"dataset_reference_date\", idx)\nreference_date_type_key = _get_subfield_key(\"dataset_reference_date_type\", idx)\ndata_dict[reference_date_key] = result\ndata_dict[reference_date_type_key] = reference_date_type\nreturn data_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.harvesting_plugin.get_reference_date_type","title":"get_reference_date_type","text":"<pre><code>get_reference_date_type(dateType)\n</code></pre> <p>with harvesters the data type comes as publication, revision, creation, ... we converts here to 001, 002, 003, ...</p> Source code in <code>ckanext/saeoss/plugins/harvesting_plugin.py</code> <pre><code>def get_reference_date_type(dateType: str) -&gt; str:\n\"\"\"\n    with harvesters the data type comes as\n    publication, revision, creation, ...\n    we converts here to 001, 002, 003, ...\n    \"\"\"\nif dateType == \"revision\":\nreturn \"003\"\nelif dateType == \"publication\":\nreturn \"002\"\nelif dateType == \"creation\":\nreturn \"001\"\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin","title":"SaeossPlugin","text":"<p>             Bases: <code>SingletonPlugin</code>, <code>DefaultDatasetForm</code></p>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_create","title":"after_create","text":"<pre><code>after_create(context, pkg_dict)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_create(self, context, pkg_dict):\n\"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\nreturn context, pkg_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_delete","title":"after_delete","text":"<pre><code>after_delete(context, pkg_dict)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_delete(self, context, pkg_dict):\n\"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\nreturn context, pkg_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_load","title":"after_load","text":"<pre><code>after_load(service)\n</code></pre> <p>Control plugin loading mechanism</p> <p>This method is implemented by the SaeossPlugin because we are adding a 1:1 relationship between our <code>UserExtraFields</code> model and CKAN's <code>User</code> model.</p> <p>SQLAlchemy expects relationships to be configured on both sides, which means we have to modify CKAN's User model in order to make the relationship work. We do that in this function.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_load(self, service):\n\"\"\"Control plugin loading mechanism\n    This method is implemented by the SaeossPlugin because we are adding\n    a 1:1 relationship between our `UserExtraFields` model and CKAN's `User` model.\n    SQLAlchemy expects relationships to be configured on both sides, which means\n    we have to modify CKAN's User model in order to make the relationship work. We\n    do that in this function.\n    \"\"\"\nmodel.User.extra_fields = orm.relationship(\nUserExtraFields, back_populates=\"user\", uselist=False\n)\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_search","title":"after_search","text":"<pre><code>after_search(search_results, search_params)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_search(self, search_results, search_params):\n\"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\ncontext = {}\nlogger.debug(f\"after search {context}\")\nfacets = OrderedDict()\ndefault_facet_titles = {\n\"groups\": _(\"Groups\"),\n\"tags\": _(\"Tags\"),\n}\nfor facet in h.facets():\nif facet in default_facet_titles:\nfacets[facet] = default_facet_titles[facet]\nelse:\nfacets[facet] = facet\n# Facet titles\nfor plugin in plugins.PluginImplementations(plugins.IFacets):\nfacets = plugin.dataset_facets(facets, \"dataset\")\ndata_dict = {\n\"fq\": \"\",\n\"facet.field\": list(facets.keys()),\n}\nif not getattr(g, \"user\", None):\ndata_dict[\"fq\"] = \"+capacity:public \" + data_dict[\"fq\"]\nquery = search.query_for(model.Package)\ntry:\nif context.get(\"ignore_auth\") or c.userobj.sysadmin:\nlabels = None\nelse:\nlabels = lib_plugins.get_permission_labels().get_user_dataset_labels(\nc.userobj\n)\nquery.run(data_dict, permission_labels=labels)\nexcept:\nquery.run(data_dict, permission_labels=None)\nfacets = query.facets\n# organizations in the current search's facets.\ngroup_names = []\nfor field_name in (\"groups\", \"organization\"):\ngroup_names.extend(facets.get(field_name, {}).keys())\ngroups = (\nmodel.Session.query(model.Group.name, model.Group.title)\n.filter(model.Group.name.in_(group_names))\n.all()\nif group_names\nelse []\n)\ngroup_titles_by_name = dict(groups)\nrestructured_facets = {}\nfor key, value in facets.items():\nrestructured_facets[key] = {\"title\": key, \"items\": []}\nfor key_, value_ in value.items():\nnew_facet_dict = {\"name\": key_}\nif key in (\"groups\", \"organization\"):\ndisplay_name = group_titles_by_name.get(key_, key_)\ndisplay_name = (\ndisplay_name if display_name and display_name.strip() else key_\n)\nnew_facet_dict[\"display_name\"] = display_name\nelse:\nnew_facet_dict[\"display_name\"] = key_\nnew_facet_dict[\"count\"] = value_\nrestructured_facets[key][\"items\"].append(new_facet_dict)\nsearch_results[\"search_facets\"] = restructured_facets\nreturn search_results\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_show","title":"after_show","text":"<pre><code>after_show(context, pkg_dict)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_show(self, context, pkg_dict):\n\"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\nreturn context, pkg_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_unload","title":"after_unload","text":"<pre><code>after_unload(service)\n</code></pre> <p>IPluginObserver interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_unload(self, service):\n\"\"\"IPluginObserver interface requires reimplementation of this method.\"\"\"\npass\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.after_update","title":"after_update","text":"<pre><code>after_update(context, pkg_dict)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def after_update(self, context, pkg_dict):\n\"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\nreturn context, pkg_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_create","title":"before_create","text":"<pre><code>before_create(context, resource)\n</code></pre> <p>Extensions will receive this before a resource is created.</p> <p>Parameters:</p> Name Type Description Default <code>context</code> <code>dictionary</code> <p>The context object of the current request, this includes for example access to the <code>model</code> and the <code>user</code>.</p> required <code>resource</code> <code>dictionary</code> <p>An object representing the resource to be added to the dataset (the one that is about to be created).</p> required Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_create(self, context, resource):\nu'''\n    Extensions will receive this before a resource is created.\n    :param context: The context object of the current request, this\n        includes for example access to the ``model`` and the ``user``.\n    :type context: dictionary\n    :param resource: An object representing the resource to be added\n        to the dataset (the one that is about to be created).\n    :type resource: dictionary\n    '''\nlogger.debug(f\"resource create {resource}\")\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_delete","title":"before_delete","text":"<pre><code>before_delete(mapper, connection, instance)\n</code></pre> <p>Receive an object instance before that instance is PURGEd. (whereas usually in ckan 'delete' means to change the state property to deleted, so use before_update for that case.)</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_delete(self, mapper, connection, instance):\nu'''\n    Receive an object instance before that instance is PURGEd.\n    (whereas usually in ckan 'delete' means to change the state property to\n    deleted, so use before_update for that case.)\n    '''\npass\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_index","title":"before_index","text":"<pre><code>before_index(pkg_dict)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_index(self, pkg_dict):\n\"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\nreturn pkg_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_load","title":"before_load","text":"<pre><code>before_load(plugin_class)\n</code></pre> <p>IPluginObserver interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_load(self, plugin_class):\n\"\"\"IPluginObserver interface requires reimplementation of this method.\"\"\"\npass\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_show","title":"before_show","text":"<pre><code>before_show(resource_dict)\n</code></pre> <p>Extensions will receive the validated data dict before the resource is ready for display.</p> <p>Be aware that this method is not only called for UI display, but also in other methods, like when a resource is deleted, because package_show is used to get access to the resources in a dataset.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_show(self, resource_dict):\nu'''\n    Extensions will receive the validated data dict before the resource\n    is ready for display.\n    Be aware that this method is not only called for UI display, but also\n    in other methods, like when a resource is deleted, because package_show\n    is used to get access to the resources in a dataset.\n    '''\nreturn resource_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_unload","title":"before_unload","text":"<pre><code>before_unload(plugin_class)\n</code></pre> <p>IPluginObserver interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_unload(self, plugin_class):\n\"\"\"IPluginObserver interface requires reimplementation of this method.\"\"\"\npass\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.before_update","title":"before_update","text":"<pre><code>before_update(mapper, connection, instance)\n</code></pre> <p>Receive an object instance before that instance is UPDATEed.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def before_update(self, mapper, connection, instance):\nu'''\n    Receive an object instance before that instance is UPDATEed.\n    '''\nlogger.debug(f\"resource update {instance}\")\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.create","title":"create","text":"<pre><code>create(entity)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def create(self, entity):\n\"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\nreturn entity\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.delete","title":"delete","text":"<pre><code>delete(entity)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def delete(self, entity):\n\"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\nreturn entity\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.edit","title":"edit","text":"<pre><code>edit(entity)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def edit(self, entity):\n\"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\nreturn entity\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.group_facets","title":"group_facets","text":"<pre><code>group_facets(facets_dict, group_type, package_type)\n</code></pre> <p>IFacets interface requires reimplementation of all facets-related methods</p> <p>In this case we do not really need to override this method, but need to satisfy IFacets.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def group_facets(\nself, facets_dict: typing.OrderedDict, group_type: str, package_type: str\n) -&gt; typing.OrderedDict:\n\"\"\"IFacets interface requires reimplementation of all facets-related methods\n    In this case we do not really need to override this method, but need to satisfy\n    IFacets.\n    \"\"\"\nreturn facets_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.organization_facets","title":"organization_facets","text":"<pre><code>organization_facets(facets_dict, group_type, package_type)\n</code></pre> <p>IFacets interface requires reimplementation of all facets-related methods</p> <p>In this case we do not really need to override this method, but need to satisfy IFacets.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def organization_facets(\nself, facets_dict: typing.OrderedDict, group_type: str, package_type: str\n) -&gt; typing.OrderedDict:\n\"\"\"IFacets interface requires reimplementation of all facets-related methods\n    In this case we do not really need to override this method, but need to satisfy\n    IFacets.\n    \"\"\"\nreturn facets_dict\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.saeoss_plugin.SaeossPlugin.read","title":"read","text":"<pre><code>read(entity)\n</code></pre> <p>IPackageController interface requires reimplementation of this method.</p> Source code in <code>ckanext/saeoss/plugins/saeoss_plugin.py</code> <pre><code>def read(self, entity):\n\"\"\"IPackageController interface requires reimplementation of this method.\"\"\"\nreturn entity\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--this-file-holds-modules-used","title":"this file holds modules used","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--by-emc_dcpr-plugin-for-different","title":"by emc_dcpr plugin for different","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--functionalities-these-modules-are","title":"functionalities. these modules are","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--different-from-helper-functions-as","title":"different from helper functions as","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--they-arent-used-by-the-ui","title":"they aren't used by the UI.","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils--_1","title":"Plugins","text":""},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils.handle_search","title":"handle_search","text":"<pre><code>handle_search(search_params)\n</code></pre> <p>we use combine -AND operator- search params when they are from the same category \"e.g. 2 different organizations\", and use OR opertaor for different categories.</p> Source code in <code>ckanext/saeoss/plugins/utils.py</code> <pre><code>def handle_search(search_params):\n\"\"\"\n    we use combine -AND operator-\n    search params when they are from\n    the same category \"e.g. 2 different\n    organizations\", and use OR opertaor\n    for different categories.\n    \"\"\"\n# \\[.*\\]\n# lstrip removes leading spaces\nsearch_param = search_params[\"fq\"].lstrip()\nfq_list = skip_brackets(search_param)\n# fq_list = search_param.split()  # the default is space\nfq_dict = {}\nif len(fq_list) &lt;= 1:\nreturn search_params[\"fq\"]\nfor idx, item in enumerate(fq_list):\n# try:\n#     key_value_pair = item.split(\":\")\n#     if key_value_pair[0] not in fq_dict:\n#         fq_dict[key_value_pair[0]] = key_value_pair[1]\n# except:\n#     continue\ntry:\nif idx &gt; 0:\nfq_list[idx] = \" OR \" + fq_list[idx] + \" \"\nexcept:\ncontinue\nif len(fq_list) &gt; 0:\nsearch_params[\"fq\"] = \" \".join(item for item in fq_list)\nreturn search_params[\"fq\"]\n</code></pre>"},{"location":"developer/manual/plugins/#ckanext.saeoss.plugins.utils.skip_brackets","title":"skip_brackets","text":"<pre><code>skip_brackets(search_param)\n</code></pre> <p>split the search param while skipping the spaces between brackets and between doubled quotes (e.g. the sasdi theme \"Administrative boundaries 1\" )</p> Source code in <code>ckanext/saeoss/plugins/utils.py</code> <pre><code>def skip_brackets(search_param: str):\n\"\"\"\n    split the search param while\n    skipping the spaces between\n    brackets and between\n    doubled quotes (e.g.\n    the sasdi theme\n    \"Administrative boundaries 1\"\n    )\n    \"\"\"\nlbracket, rbracket = \"[\", \"]\"\nbrackets_num = 0\ndbl_quotes_num = 0\nsep, sep_idx = \" \", [0]\nfor idx, char in enumerate(search_param):\nif char == lbracket:\nbrackets_num += 1\nelif char == rbracket:\nbrackets_num -= 1\nelif brackets_num &lt; 0:\nreturn search_param\nelif char == '\"' and dbl_quotes_num == 0:\ndbl_quotes_num += 1\nelif char == '\"' and dbl_quotes_num == 1:\ndbl_quotes_num -= 1\nelif brackets_num == 0 and dbl_quotes_num == 0 and char == sep:\nsep_idx.append(idx)\n# we need to slice\nsep_idx.append(len(search_param))\n# at this point the num of brackets should be 0\nif brackets_num &gt; 0:\nreturn search_param\nreturn [search_param[i:j].strip(sep) for i, j in zip(sep_idx, sep_idx[1:])]\n</code></pre>"},{"location":"developer/manual/project-scrum-board/","title":"SCRUM Board","text":"<p>The Project SCRUM board serves a vital role in managing and tracking progress of tickets, and testing of functionalities. The &amp; columns of the board represent the life cycle of the ticket, from creation to completion.  Teams plan weekly sprints assigning tickets to be worked on to team members, and discussing next tickets to be worked on in the following sprint.</p> <p>In general this board is reviewed weekly in discussions with the client to ensure the project is steered in the preferred direction of development. Once a ticket has been placed in the ready column it is the responsibility of the client to test that the functionalities have been implemented and are working in the desired manner. If the functionality is found to be satisfactory the client may close the ticket, or move it to the done column.  </p> <p>The SCRUM board for SAEOSS-portal can be found Here.</p> <p>NOTE: The project SCRUM board is protected and users need to request access from their administrator or team lead to view the board.</p> <p>NOTE: The order of issues on the SCRUM board will dictate the order of working on the tickets, meaning if the developer is blocked on a ticket he will default to working on the next ticket in the line.</p> <p></p>"},{"location":"developer/manual/project-scrum-board/#a-description-of-the-columns-making-up-the-scrum-board-is-as-follows","title":"A description of the columns making up the scrum board is as follows","text":"<ul> <li> <p>No Status - Tickets not ready to be worked on yet or have been reverted due to a technical blocker. This column is also referred to as the backlog and serves as a placeholder for all tickets which need to be addressed.</p> </li> <li> <p>To Be Estimated - This column serves as a planning column where tickets are moved when planning the weekly sprint. Tickets are sized and assigned to team members.</p> </li> <li> <p>Todo - These are tickets which were planned for the current week sprint and are tickets the development team will draw work from.</p> </li> <li> <p>In Progress - These are tickets the development team is currently working on.</p> </li> <li> <p>Review - Tickets in review are usually addressed by internal testers to ensure the functionalities have been correctly implemented and are functioning as expected.</p> </li> <li> <p>Ready - Tickets in the ready column are tickets which have passed internal testing and are made available for the client to review. Once the client has found the work done to resolve the ticket satisfactory they can close the ticket with a comment.</p> </li> <li> <p>Done - This column is reserved for tickets which have been implemented, tested and ultimately accepted by the client, marking development of the ticket as done.</p> </li> </ul> <p>NOTE: If a ticket is deemed to be incomplete or not satisfactory, a comment should be made and the ticket should be moved back to the \"No Status\" column. Accompanying screenshots and comments should clearly describe why development is incomplete.</p>"},{"location":"developer/manual/wsgi/","title":"Web Server Gateway Interface","text":"<p>WSGI application for running the CKAN project</p>"},{"location":"devops/","title":"DevOps Documentation","text":"<p>This section contains all documentation relevant to DevOps procedures.</p> <p>The devops content is divided into three sections:</p> <ul> <li>The devops guide, which describes common workflows for deployment and management of running instances in a tutorial format.</li> <li>The devops manual, which provides links and references to deployment configuration files, frameworks and deployment systems used etc.</li> </ul>"},{"location":"devops/guide/","title":"DevOps Guide","text":""},{"location":"devops/guide/#re-building-containers","title":"Re-building containers","text":"<p>Containers need to be rebuilt if changes have been made in <code>SAEOSS-Portal/pyproject.toml</code> or if a new sql migration has been added in <code>ckanext/saeoss/migration</code></p> <ol> <li>Cd into <code>SAEOSS-Portal/docker</code></li> <li>Run <code>./compose.py --compose-file docker-compose.yml --compose-file docker-compose.dev.yml down</code></li> <li>Run <code>./build.sh</code></li> <li>Run <code>./compose.py --compose-file docker-compose.yml --compose-file docker-compose.dev.yml up</code></li> <li>Run <code>docker exec -it saeoss_ckan-web_1 poetry run ckan search-index rebuild</code></li> </ol>"},{"location":"devops/guide/#restarting-saeoss_ckan-web_1","title":"Restarting saeoss_ckan-web_1","text":"<p>Container needs to be restarted if a new template file is added to override ckan defaults for the change to reflect</p> <ol> <li>Open up a terminal</li> <li>Run <code>docker restart saeoss_ckan-web_1</code></li> </ol>"},{"location":"devops/guide/#refresh-pycsw-materialized-view","title":"Refresh pycsw materialized view","text":"<p>This needs to be run periodically (once per hour is likely enough).</p> <ol> <li>Run <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw refresh-materialized-view</code></li> </ol>"},{"location":"devops/guide/#drop-pycsw-materialized-view","title":"Drop pycsw materialized view","text":"<ol> <li>Run <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw drop-materialized-view</code></li> </ol>"},{"location":"devops/guide/#common-errors-in-containers","title":"Common errors in containers","text":""},{"location":"devops/guide/#datasets-have-disappeared-from-the-search-page","title":"Datasets have disappeared from the search page","text":"<p>Solr index needs be rebuilt</p> <p>Steps to fix</p> <ol> <li>Open up a terminal</li> <li>Run <code>docker exec -it saeoss_ckan-web_1 poetry run ckan search-index rebuild</code></li> </ol>"},{"location":"devops/guide/#sql-rollback-error","title":"SQL Rollback error","text":"<p>When you encounter the following error <code>Can\u2019t reconnect until invalid transaction is rolled back. Please rollback() fully before proceeding</code>:</p> <ol> <li>Open up a terminal</li> <li>Run <code>docker stop saeoss_ckan-web_1</code></li> <li>Run <code>docker stop saeoss_ckan-db_1</code></li> <li>Run <code>docker start saeoss_ckan-web_1</code></li> <li>Run <code>docker start saeoss_ckan-db_1</code></li> </ol>"},{"location":"devops/guide/#refresh-mv-not-working","title":"Refresh mv not working","text":"<p>Running docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw refresh-materialized-view produces error</p> <p>Steps to reproduce</p> <ol> <li>When <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw create-materialized-view</code> is run and no tags are saved within a dataset, the materialized view gets created as a table instead</li> <li>This in turn produces sql error when trying to refresh</li> </ol> <p>Solution</p> <ol> <li>In the postgres editor run  <code>DROP TABLE saeoss_pycsw_view;</code></li> <li>Add tags to datasets</li> <li>Run <code>docker exec -ti saeoss_ckan-web_1 poetry run ckan saeoss pycsw create-materialized-view</code></li> </ol>"},{"location":"devops/guide/#there-is-no-data-in-pycsw","title":"There is no data in pycsw","text":"<ol> <li>Connect to the database hosted in container <code>saeoss_ckan-db_1</code></li> <li>RUN sql script <code>DROP table saeoss_pycsw_view</code></li> <li>Run the following sql script (script location can also be found at <code>ckanext/saeoss/templates/pycsw/pycsw_view.sql</code>) <pre><code>CREATE MATERIALIZED VIEW IF NOT EXISTS saeoss_pycsw_view AS\n    WITH\n    cte_extras AS (\n        SELECT\n               p.id,\n               p.title,\n               p.name,\n               p.metadata_created,\n               p.metadata_modified,\n               p.notes,\n               p.author,\n               p.maintainer,\n               g.title AS org_name,\n               json_object_agg(pe.key, pe.value) AS extras,\n               array_agg(DISTINCT t.name) AS tags,\n               (select json_build_object('title', res.name,'description', res.description,'type', res.format, 'href', res.url)::text) As links\n            FROM package AS p\n            JOIN package_extra AS pe ON p.id = pe.package_id\n            JOIN \"group\" AS g ON p.owner_org = g.id\n            JOIN package_tag AS pt ON p.id = pt.package_id\n            JOIN tag AS t on pt.tag_id = t.id\n            JOIN \"resource\" AS res on p.id = res.package_id\n        WHERE p.state = 'active'\n        -- AND p.private = false        \n        GROUP BY p.id, g.title, res.id\n\n        )\n    SELECT\n           c.id AS identifier,\n           c.name AS dataset_name,\n           'csw:Record' AS typename,\n           'http://www.isotc211.org/2005/gmd' AS schema,\n           'local' AS mdsource,\n           c.metadata_created AS insert_date,\n           NULL AS xml,\n           NULL AS metadata,\n           NULL AS metadata_type,\n           concat_ws(' ', c.name, c.notes) AS anytext,\n           'english' AS language,\n           c.title AS title,\n           c.notes AS abstract,\n           concat_ws(', ', VARIADIC c.tags) AS keywords,\n           NULL AS keywordstype,\n           NULL AS format,\n           NULL AS source,\n           NULL AS version,\n           c.metadata_modified AS date_modified,\n           'http://purl.org/dc/dcmitype/Dataset' AS type,\n           ST_AsText(ST_GeomFromGeoJSON(c.extras-&gt;&gt;'spatial')) AS wkt_geometry,\n           ST_GeomFromGeoJSON(c.extras-&gt;&gt;'spatial')::geometry(Polygon, 4326) AS wkb_geometry,\n           c.name AS title_alternate,\n           c.extras-&gt;&gt;'doi' AS doi,\n           NULL as date_revision,\n           c.metadata_created AS date_creation,\n           NULL AS date_publication,\n           c.org_name AS organisation,\n           NULL AS securityconstraints,\n           NULL AS parentidentifier,\n           cast(cast(c.extras-&gt;&gt;'topic_and_saeoss_themes' as json)-&gt;&gt;0 as json)-&gt; 'iso_topic_category' AS topiccategory,\n           c.extras-&gt;&gt;'dataset_language' as resourcelanguage,\n           NULL AS geodescode,\n           NULL AS denominator,\n           NULL AS distancevalue,\n           NULL AS distanceuom,\n           cast(cast(c.extras-&gt;&gt;'metadata_reference_date_and_stamp' as json)-&gt;&gt;0 as json)-&gt; 'reference' AS date,\n           cast(cast(c.extras-&gt;&gt;'metadata_reference_date_and_stamp' as json)-&gt;&gt;0 as json)-&gt; 'reference' AS time_begin,\n           cast(cast(c.extras-&gt;&gt;'metadata_reference_date_and_stamp' as json)-&gt;&gt;0 as json)-&gt; 'reference' AS time_end,\n           cast(cast(c.extras-&gt;&gt;'metadata_reference_date_and_stamp' as json)-&gt;&gt;0 as json)-&gt; 'reference_date_type' AS reference_date_type,\n           NULL AS servicetype,\n           NULL AS servicetypeversion,\n           NULL AS operation,\n           NULL AS couplingtype,\n           NULL AS operateson,\n           NULL AS operatesonidentifier,\n           NULL AS operatesonname,\n           NULL AS degree,\n           NULL AS accessconstraints,\n           NULL AS otherconstraints,\n           NULL AS classification,\n           NULL AS conditionapplyingtoaccessanduse,\n            NULL AS edition,\n           c.extras-&gt;&gt;'lineage' AS lineage_statement,\n           c.extras-&gt;&gt;'lineage' AS dataset_lineage,\n           NULL AS responsiblepartyrole,\n           NULL AS specificationtitle,\n           NULL AS specificationdate,\n           NULL AS specificationdatetype,\n           c.author AS creator,\n           c.maintainer AS publisher,\n           NULL AS contributor,\n           NULL AS relation,\n           NULL AS platform,\n           NULL AS instrument,\n           NULL AS sensortype,\n           NULL AS cloudcover,\n           NULL AS bands,\n           Null As links, -- should be coming from res\n           cast(c.extras-&gt;&gt;'spatial' as json) AS bounding_geojson,\n           cast(cast(c.extras-&gt;&gt;'spatial_parameters' as json)-&gt;&gt;0 as json)-&gt; 'spatial_reference_system' AS crs,\n           cast(cast(c.extras-&gt;&gt;'spatial_parameters' as json)-&gt;&gt;0 as json)-&gt; 'equivalent_scale' AS equivalent_scale\n\n    FROM cte_extras AS c\nWITH DATA;\n</code></pre></li> <li>Run <code>REFRESH MATERIALIZED VIEW CONCURRENTLY saoess_pycsw_view;</code></li> </ol>"},{"location":"devops/manual/","title":"DevOps Documentation","text":""},{"location":"devops/manual/#containers-used","title":"Containers Used","text":""},{"location":"devops/manual/#saeoss_ckan-web_1","title":"saeoss_ckan-web_1","text":"<p>This container is used to run the main application. All back end and front end logic can be found here. The ckan framework is installed in this container</p>"},{"location":"devops/manual/#saeoss_ckan-background-worker_1","title":"saeoss_ckan-background-worker_1","text":"<p>This container is used to create jobs that run in the 'background', i.e. asynchronously without blocking the main application</p>"},{"location":"devops/manual/#saeoss_ckan-harvesting-fetcher_1","title":"saeoss_ckan-harvesting-fetcher_1","text":"<p>This container provides a common harvesting framework</p>"},{"location":"devops/manual/#saeoss_ckan-harvesting-runner_1","title":"saeoss_ckan-harvesting-runner_1","text":"<p>This container provides the logic for running harvesting jobs</p>"},{"location":"devops/manual/#saeoss_ckan-mail-sender_1","title":"saeoss_ckan-mail-sender_1","text":"<p>This container is used to send emails from the application</p>"},{"location":"devops/manual/#saeoss_ckan-harvesting-gatherer_1","title":"saeoss_ckan-harvesting-gatherer_1","text":"<p>This container provides the logic for gathering data from harvester jobs</p>"},{"location":"devops/manual/#saeoss_datastore-db_1","title":"saeoss_datastore-db_1","text":"<p>This container contains the database that used for the datastore</p>"},{"location":"devops/manual/#saeoss_ckan-db_1","title":"saeoss_ckan-db_1","text":"<p>This container contains the database that used for the main application</p>"},{"location":"devops/manual/#saeoss_redis_1","title":"saeoss_redis_1","text":"<p>This container runs a redis server which is needed for ckan</p>"},{"location":"devops/manual/#saeoss_datastore-test-db_1","title":"saeoss_datastore-test-db_1","text":"<p>This container contains the database that used to run tests for the datastore</p>"},{"location":"devops/manual/#saeoss_ckan-test-db_1","title":"saeoss_ckan-test-db_1","text":"<p>This container contains the database that used to run tests for the main application</p>"},{"location":"devops/manual/#saeoss_csw-harvest-target_1","title":"saeoss_csw-harvest-target_1","text":"<p>This container provides the service to harvest data from a target specified</p>"},{"location":"devops/manual/#saeoss_ckan-datapusher_1","title":"saeoss_ckan-datapusher_1","text":"<p>This container provides a standalone web service that automatically downloads any tabular data files like CSV or Excel from the site's resources when they are added, parses them to pull out the actual data, then uses the DataStore API to push the data into the site's DataStore.</p>"},{"location":"devops/manual/#saeoss_pycsw_1","title":"saeoss_pycsw_1","text":"<p>This container runs a pycsw server which serves as an API to share data on the platform</p>"},{"location":"devops/manual/#saeoss_solr_1","title":"saeoss_solr_1","text":"<p>This container runs a solr server that is needed for ckan to index data and run spatial queries</p>"},{"location":"devops/manual/#sdlc","title":"SDLC","text":"<p>A systematic approach that generates a structure for the developer to design, create and deliver high-quality software based on customer requirements and needs. The primary goal of the SDLC process is to produce cost-efficient and high-quality products. The process comprises a detailed plan that describes how to develop, maintain, and replace the software.</p> <ol> <li>Identify the Current Problems</li> </ol> <p>This stage of the SDLC means getting input from all stakeholders, including customers, sales people, industry experts, and programmers. Learn the strengths and weaknesses of the current system with the goal of improvement.</p> <ol> <li>Plan</li> </ol> <p>In this stage of the SDLC, the team determines the costs and resources required for implementing the analysed requirements. Also detailing the risks involved and providing sub-plans to mitigate those risks.</p> <p>The team must determine the feasibility of the project and how they can successfully implement the project with the lowest risk in mind.</p> <ol> <li>Design</li> </ol> <p>This phase of the SDLC starts by turning the software specifications into a design plan called the Design Specification. All stakeholders then review this plan and offer feedback and suggestions. It\u2019s crucial to have a plan for collecting and incorporating stakeholder input into this document. Failure at this stage will almost certainly result in cost overruns at best and the total collapse of the project at worst.</p> <ol> <li>Build</li> </ol> <p>At this stage, the actual development starts. It\u2019s important that every developer sticks to the agreed blueprint. Also, make sure you have proper guidelines in place about the code style and practices.</p> <p>For example, define a nomenclature for files or define a variable naming style such as camelCase. This will help your team to produce organized and consistent code that is easier to understand but also to test during the next phase.</p> <ol> <li>Code Test</li> </ol> <p>In this stage, we test for defects and deficiencies. We fix those issues until the product meets the original specifications.</p> <p>In short, we want to verify if the code meets the defined requirements.</p> <ol> <li>Software Deployment</li> </ol> <p>At this stage, the goal is to deploy the software to the production environment so users can start using the product. However, many organizations choose to move the product through different deployment environments such as a testing or staging environment.</p> <p>This allows any stakeholders to safely play with the product before releasing it to the market. Besides, this allows any final mistakes to be caught before releasing the product.</p>"},{"location":"devops/manual/#continuous-integration","title":"Continuous Integration","text":"<p>Continuous integration refers to the build and unit testing stages of the software release process. Every revision that is committed triggers an automated build and test</p>"},{"location":"devops/manual/#testing-deployments","title":"Testing Deployments","text":""},{"location":"devops/manual/#backend-orchestration","title":"Backend Orchestration","text":""},{"location":"devops/manual/#deployments","title":"Deployments","text":""},{"location":"devops/manual/#kubernetes","title":"Kubernetes","text":""},{"location":"user/","title":"For Users","text":"<p>This is the homepage for all user-related documentation.</p> <p>The user content is divided into three sections:</p> <ul> <li>The quickstart tutorial, which aims to get you familiar with the basics of the platform in around 5 minutes.</li> <li>The user guide, which describes common workflows in a tutorial format.</li> <li>The user manual, which describes each page of the user interface and what the various options on that page do.</li> </ul> <p>Additional roles:</p> <p>Publisher Editor Member/Viewer</p>"},{"location":"user/guide/","title":"Guide","text":"<p>The guide section of the documentation provides short narrative / workflow based tutorials on the functionalities of the SAEOSS-Portal platform. The guide in intended to function as a collection of workflow based tutorials a user can follow to obtain the necessary knowledge to perform mandated tasks. If you prefer a more detailed description, you may prefer to work through our User Manual</p>"},{"location":"user/guide/#index","title":"Index","text":"<p>Registering:  This page will show you how to register on the platform. Help and Contact Pages: Here we explain how to get help with the platform, either from the documentation or through contacting the SAWPS team.</p>"},{"location":"user/guide/#error-reporting","title":"Error reporting","text":"<p>We take pride and care to ensure our work is factual, accurate and informative. In the highly unlikely event that and error or bug is found please report it through one of the following channels:</p> <p>Github Issues: Github is the preferred method of error reporting ensuring reported errors are addressed in the quickest turnaround time possible. Read more...</p> <p>Email: Errors can be raised via email through the following channels. However this is not a recommended path as it has long turn around times.</p> <p>Administrator: Errors can be raised with your administrator if affiliated with an organisation. Administrators can escalate the the error to developers if required.</p>"},{"location":"user/guide/#contributing","title":"Contributing","text":"<p>If you would like to contribute to the documentation, please review the contributing section</p>"},{"location":"user/guide/create_metadata/","title":"Upload Metadata","text":""},{"location":"user/guide/create_metadata/#metadata-capturing-and-publishing","title":"Metadata capturing and publishing","text":""},{"location":"user/guide/create_metadata/#create-metadata-record-in-owned-organisation-using-system-ui","title":"Create metadata record in owned organisation using System UI","text":"<p> Applicable roles: Metadata editor, metadata publisher and system administrator</p> <p>Method 1:</p> <p>Navigate to 'Metadata' and select 'Add metadata record'.</p> <p></p> <p>This will take you to the form that needs to be completed in order to create metadata record.Fill in all the necessary information about the record. All fields marked with an asterisk (*) are mandatory. The information you add will become the information that is available on the site about the record you are adding.  When adding the metadata record thumbnail, make sure the image URL is a public image link and not a private one. Remember to also make sure that the image ratio is 1:1 for the best results.</p> <p></p> <p>Method 2: Navigate to the organisation you belong to. You can do this by going to your profile and select 'Add metadata record' then fill out the form.</p> <p></p>"},{"location":"user/guide/create_metadata/#create-metadata-record-in-owned-organisation-using-xml-upload","title":"Create metadata record in owned organisation using XML upload","text":"<p>On the metadata page, select 'Add metadata record from xml file'.</p> <p></p> <p>Then select the XML file on your local machine.</p> <p>The xml file should look something like this: </p>"},{"location":"user/guide/edit_metadata/","title":"Edit Metadata","text":""},{"location":"user/guide/edit_metadata/#edit-metadata-record-using-system-ui","title":"Edit metadata record using system UI","text":"<p>Navigate to the record you want to edit. To do that, navigate to profile:</p> <p></p> <p>Then select the metadata record you want to edit:</p> <p></p> <p>Lastly, clicn on 'Manage' to edit the record:</p> <p></p>"},{"location":"user/guide/no_owned_profile_management/","title":"Organization Management","text":""},{"location":"user/guide/no_owned_profile_management/#managing-non-owned-profile","title":"Managing non-owned profile","text":"<p> Applicable roles: System administrator and organisational publisher</p> <p>To manage profiles belong to certain organisations as a system administrator or an organisational publisher, you need to navigate to the organisation and click 'Manage'</p> <p></p> <p>Then click on the 'Members' tab.</p> <p></p> <p>You can:</p> <ol> <li>Add new members to the organisation.</li> <li>Edit the member's role.</li> <li>Remove the member from the organisation.</li> </ol> <p></p>"},{"location":"user/guide/opening-issues/","title":"GitHub Issues/Tickets:","text":"<p>This GitHub project repository serves as a project planning and progress tracking platform for the development teams and clients. This repository is public and for anyone to view. The repository can be accessed here.</p>"},{"location":"user/guide/opening-issues/#tickets","title":"Tickets:","text":"<p>Tickets on the SAEOSS-Portal GitHub Project Board are created first as issues and converted into tickets to work on during the sprint at the SAEOSS-Portal catch-up meeting. This workflow ensures work required by the client gets done as well as allows the opportunity to clear up any doubts as to work that needs to be done. When issues are created, a clear description of what needs to happen is required as well as any accompanying screenshots or videos. If a developer has any doubt, he can simply comment on the ticket, and the creator of the ticket as well as any assigned developers will be notified via email.</p>"},{"location":"user/guide/opening-issues/#creating-new-github-issuestickets","title":"Creating new Github issues/tickets:","text":"<p>When encountering a new issue with the platform, it is best practice to create an issue or ticket on the SAEOSS-Portal GitHub Issues Page. This ensures developers are made aware of the issue at hand and can work to get the problem fixed as soon as possible.</p>"},{"location":"user/guide/opening-issues/#templates","title":"Templates:","text":"<p>A standard workflow for creating tickets is advised to make sure enough information about the problem is related, cutting down on time developers would spend trying to understand the issue at hand.</p> <p>To ensure this, a general approach has been created to make sure users are able to create a GitHub ticket with as much detail as possible. The following template can be copied and used to create a new ticket.</p> <p></p> <p>\ud83d\udea9 GitHub supports various forms of media, including: Markdown syntax, images, and video. All of these can be used to better and more accurately describe your issue. Read more</p>"},{"location":"user/guide/opening-issues/#workflow-for-creating-github-issues","title":"Workflow for creating GitHub issues","text":"<p>To report an issue, users should first access the SAEOSS-Portal Project Page. Ensure you are logged in as users who do not have a GitHub account will not be able to create new issues. If you do not have a GitHub account you can create a free account</p> <p></p> <ol> <li> <p>From the navigation pane select Issues to display all the current GitHub issue tickets. Make sure to study the issues page to determine if the issue has been reported by another user before creating a new issue.      </p> </li> <li> <p>If the issue has not been reported, select the create new button.     </p> </li> <li> <p>Copy the template and complete the template while taking care to provide as much detail as possible. Remember to add a descriptive title and screenshots.     </p> </li> <li> <p>Preview the ticket by selecting the preview tab. This will generate the ticket from markdown syntax (if used) and will also display images, giving you a view of what the completed ticket will look like.      </p> </li> <li> <p>When satisfied, select submit from the green button at the bottom. Your issue has now been created and will appear at the top of the issues with a \"#\" number assigned to it. </p> </li> </ol>"},{"location":"user/guide/opening-issues/#for-developers","title":"For developers","text":""},{"location":"user/guide/opening-issues/#labels","title":"Labels","text":"<p>Tickets have accompanying labels which will be assigned by the development team once reviewing the ticket. These labels aim to give a better description of the type of issue as well as keeping development on track with coordinated effort. During the development of the product some team members can be assigned to deal with only certain types of tickets. The team lead or technical lead on the project will upon reviewing the ticket assign the ticket to the correct team member and also add necessary labels. </p> <p></p> <p>Creators of the ticket will be informed of any activity with the ticket via email notification. This includes when tickets have been resolved or being assigned to development team members. Once the ticket has been resolved and closed a final notification will be sent via email stating that the ticket has been resolved/closed. </p>"},{"location":"user/guide/opening-issues/#ticket-sizing","title":"Ticket Sizing:","text":"<p>Each issue is sized according to its expected time to accomplish. When users report issues they should not add a size label to the ticket as developers will size their own tickets. Labels are rated by size with the following labels:  </p> Label Description <code>[N/A]</code> Applied to issues where size is not applicable. <code>[1]</code> It's quick I will have this done in about 1 hour. <code>[2]</code> Give me 2 hours and I will have it for you. <code>[5]</code> It will take between half a day and a full day. <code>[8]</code> This is a full-day job. <code>[13]</code> I'm going to need about a day and a half to two days. <code>[20]</code> It will take at least two to three days. <code>[40]</code> This will take a full week. <p>Tickets larger than <code>SIZE [8]</code> are usually broken down into smaller tickets/tasks to better display development progress. <code>SIZE [N/A]</code> labels are reserved for tasks which are difficult to estimate, like debugging and complex issues. </p>"},{"location":"user/guide/profile_management/","title":"Profile settings","text":""},{"location":"user/guide/profile_management/#managing-your-profile","title":"Managing your profile","text":"<p>Applicable roles: All users are able to update their profile details.</p> <p>To manage your account details, log in as normal, and you will be redirected to your dashboard. On this page, you will be able to view your activity and navigate to view the metadata you have created, organisations that you follow and groups that you are a member of. On the right-hand side of this page, you will see a green button, \u2018Profile Settings\u2019. Select this button to edit your account details.</p> <p></p> <p>Here you will be able to edit your contact information, affiliation, and occupation, and you will also have the option of changing your password.</p> <p></p>"},{"location":"user/guide/registering/","title":"Create an Account","text":"<p>In order to register on the site, navigate to 'sign up' on the top right hand corner of the page.</p> <p></p> <p>Then fill in the form below.</p> <p></p> <p>Please note that your username needs to be lowercase and you are required to have a password with a minimum of 8 characters.</p> <p>Once you have successfully registered, you can request to be a part of an organisation using the CRISP help-desk.</p> <p></p>"},{"location":"user/guide/search_metadata/","title":"Search Metadata","text":""},{"location":"user/guide/search_metadata/#search-metadata","title":"Search metadata","text":"<p>Users are able to search for metadata on the 'Metadata' tab. Depending on the user role, users can view public or private records. Users can search for data using different filters.</p>"},{"location":"user/guide/search_metadata/#1-search-metadata-by-text","title":"1. Search metadata by Text","text":"<p>Applicable roles: All</p> <p>Select 'Metadata' in the navigation bar, located horizontally at the top of the screen.</p> <p> You can use the search bar to look for specific metadata or you can filter through the results to find suitable records. To use the search bar, click on it and type in the term you are looking for. Click on the little magnifying glass located on the right-hand side of the search bar to see if any records match your search. </p> <p>Expected results: Searching by title, abstract, or by a unique identifier in the search bar will yield results that meet the search criteria.</p>"},{"location":"user/guide/search_metadata/#2-search-metadata-by-location","title":"2. Search metadata by Location","text":"<p>Applicable roles: All</p> <p>You can filter the records by their spatial extent to find the records that you are looking for. You can search by location using three methods: 1. Draw a grid: The pencil icon allows you to draw a rectangle over area of interest. 2. Draw a radius: The circle icon allows you to search using proximity radius over area of interest. 3. Select spatial layer: The layers icon allows you to select based on pre-existing boundary layers available on the system.</p> <p></p> <p>To filter by drawing a grid, click on the little pen in the top right-hand corner of the map.</p> <p></p> <p>Use the plus and minus icons in the top right corner of the map to zoom in and out (1), and use your mouse to pan around the map canvas by clicking down and dragging your cursor (when it looks like a hand). Click on the pen icon (2) and drag your cursor over the area you are finding metadata for. You should see a red rectangle appear over that area (3). If you are not happy with the area, click on the little pen to re-draw a selection.If you are happy with the select, select 'Apply'(4) </p> <p>To filter by proximity, click on the circle icon in the top right-hand corner of the map.</p> <p></p> <p>Use the plus and minus icons in the top right corner of the map to zoom in and out (1), and use your mouse to pan around the map canvas by clicking down and dragging your cursor (when it looks like a hand). Click on the circle icon (2) and drag from a point on the map. This will draw a buffer area around that point, based on a proximity radius. You should see a red circle appear over that area (3). If you are not happy with the area, click on the little pen to re-draw a selection.If you are happy with the select, select 'Apply'(4)</p> <p> </p> <p>To filter by spatial layers, click on the layers icon in the top right-hand corner of the map. </p> <p>Select the spatial layer you want to apply</p> <p> </p> <p>This example chose the Provinces layer.</p> <p> </p> <p>Once you have chosen a desired layer, click on a spatial feature to set the search area (the example selects North West Province). Note: There is no apply button for this search functionality, clicking on a desired spatial feature automatically applies the filter.The search area will automatically resize to the bounding box of the spatial feature selected and all records that intersect with that particular spatial feature will be returned.</p> <p> </p>"},{"location":"user/guide/search_metadata/#3-search-metadata-by-temporal-range","title":"3. Search metadata by Temporal range","text":"<p>Applicable roles: All</p> <p>You can filter metadata records using atemporal range. Set the temporal range by selecting a start date, end date, or both a start and end date depending on the temporal extent of the record you are searching for.</p> <p></p> <p>Click on the calendar icon, located on the right of the start and end date fields. To clear your results, select 'clear' and to set your extent to today's date, select 'today'.</p> <p>Please note that the calendar icon is not present in all browsers. In those browsers just click on the date fields and a calendar should appear where you can select a date.</p> <p></p>"},{"location":"user/guide/search_metadata/#4-search-metadata-by-organisation","title":"4. Search metadata by Organisation","text":"<p>Applicable roles: All</p> <p>You can search for records by the organisations that published them. To do this, simply select the organisation or multiple organisations from whom you would like to view their records. To deselect the organisations, just click on the little 'x' that will appear next to a selected organisation.</p> <p></p> <p>Click on the calendar icon, located on the right of the start and end date fields. To clear your results, select 'clear' and to set your extent to today's date, select 'today'.</p> <p>Note: As an anonymous user or a registered user who does not belong to the specific organisation you filtered by, you cannot see records that are private. This means that the number of records available may not be the number of records that appear.</p>"},{"location":"user/guide/search_metadata/#5-search-metadata-by-other-filters","title":"5. Search metadata by other filters","text":"<p>The other filters include:</p> <ol> <li>Harvest source</li> <li>Featured metadata records</li> <li>Tags</li> </ol> <p></p>"},{"location":"user/guide/search_metadata/#save-searches","title":"Save searches","text":"<p>Applicable roles: Registered users, organisational members, editors, publishers and system administrators.</p> <p>Registered users can save search parameters in order to be able to reproduce a search query at a future date.</p> <p>Navigate to 'Metadata' and select the desired filters. In the image below, the user searched by text, location and temporal range.</p> <p></p> <p>Once you have your desired records on screen, click the 'Save' icon, which is to the right of the 'Search\" icon, to save your search.</p> <p></p> <p>Once you select it, the icon will be filled.</p> <p></p> <p>To view your saved search select 'Saved Search, which is located in the drop-down menu under your username, and it will direct you to your saved searches.</p> <p></p> <p></p> <p>To reproduce a search, click on one of your previous searches and the site will automatically redirect you to the results for that search.</p>"},{"location":"user/guide/research/","title":"SANS 1878 research","text":"<p>6.1. Metadata shall be provided for geographic datasets and may, optionally, also be provided for aggregations of datasets, features and attributes of features.</p>"},{"location":"user/guide/research/#core-metadata-elements","title":"Core metadata elements","text":"<p>As described on Table2 - Core metadata for geographic datasets</p> Element Obligation and Condition Exists in stock CKAN Notes Dataset title Mandatory Yes Dataset reference date Mandatory No To be implemented Dataset responsible party Mandatory Yes* Need to make it mandatory Geographic location of the dataset (by four coordinates or by geographic identifier) Mandatory No (As seen on Annex D - Creating the South African community profile)To be implemented Dataset language Mandatory No To be implemented Dataset character set Mandatory No To be implemented Dataset topic category Mandatory No To be implemented Spatial resolution of the dataset Mandatory No (As seen on Annex D - Creating the South African community profile)To be implemented Abstract describing the dataset Mandatory Yes* Need to make it mandatory Distribution format* Mandatory No To be implemented Additional extent information for the dataset (vertical and temporal) Optional No Spatial representation type Mandatory No (As seen on Annex D - Creating the South African community profile)&lt;br /To be implemented Reference system Mandatory No (As seen on Annex D - Creating the South African community profile)To be implemented Lineage statement Mandatory No On-line resource Conditional Yes Metadata file identifier Mandatory Yes Metadata standard name Conditional No To be implemented Metadata standard version Conditional No To be implemented Metadata language Mandatory No To be implemented Metadata character set Mandatory No To be implemented Metadata point of contact Mandatory Yes Metadata date stamp Mandatory Yes"},{"location":"user/guide/research/#additional-elements","title":"Additional elements","text":"<p>As found scattered throughout the SANS 1878 document</p> Name Obligation and condition Notes hierarchyLevel Mandatory Unclear whether this should be implemented or not, as there is a question mark in the standard referenceSystemInfo Mandatory metadataMaintenance Optional purpose Mandatory acknowledgement Optional status Mandatory resourceMaintenance Optional descriptiveKeywords Optional resourceSpecificUsage Optional graphicOverview Optional resourceConstraints Optional These are the constraints applicable to the resource. Can be defined as either LegalConstraints or SecurityConstraints, or both MetadataConstraints Optional These apply to the metadata. Can be defined as either LegalConstraints or SecurityConstraints, or both"},{"location":"user/guide/research/#stac-api-research","title":"STAC API research","text":"<p>STAC is a standardized way to expose collections of spatial temporal data. If you are a provider of data about the earth needing to catalog your holdings, STAC is driving a uniform means for indexing assets.</p> <p>At its core, the SpatioTemporal Asset Catalog (STAC) specification provides a common structure for describing and cataloguing spatio-temporal assets.</p> <p>A spatio-temporal asset is any file that represents information about the earth captured in a certain space and time.</p>"},{"location":"user/guide/research/#the-stac-specification","title":"The STAC Specification","text":"<p>The STAC Specification consists of 4 semi-independent specifications. Each can be used alone, but they work best in concert with one another.</p> <ul> <li> <p>STAC Item is the core atomic unit, representing a single spatio-temporal asset as a GeoJSON feature plus datetime and links.</p> </li> <li> <p>STAC Catalog is a simple, flexible JSON file of links that provides a structure to organize and browse STAC Items. A series of best practices helps make recommendations for creating real world STAC Catalogs.</p> </li> <li> <p>STAC Collection is an extension of the STAC Catalog with additional information such as the extents, license, keywords, providers, etc that describe STAC Items that fall within the Collection.</p> </li> <li> <p>STAC API provides a RESTful endpoint that enables search of STAC Items, specified in OpenAPI, following OGC's WFS 3.</p> </li> </ul>"},{"location":"user/guide/research/#examples-of-stac-files","title":"Examples of STAC files","text":"<p>This JSON is what would be expected from an API that only implements STAC API - Core. It is a valid STAC Catalog with additional Links and a conformsTo attribute. In practice, most APIs will also implement other conformance classes, and those will be reflected in the links and conformsTo attribute. A more typical Landing Page example is in the overview document.</p> <p>This particular catalog provides both the ability to browse down to child Catalog objects through its child links, and also provides the search endpoint to be able to search across items in its collections. Note that some of those links are not required and other servers may provide different conformance classes and a different set of links.</p> <pre><code>{\n    \"stac_version\": \"1.0.0\",\n    \"id\": \"example-stac\",\n    \"title\": \"A simple STAC API Example\",\n    \"description\": \"This Catalog aims to demonstrate a simple landing page\",\n    \"type\": \"Catalog\",\n    \"conformsTo\" : [\n        \"https://api.stacspec.org/v1.0.0/core\"\n    ],\n    \"links\": [\n        {\n            \"rel\": \"self\",\n            \"type\": \"application/json\",\n            \"href\": \"https://stac-api.example.com\"\n        },\n        {\n            \"rel\": \"root\",\n            \"type\": \"application/json\",\n            \"href\": \"https://stac-api.example.com\"\n        },\n        {\n            \"rel\": \"service-desc\",\n            \"type\": \"application/vnd.oai.openapi+json;version=3.0\",\n            \"href\": \"https://stac-api.example.com/api\"\n        },\n        {\n            \"rel\": \"service-doc\",\n            \"type\": \"text/html\",\n            \"href\": \"https://stac-api.example.com/api.html\"\n        },\n        {\n            \"rel\": \"child\",\n            \"type\": \"application/json\",\n            \"href\": \"https://stac-api.example.com/catalogs/sentinel-2\"\n        },\n        {\n            \"rel\": \"child\",\n            \"type\": \"application/json\",\n            \"href\": \"https://stac-api.example.com/catalogs/landsat-8\"\n        }\n    ]\n}\n</code></pre> <p>For more information about STAC please visit https://github.com/radiantearth/stac-api-spec</p>"},{"location":"user/guide/research/#upload-metadata","title":"Upload Metadata","text":""},{"location":"user/guide/research/#add-metadata-via-file-upload","title":"Add Metadata via file upload","text":"<ul> <li>Metadata can be added via file upload on the Metadata page (http://{sitename}/dataset/)</li> <li>This supports xml, json and yaml files </li> </ul> <p>Please note the file needs to conform SANS 1878</p> <p>Below is an example of mandatory fields in xml format <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;``\n&lt;dataset&gt;\n        &lt;title&gt;test 2&lt;/title&gt;\n        &lt;MetadataStandardName&gt;SANS1878&lt;/MetadataStandardName&gt;\n        &lt;MetadataStandardVersion&gt;1&lt;/MetadataStandardVersion&gt;\n        &lt;notes&gt;Abstract from the dataset&lt;/notes&gt;\n        &lt;ResponsiblePartyIndividualName&gt;Hugh Mann&lt;/ResponsiblePartyIndividualName&gt;\n        &lt;ResponsiblePartyPositionName&gt;Person&lt;/ResponsiblePartyPositionName&gt;\n        &lt;ResponsiblePartyRole&gt;Point of contact&lt;/ResponsiblePartyRole&gt;\n        &lt;ResponsiblePartyElectronicMailAddress&gt;example@example.com&lt;/ResponsiblePartyElectronicMailAddress&gt;\n        &lt;IsoTopicCategory&gt;society&lt;/IsoTopicCategory&gt;\n        &lt;OwnerOrg&gt;test&lt;/OwnerOrg&gt;\n        &lt;private&gt;False&lt;/private&gt;\n        &lt;lineage_statement&gt;test&lt;/lineage_statement&gt;\n        &lt;spatial&gt;-22.1265,16.4699,-34.8212,32.8931, -22.1265&lt;/spatial&gt;\n        &lt;EquivalentScale&gt;0&lt;/EquivalentScale&gt;\n        &lt;SpatialRepresentationType&gt;001&lt;/SpatialRepresentationType&gt;\n        &lt;SpatialReferenceSystem&gt;EPSG:4326&lt;/SpatialReferenceSystem&gt;\n        &lt;ReferenceDate&gt;2004-11-03T01:00:00&lt;/ReferenceDate&gt;\n        &lt;ReferenceDateType&gt;Publication&lt;/ReferenceDateType&gt;\n        &lt;StampDate&gt;2004-11-03T00:12:00&lt;/StampDate&gt;\n        &lt;StampDateType&gt;Creation&lt;/StampDateType&gt;\n        &lt;DistributionFormatName&gt;format name&lt;/DistributionFormatName&gt;\n        &lt;DistributionFormatVersion&gt;1.0&lt;/DistributionFormatVersion&gt;\n        &lt;DatasetLanguage&gt;english&lt;/DatasetLanguage&gt;\n        &lt;MetadataLanguage&gt;English&lt;/MetadataLanguage&gt;\n        &lt;DatasetCharacterset&gt;UCS-2&lt;/DatasetCharacterset&gt;\n        &lt;MetadataCharacterset&gt;UCS-2&lt;/MetadataCharacterset&gt;\n&lt;/dataset&gt;\n</code></pre></p> <p>Below is an example of mandatory fields in yaml format</p> <pre><code>---\ndataset:\n  title: test-from-xml\n  MetadataStandardName: SANS1878\n  MetadataStandardVersion: 1\n  notes: Abstract from the dataset\n  ResponsiblePartyIndividualName: Hugh Mann\n  ResponsiblePartyPositionName: Person\n  ResponsiblePartyRole: Point of contact\n  ResponsiblePartyElectronicMailAddress: example@example.com\n  IsoTopicCategory: society\n  OwnerOrg: kartoza\n  private: False\n  lineage_statement: test\n  spatial: -22.1265,16.4699,-34.8212,32.8931, -22.1265\n  EquivalentScale: 0\n  SpatialRepresentationType: 001\n  SpatialReferenceSystem: EPSG:4326\n  ReferenceDate: 2004-11-03T01:00:00\n  ReferenceDateType: Publication\n  StampDate: 2004-11-03T00:12:00\n  StampDateType: Creation\n  DistributionFormatName: format name\n  DistributionFormatVersion: 1.0\n  DatasetLanguage: english\n  MetadataLanguage: English\n  DatasetCharacterset: UCS-2\n  MetadataCharacterset: UCS-2\n</code></pre> <p>Below is an example of mandatory fields in json format</p> <pre><code>{\n  \"dataset\": {\n    \"title\": \"test-from-xml\",\n    \"MetadataStandardName\": \"SANS1878\",\n    \"MetadataStandardVersion\": 1,\n    \"notes\": \"Abstract from the dataset\",\n    \"ResponsiblePartyIndividualName\": \"Hugh Mann\",\n    \"ResponsiblePartyPositionName\": \"Person\",\n    \"ResponsiblePartyRole\": \"Point of contact\",\n    \"ResponsiblePartyElectronicMailAddress\": \"example@example.com\",\n    \"IsoTopicCategory\": \"society\",\n    \"OwnerOrg\": \"kartoza\",\n    \"private\": \"False\",\n    \"lineage_statement\": \"test\",\n    \"spatial\": \"-22.1265,16.4699,-34.8212,32.8931, -22.1265\",\n    \"EquivalentScale\": 0,\n    \"SpatialRepresentationType\": 1,\n    \"SpatialReferenceSystem\": \"EPSG:4326\",\n    \"ReferenceDate\": \"2004-11-03T01:00:00\",\n    \"ReferenceDateType\": \"Publication\",\n    \"StampDate\": \"2004-11-03T00:12:00\",\n    \"StampDateType\": \"Creation\",\n    \"DistributionFormatName\": \"format name\",\n    \"DistributionFormatVersion\": 1,\n    \"DatasetLanguage\": \"english\",\n    \"MetadataLanguage\": \"English\",\n    \"DatasetCharacterset\": \"UCS-2\",\n    \"MetadataCharacterset\": \"UCS-2\"\n  }\n}\n</code></pre>"},{"location":"user/guide/searching-metadata/","title":"Index","text":""},{"location":"user/guide/searching-metadata/#search-metadata","title":"Search metadata","text":"<p>Users are able to search for metadata on the 'Metadata' tab. Depending on the user role, users can view public or private records. Users can search for data using different filters.</p>"},{"location":"user/guide/searching-metadata/#1-search-metadata-by-text","title":"1. Search metadata by Text","text":"<p>Applicable roles: All</p> <p>Select 'Metadata' in the navigation bar, located horizontally at the top of the screen.</p> <p> You can use the search bar to look for specific metadata or you can filter through the results to find suitable records. To use the search bar, click on it and type in the term you are looking for. Click on the little magnifying glass located on the right-hand side of the search bar to see if any records match your search. </p> <p>Expected results: Searching by title, abstract, or by a unique identifier in the search bar will yield results that meet the search criteria.</p>"},{"location":"user/guide/searching-metadata/#2-search-metadata-by-location","title":"2. Search metadata by Location","text":"<p>Applicable roles: All</p> <p>You can filter the records by their spatial extent to find the records that you are looking for. You can search by location using three methods: 1. Draw a grid: The pencil icon allows you to draw a rectangle over area of interest. 2. Draw a radius: The circle icon allows you to search using proximity radius over area of interest. 3. Select spatial layer: The layers icon allows you to select based on pre-existing boundary layers available on the system.</p> <p></p> <p>To filter by drawing a grid, click on the little pen in the top right-hand corner of the map.</p> <p></p> <p>Use the plus and minus icons in the top right corner of the map to zoom in and out (1), and use your mouse to pan around the map canvas by clicking down and dragging your cursor (when it looks like a hand). Click on the pen icon (2) and drag your cursor over the area you are finding metadata for. You should see a red rectangle appear over that area (3). If you are not happy with the area, click on the little pen to re-draw a selection.If you are happy with the select, select 'Apply'(4) </p> <p>To filter by proximity, click on the circle icon in the top right-hand corner of the map.</p> <p></p> <p>Use the plus and minus icons in the top right corner of the map to zoom in and out (1), and use your mouse to pan around the map canvas by clicking down and dragging your cursor (when it looks like a hand). Click on the circle icon (2) and drag from a point on the map. This will draw a buffer area around that point, based on a proximity radius. You should see a red circle appear over that area (3). If you are not happy with the area, click on the little pen to re-draw a selection.If you are happy with the select, select 'Apply'(4)</p> <p> </p> <p>To filter by spatial layers, click on the layers icon in the top right-hand corner of the map.</p> <p></p> <p>Select the spatial layer you want to apply.</p> <p> </p> <p>This example chose the Provinces layer.</p> <p> </p> <p>Once you have chosen a desired layer, click on a spatial feature to set the search area (the example selects North West Province). Note: There is no apply button for this search functionality, clicking on a desired spatial feature automatically applies the filter.The search area will automatically resize to the bounding box of the spatial feature selected and all records that intersect with that particular spatial feature will be returned.</p> <p> </p>"},{"location":"user/guide/searching-metadata/#3-search-metadata-by-temporal-range","title":"3. Search metadata by Temporal range","text":"<p>Applicable roles: All</p> <p>You can filter metadata records using atemporal range. Set the temporal range by selecting a start date, end date, or both a start and end date depending on the temporal extent of the record you are searching for.</p> <p></p> <p>Click on the calendar icon, located on the right of the start and end date fields. To clear your results, select 'clear' and to set your extent to today's date, select 'today'.</p> <p>Please note that the calendar icon is not present in all browsers. In those browsers just click on the date fields and a calendar should appear where you can select a date.</p> <p></p>"},{"location":"user/guide/searching-metadata/#4-search-metadata-by-organisation","title":"4. Search metadata by Organisation","text":"<p>Applicable roles: All</p> <p>You can search for records by the organisations that published them. To do this, simply select the organisation or multiple organisations from whom you would like to view their records. To deselect the organisations, just click on the little 'x' that will appear next to a selected organisation.</p> <p></p> <p>Click on the calendar icon, located on the right of the start and end date fields. To clear your results, select 'clear' and to set your extent to today's date, select 'today'.</p> <p>Note: As an anonymous user or a registered user who does not belong to the specific organisation you filtered by, you cannot see records that are private. This means that the number of records available may not be the number of records that appear.</p>"},{"location":"user/guide/searching-metadata/#5-search-metadata-by-other-filters","title":"5. Search metadata by other filters","text":"<p>The other filters include:</p> <ol> <li>Harvest source</li> <li>Featured metadata records</li> <li>Tags</li> </ol> <p></p>"},{"location":"user/manual/","title":"User Manual","text":"<p>This section of the documentation describes every page in the application and what the various components of that page do. The manual is intended to function as a reference for the application. For narrative/workflow-based tutorials, you may prefer to work through our user guide.</p> <ol> <li>Home Page: This is the 'landing page' that you arrive on when you open the site.</li> </ol> <p>The user manual aims to assist the user in learning the fundamentals of using the SAEOSS-portal platform. The goal of the documentation is to clear up any doubts or concerns related to workflows and will feature a page-by-page layout, making it easy for users to follow along.</p>"},{"location":"user/manual/#error-reporting","title":"Error Reporting","text":"<p>We take pride and care to ensure our work is factual, accurate, and informative. In the highly unlikely event that an error or bug is found, please report it through one of the following channels:</p> <p>GitHub Issues: GitHub is the preferred method of error reporting, ensuring reported errors are addressed in the quickest turnaround time possible. Read more about opening issues in the Developer Workflows</p> <p>Email: Errors can be raised via email through the following channels. However, this is not a recommended path as it has long turnaround times.</p> <p>Administrator: Errors can be raised with your administrator if affiliated with an organization. Administrators can escalate the error to developers if required.</p> <p>Crisp Interface: You can report errors directly through the Crisp interface. Read More</p>"},{"location":"user/manual/#next-home-screen","title":"Next: Home Screen","text":""},{"location":"user/manual/about/","title":"About","text":""},{"location":"user/manual/about/#previous-page-map","title":"Previous Page: Map","text":""},{"location":"user/manual/about/#about","title":"About","text":"<p>User can navigate to the page by select 'About' on the tab. Users will be able to read on the vision of the portal and the reason to contribute.</p> <p></p> <p></p>"},{"location":"user/manual/about/#next-page-help","title":"Next Page: Help","text":""},{"location":"user/manual/dashboard/","title":"Dashboard Page","text":""},{"location":"user/manual/dashboard/#the-previous-chapter-to-this-is-the-home-page","title":"The previous chapter to this is the Home Page","text":""},{"location":"user/manual/dashboard/#dashboard-page","title":"Dashboard Page","text":"<p>Once a user has logged in, the dashboard page will be displayed. This is a central notification hub for communications from the SAEOSS-Portal platform.</p> <p></p> <p>The dashboard is broken into 4 main sections, namely:</p> <ol> <li>News Feed: The news feed provides a user with all the recent activity of the groups and organizations they follow.</li> <li>My Metadata Records: Displays all the metadata uploaded by the user.</li> <li>My Organization: Displays all metadata the user forms a part of.</li> <li>My Groups: Displays all the groups the user forms a part of.</li> </ol>"},{"location":"user/manual/dashboard/#activity-button","title":"Activity Button","text":"<p>The activity button allows you to filter the activity by organization, group, or dataset. This allows you to see individual activity on specific topics of interest.</p> <p></p>"},{"location":"user/manual/dashboard/#news-feed","title":"News Feed","text":"<p>The news feed provides an overview of all recent activities of groups, organizations, or metadata you follow. This allows a user who is interested in a specific dataset/organization/group to be up to date with any new changes or assets in the system. Users can follow a group/organization/metadata dataset to receive these notifications. Learn more here: Following datasets/groups/organizations</p> <p></p>"},{"location":"user/manual/dashboard/#my-metadata-records","title":"My Metadata Records","text":"<p>This is a collection of all metadata records that you have published. Please confirm the validity of this.</p> <p></p>"},{"location":"user/manual/dashboard/#my-organizations","title":"My Organizations","text":"<p>In this tab, you will find a list of all organizations you have been added to. Administrators can add you to an organization, or you can be added to multiple organizations. This allows you to see any private metadata records for each individual organization.</p> <p></p>"},{"location":"user/manual/dashboard/#what-is-an-organization","title":"What is an organization?","text":""},{"location":"user/manual/dashboard/#my-groups","title":"My Groups","text":"<p>This tab displays all the groups you are a part of. You can be added to a single group or multiple groups.</p> <p></p>"},{"location":"user/manual/dashboard/#what-is-a-group","title":"What is a group?","text":""},{"location":"user/manual/dashboard/#profile-settings","title":"Profile Settings","text":"<p>By selecting the <code>Profile Settings</code> button, you can adjust your profile settings like your username, bio, password, change profile picture, and generate API Keys. This page is explained in detail here: Profile Settings</p> <p></p>"},{"location":"user/manual/dashboard/#next-chapter","title":"Next Chapter","text":"<p>In the next chapter, look at Profile Page</p>"},{"location":"user/manual/help/","title":"Help","text":""},{"location":"user/manual/help/#previous-page-about","title":"Previous Page:  About","text":""},{"location":"user/manual/help/#help-page","title":"Help Page","text":"<p>The help page is the documentation site. Here you can find out all there is to know and how things work on the SAEOSS-Platform. The documentation is quite informative and includes documentation for all workflows on the platform, however, if you find it lacking, please consider contributing to it or creating a GitHub issue so we may improve it.</p> <p>To contribute to this documentation, please review link here. This guide provides the workflow for contributing to the documentation and the process of creating a pull request.</p> <p>Alternatively, if you would like someone else to assist with your request, please review link here. This approach covers the necessary steps to create a GitHub ticket allowing your developers to address the issue.</p> <p>In all cases, your support and contributions are not only welcome but greatly appreciated. We thank you for your continued support!</p>"},{"location":"user/manual/help/#next-steps","title":"Next Steps","text":"<p>If you have made it thus far into the documentation, you may want to review the user guide, which provides workflow-based tutorials in the same page-by-page manner.</p>"},{"location":"user/manual/help/#next-page-user-roles","title":"Next Page: User Roles","text":""},{"location":"user/manual/home/","title":"Home Page","text":""},{"location":"user/manual/home/#previous-introduction","title":"Previous: Introduction","text":""},{"location":"user/manual/home/#home-page","title":"Home Page","text":"<p>When first accessing the SAEOSS-Portal, the home page is displayed. From the home page, users are able to create an account, login, or view metadata.</p> <p>Users are able to view any public metadata on the platform without the need to log in. Without an account, users are not able to be affiliated with any organization or group and will not be able to see any private data of that group or receive any notifications from the platform. </p> <p></p>"},{"location":"user/manual/home/#navigation","title":"Navigation","text":"<p>From the home page, there are many ways to navigate to various pages on the platform. These navigational links can be summarized into the following:</p> Link Image Explanation Home Page By clicking on the SANSA logo from anywhere on the platform, the home page will be displayed. Login / Sign-Up By selecting the login / sign-up button in the top right corner, users can log in or create an account. Social Media Links Various social media pages for SANSA can be accessed through the social media links on the left. Navbar / Navlinks / Navcards The navpane allows for easy access to all main pages of the platform."},{"location":"user/manual/home/#crisp-interface","title":"Crisp Interface","text":"<p>Note: This interface sends emails to the administrator and might yield a long turnaround time.</p> <p>The crisp chat interface allows you to directly contact administrators of the platform should you need assistance with a problem not listed in the documentation.</p>"},{"location":"user/manual/home/#workflows","title":"Workflows","text":""},{"location":"user/manual/home/#signup","title":"Signup","text":"<p>Users who wish to create a user account can do so by following these steps:</p> <ol> <li>From the home screen, select one of the signup buttons:</li> </ol> <p></p> <p>or</p> <p></p> <ol> <li>Complete the signup form with all the relevant details.  <p>NOTE: Fields marked with an <code>*</code> are mandatory fields and cannot be left blank.</p> </li> </ol> <p></p> <p>NOTE: Your password should contain at least <code>8</code> characters.</p>"},{"location":"user/manual/home/#login","title":"Login","text":"<p>Once a user account has been created, users can log in to the platform by following these steps:</p> <ol> <li> <p>From the home screen, select one of the following login buttons:</p> <p></p> <p>or</p> <p></p> </li> <li> <p>Complete the login form and click on login.</p> </li> </ol> <p></p> <ol> <li>When the dashboard is displayed, you have successfully logged in. </li> </ol> <p></p>"},{"location":"user/manual/home/#next-dashboard","title":"Next: Dashboard","text":""},{"location":"user/manual/map/","title":"Map","text":""},{"location":"user/manual/map/#previous-page-metadata","title":"Previous Page: Metadata","text":""},{"location":"user/manual/map/#map","title":"Map","text":"<p>This interface displays footprints of datasets in polygon format by displaying the boundary that is covered by the respective metadata record. The user is provided with a visual map to interact with to understand the extent, location and number of spatial Earth Observation datasets available. </p> <p>These are some of the components found on the map tab:</p> <ol> <li>Search filters: This provides a casual graphical interface to explore individual metadata records to discover items of interest in terms of content, time and location.This is where users can search for metadata by keywords and date.</li> <li>Layer: This is the individual records that have been made public. Users can select a layer to see the thumbnail of the metadata record.</li> <li>Zoom functionality: This allows users to zoom in and out on the map.</li> <li>Basemap options: This allows users to choose a specific basemap. </li> </ol>"},{"location":"user/manual/map/#next-page-about","title":"Next Page: About","text":""},{"location":"user/manual/metadata/","title":"Metadata","text":""},{"location":"user/manual/metadata/#previous-page-organisation","title":"Previous Page: Organisation","text":""},{"location":"user/manual/metadata/#metadata-capturing-and-publishing","title":"Metadata capturing and publishing","text":""},{"location":"user/manual/metadata/#create-metadata-record-in-owned-organisation-using-system-ui","title":"Create metadata record in owned organisation using System UI","text":"<p> Applicable roles: Metadata editor, metadata publisher and system administrator</p> <p>Method 1:</p> <p>Navigate to 'Metadata' and select 'Add metadata record'.</p> <p></p> <p>This will take you to the form that needs to be completed in order to create metadata record.Fill in all the necessary information about the record. All fields marked with an asterisk (*) are mandatory. The information you add will become the information that is available on the site about the record you are adding.  When adding the metadata record thumbnail, make sure the image URL is a public image link and not a private one. Remember to also make sure that the image ratio is 1:1 for the best results.</p> <p></p> <p>Method 2: Navigate to the organisation you belong to. You can do this by going to your profile and select 'Add metadata record' then fill out the form.</p> <p></p>"},{"location":"user/manual/metadata/#create-metadata-record-in-owned-organisation-using-xml-upload","title":"Create metadata record in owned organisation using XML upload","text":"<p>On the metadata page, select 'Add metadata record from xml file'.</p> <p></p> <p>Then select the XML file on your local machine.</p> <p>The xml file should look something like this: </p>"},{"location":"user/manual/metadata/#edit-metadata-record-using-system-ui","title":"Edit metadata record using system UI","text":"<p>Navigate to the record you want to edit and select 'manage' and make the changes as required then click on 'Update' at the bottom of the page.</p>"},{"location":"user/manual/metadata/#next-page-map","title":"Next Page: Map","text":""},{"location":"user/manual/organisation/","title":"Organisation","text":""},{"location":"user/manual/organisation/#previous-page-profile-settings","title":"Previous Page: Profile Settings","text":""},{"location":"user/manual/organisation/#organisation","title":"Organisation","text":"<p>Users can view all the organisations on this tab. If you have admin rights for certain organisations, you are able to manage your organisation from here. Additionally, if you have admin rights on the site, this is where you can add an organisations.</p>"},{"location":"user/manual/organisation/#managing-the-organisation","title":"Managing the organisation","text":"<p>Click on 'Organisation' to navigate to this tab and select the organisation you have admin rights over:</p> <p></p> <p>Select 'Manage'.</p> <p></p> <p>You are able to: 1. Edit information about the organisation. 2. View/edit metadata records belonging to the organisation. 3. Edit/add organisation members.</p> <p></p>"},{"location":"user/manual/organisation/#adding-members-to-the-organisation","title":"Adding members to the organisation","text":"<p>To add a member: 1. Select 'Members' 2. Select Add Member'</p> <p></p> <p>This will take you to the page below, where you are required to either add member by username (if they are already registered on the site) or to add user by email. </p> <p></p> <p>Then you are required to define the user role of the user. More information regarding the different user roles can be found here</p> <p></p> <p>Finally, click on 'Add member'.</p>"},{"location":"user/manual/organisation/#editting-organisational-member-user-roles","title":"Editting organisational member user roles","text":"<p>If the member's user role needs to be updated, user can click on the icon shown below next to the member that requires editting.</p> <p></p> <p>You can then change the member's user role. Please note that you cannot change your own user role.</p> <p></p>"},{"location":"user/manual/organisation/#removing-members-from-the-organisation","title":"Removing members from the organisation","text":"<p>You can remove members from your organisation by clicking on the icon shown below next to the member's name:</p> <p></p>"},{"location":"user/manual/organisation/#next-page-metadata","title":"Next Page: Metadata","text":""},{"location":"user/manual/profile-page/","title":"Profile","text":""},{"location":"user/manual/profile-page/#previous-page-dashboard","title":"Previous Page: Dashboard","text":""},{"location":"user/manual/profile-page/#profile-page","title":"Profile Page","text":"<p>The profile page provides a preview of what your profile will look like when viewed by other users on the platform. Additionally, it's also a collector for information regarding your profile.</p> <p>This page is broken into 4 main sections:</p> <ul> <li>Preview</li> <li>Metadata Records</li> <li>Activity Stream</li> <li>API Tokens </li> </ul>"},{"location":"user/manual/profile-page/#preview","title":"Preview","text":"<p>When you click on 'Profile', the preview of your account will be displayed.</p> <p></p> <p>As seen above, your first name, username, email address, day of registration, account status and API key are displayed on the left. Since this user has not generated an API key yet, 'None' is returned. You are also able to see the number of metadata records you have uploaded, how many followed you have and your biography (if added by user).</p>"},{"location":"user/manual/profile-page/#metadata-records","title":"Metadata Records","text":"<p>You are able to see your created metadata records in this section. You are also allowed to add metadata record on this tab when you select 'Add Metadata record'.</p> <p></p>"},{"location":"user/manual/profile-page/#activity-stream","title":"Activity Stream","text":"<p>This is where you see the latest activities on your account. This includes account registration, metadata record upload</p> <p></p>"},{"location":"user/manual/profile-page/#api-tokens","title":"API Tokens","text":"<p>This is where user can create an API token, which can later be used to upload data.</p> <p></p>"},{"location":"user/manual/profile-page/#next-page-profile-settings","title":"Next Page: Profile Settings","text":""},{"location":"user/manual/profile-settings/","title":"Profile Settings Page","text":""},{"location":"user/manual/profile-settings/#previous-page-profile-page","title":"Previous Page: Profile Page","text":""},{"location":"user/manual/profile-settings/#profile-settings","title":"Profile Settings","text":"<p>On the profile settings page, all user profile-related settings can be managed. This page can be accessed by clicking on the <code>Profile Settings</code> button on the dashboard page or from anywhere on the platform by following the steps below:</p> <ol> <li>In the top right-hand corner, click on your user profile name.</li> </ol> <p></p> <ol> <li>Select Profile settings from the popup menu.</li> </ol> <p></p> <ol> <li>The profile settings page will now be displayed.</li> </ol> <p></p>"},{"location":"user/manual/profile-settings/#key-elements","title":"Key Elements","text":"<p>The profile settings page consists of three main sections, each consisting of key elements:</p> <ul> <li> <p>Change details: Users can change public details. This refers to username, email, and about. All of this information will be in the public domain, and other users of the platform will be able to see this information.   </p> </li> <li> <p>Extra details: Users can add extra details like affiliations and professional occupations.   </p> </li> <li> <p>Change Password: Users can change their password from this section if required.   </p> </li> <li> <p>Generate API Key: Redirects to the profile API tokens page. To learn more about API tokens, follow this link. Read more</p> </li> </ul>"},{"location":"user/manual/profile-settings/#next-page-organisations","title":"Next Page Organisations","text":""},{"location":"user/manual/user-roles/","title":"User roles","text":"<p>Access to data and functionalities on the SAEOSS-Portal platform is governed by user roles and permissions. User roles define a default set of permissions generally assigned to different types of users and linked to their profiles. When a new user profile is registered, it is automatically assigned to the general user role.</p> <p>Individual permissions can be set by the administrator for user profiles to provide additional access to data or functionalities if required. This means that even though a user profile is assigned to the general user role, it can have access to functionalities or permissions typically reserved for admin users. Additional user roles can also be created, or default user role permissions can be changed by an administrator with the relevant access.</p>"},{"location":"user/manual/user-roles/#six-types-of-users","title":"Six types of users","text":""},{"location":"user/manual/user-roles/#1-anonymous-user","title":"1. Anonymous user","text":"<p>This user has search, viewing and downloading capabilities of public metadata records. This user role is not required to register, nor are they a member of any organisation.</p> <p></p>"},{"location":"user/manual/user-roles/#2-registered-user","title":"2. Registered user","text":"<p>This is a general user that has registered themselves on the system. By registering, this user has access to additional features such as the ability to save and delete searches, alter profile information, generate API key. This user is not a member of any organisation, but can access public metadata record.</p> <p></p> <p>User can register by filling out this form. </p>"},{"location":"user/manual/user-roles/#3-member","title":"3. Member","text":"<p>This user role is a privileged user, who is part of a known institution or company. They must register on the SAEOSS Portal and provide additional information about their affiliation. This role is a member of an organisation that can view private metadata records that belong to the organisation they belong to.</p> <p></p> <p>If you would like to see which organisation you are a part of, you can click on the drop-down menu located under your username and select 'Dashboard'. Then navigate to the 'My Organisation' tab.</p>"},{"location":"user/manual/user-roles/#4-editor","title":"4. Editor","text":"<p>This user role is a privileged user, who is part of a known institution or company. They must register on the SAEOSS Portal and provide additional information about their affiliation. This role is a member of an organisation that has permission to create (but not publicly publish), edit and delete metadata records on the portal in the organisations where they are a member.</p> <p></p>"},{"location":"user/manual/user-roles/#5-publisher","title":"5. Publisher","text":"<p>This user role is a privileged user who is part of a known institution. They have the power to publish metadata records for consumption by the public as well as to create, delete and edit metadata records that are owned by their organisation. Metadata publishers are also able to manage other users\u2019 permissions to their metadata records. There can be multiple users with this role within an organisation.This is the highest level of access on an organisational level.</p> <p></p>"},{"location":"user/manual/user-roles/#6-system-administrator","title":"6. System Administrator","text":"<p>A user role that possesses full access permissions, being able to configure and maintain all aspects of the SAEOSS Portal.</p> <p></p> <p>All users have access to the following pages:</p> <p>1. Metadata: Users can search and view public metadata. They can filter by title, location, time, organisation, harvest source, features and tags.</p> <p> 2. Map: Users can search and view different layers.  3. Organisation: Users can navigate the organisations page and view the list of organisations on the portal. When users click on the organisations, it navigates to the profile of the organisation, where the users can view the organisation's public metadata records, activity stream, information about the organisation under 'About' and social media links for the organisation.  4. About: Users can access everything on the About page. 5. Help: Users can access the Help page, which takes them directly to this documentation.</p>"},{"location":"user/manual/user-roles/#next-page-user-guide","title":"Next Page: User Guide","text":""},{"location":"user/quickstart/","title":"Quickstart","text":""},{"location":"user/quickstart/#installing-the-product","title":"Installing the Product","text":""},{"location":"user/quickstart/#getting-started","title":"Getting Started","text":"<p>The workflows described in this section is designed to be 5 minute workflows to get users started with using the platform. For more detailed workflows please review the user guide section or the user manual section which describes the platform in page-by-page detail.</p>"},{"location":"user/quickstart/#accessing-the-saeoss-portal","title":"Accessing the SAEOSS-portal","text":"<p>1) From your browser navigate to {TBD} 2) Create a user account if you don't have one. Register 3) Browse, view and download metadata.</p>"},{"location":"user/quickstart/#register-a-new-account","title":"Register a new account","text":"<p>1) From the home page, in the top right corner locate an click on register. 2) Complete the registration form. Make sure all required fields, marked with an <code>*</code> have been completed. 3) Finally click on register account.</p>"},{"location":"user/quickstart/#browse-view-and-download-metadata","title":"Browse, view and download metadata","text":"<p>1) From the home page click on <code>Metadata</code> located in the navigation bar. 2) Search for relevant metadata using the search and filter fields in the left pane 3) Click on the title of appropriate metadata result to view the metadata record 4) Click on <code>explore</code> to preview or download the metadata record</p>"}]}